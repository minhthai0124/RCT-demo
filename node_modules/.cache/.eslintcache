[{"/home/nl/Documents/demo-webRTC/demo-app/src/index.js":"1","/home/nl/Documents/demo-webRTC/demo-app/src/reportWebVitals.js":"2","/home/nl/Documents/demo-webRTC/demo-app/src/app/App.js":"3","/home/nl/Documents/demo-webRTC/demo-app/src/app/store.js":"4","/home/nl/Documents/demo-webRTC/demo-app/src/pages/index.js":"5","/home/nl/Documents/demo-webRTC/demo-app/src/app/rootReducer.js":"6","/home/nl/Documents/demo-webRTC/demo-app/src/app/HOCs/asyncImport.js":"7","/home/nl/Documents/demo-webRTC/demo-app/src/pages/Teacher.jsx":"8","/home/nl/Documents/demo-webRTC/demo-app/src/pages/Student.jsx":"9","/home/nl/Documents/demo-webRTC/demo-app/src/pages/TopPage.jsx":"10","/home/nl/Documents/demo-webRTC/demo-app/src/app/routes.js":"11","/home/nl/Documents/demo-webRTC/demo-app/src/utils/notifications.js":"12","/home/nl/Documents/demo-webRTC/demo-app/src/pages/LiveRoom.jsx":"13","/home/nl/Documents/demo-webRTC/demo-app/src/pages/StreamComponent.jsx":"14"},{"size":1003,"mtime":1618301016374,"results":"15","hashOfConfig":"16"},{"size":354,"mtime":1618202381767,"results":"17","hashOfConfig":"16"},{"size":235,"mtime":1618278548667,"results":"18","hashOfConfig":"16"},{"size":598,"mtime":1618278541931,"results":"19","hashOfConfig":"16"},{"size":345,"mtime":1618819970785,"results":"20","hashOfConfig":"16"},{"size":211,"mtime":1618224511957,"results":"21","hashOfConfig":"16"},{"size":695,"mtime":1618202569148,"results":"22","hashOfConfig":"16"},{"size":7149,"mtime":1618819160327,"results":"23","hashOfConfig":"16"},{"size":7842,"mtime":1618808601539,"results":"24","hashOfConfig":"16"},{"size":868,"mtime":1618824131045,"results":"25","hashOfConfig":"16"},{"size":340,"mtime":1618824091192,"results":"26","hashOfConfig":"16"},{"size":1377,"mtime":1618300625434,"results":"27","hashOfConfig":"16"},{"size":9329,"mtime":1618911623442,"results":"28","hashOfConfig":"16"},{"size":596,"mtime":1618911555290,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1rsin4h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":3,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nl/Documents/demo-webRTC/demo-app/src/index.js",[],["61","62"],"/home/nl/Documents/demo-webRTC/demo-app/src/reportWebVitals.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/app/App.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/app/store.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/pages/index.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/app/rootReducer.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/app/HOCs/asyncImport.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/pages/Teacher.jsx",["63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79"],"import React, { useState, useEffect, useRef } from 'react'\nimport RTCMultiConnection from 'rtcmulticonnection'\nimport { useRouteMatch } from 'react-router'\nimport { Form, Button, Row, Col, Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport Toast from '../utils/notifications'\n\nfunction TeacherPage() {\n  const history = useHistory()\n  const match = useRouteMatch()\n  const userState = history?.location?.state?.user || {\n    name: '',\n    camera: true,\n    micro: true,\n    role: 'host'\n  }\n\n  const [user, setUser] = useState(userState)\n  const [show, setShow] = useState(false)\n\n  const connection = new RTCMultiConnection()\n  connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/'\n\n  connection.session = {\n    audio: userState.micro,\n    video: userState.camera,\n    data: true\n  }\n\n  connection.sdpConstraints.mandatory = {\n    OfferToReceiveAudio: true,\n    OfferToReceiveVideo: true\n  }\n\n  connection.mediaConstraints = {\n      video: true,\n      audio: true\n  }\n  console.log('connection.channel', connection.channel)\n\n  const refLocal = useRef(null)\n  const refRemote = useRef(null)\n\n  connection.onstream = (event) => {\n    delete event.mediaElement.id\n    const video = event.mediaElement\n\n    if(event.type === 'local') {\n      refLocal.current.id = event.streamId\n      refLocal.current.appendChild(video)\n    }\n    if(event.type === 'remote') {\n      refLocal.current.id = event.streamId\n      refRemote.current.appendChild(video)\n    }\n  }\n\n  connection.extra = {\n    ...user\n  }\n  console.log('connection.extra',connection.extra)\n\n  let roomId = match?.params?.uuid || 1\n\n  useEffect(() => {\n    if(!history?.location?.state?.user) {\n      setShow(true)\n    } else {\n      connection.user = user\n      connection.onNewParticipant = function(participantId, userPreferences) {\n        console.log('participantId', participantId)\n        console.log('userPreferences', userPreferences)\n        // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n        userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n        userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n\n        // userPreferences.dontAttachStream = false // according to situation\n        // userPreferences.dontGetRemoteStream = false  // according to situation\n\n        // below line must be included. Above all lines are optional.\n        // if below line is NOT included \"join-request\" will be considered rejected.\n        connection.acceptParticipationRequest(participantId, userPreferences)\n      }\n      connection.openOrJoin(roomId)\n      Toast.success('You are joining the class!!!', '')\n    }\n  }, [roomId,history])\n\n  const handleChangeUser = (name, value) => {\n    setUser(prevTags => {\n      return {\n        ...prevTags,\n        [name]: value\n      }\n    })\n  }\n  const handleChangeSwitch = (name, value) => {\n    setUser(prevTags => {\n      return {\n        ...prevTags,\n        [name]: !value\n      }\n    })\n  }\n\n  const handleClose = () => setShow(false)\n  // const handleShow = () => setShow(true)\n\n\n  connection.onopen = function(event) {\n    console.log('event',event);\n    var remoteUserId = event.userid;\n\n    console.log('remoteUserId',remoteUserId)\n    console.log('users ', connection.getAllParticipants())\n\n  };\n\n  connection.onNewParticipant = function(participantId, userPreferences) {\n    console.log('participantId', participantId)\n    console.log('userPreferences', userPreferences)\n    // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n    userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n    userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n\n    // userPreferences.dontAttachStream = false // according to situation\n    // userPreferences.dontGetRemoteStream = false  // according to situation\n\n    // below line must be included. Above all lines are optional.\n    // if below line is NOT included \"join-request\" will be considered rejected.\n    connection.acceptParticipationRequest(participantId, userPreferences)\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    connection.user = user\n    // roomId = connection.token()\n    connection.openOrJoin(roomId)\n    console.log('connection.onopen', connection.onopen)\n\n    Toast.success('You are joining the class!!!', '')\n    history.push(history.location.pathname, {user})\n    handleClose()\n    return false\n  }\n  console.log('connection', connection)\n  console.log('connection.getAllParticipants', connection.getAllParticipants())\n  console.log('connection.peers', connection.peers)\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>JOIN CLASS ROOM</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Name\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  value={user.name}\n                  onChange={(event) => handleChangeUser('name', event.target.value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Camera\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"camera\"\n                  label=\"ON/OFF\"\n                  checked={user.camera}\n                  onChange={() => handleChangeSwitch('camera', user.camera)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                micro\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"micro\"\n                  label=\"ON/OFF\"\n                  checked={user.micro}\n                  onChange={() => handleChangeSwitch('micro', user.micro)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Join room</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"12\">\n          <h4>Student</h4>\n          <div ref={refRemote}></div>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"6\">\n          <hr />\n          <div ref={refLocal}></div>\n          <p>Teacher: {user.name}</p>\n          <hr />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default TeacherPage\n","/home/nl/Documents/demo-webRTC/demo-app/src/pages/Student.jsx",["80","81","82","83","84","85","86","87"],"import React, { useState, useRef, useEffect } from \"react\"\nimport RTCMultiConnection from \"rtcmulticonnection\"\nimport { useRouteMatch } from \"react-router\"\nimport { Form, Button, Row, Col, Modal } from \"react-bootstrap\"\nimport { useHistory } from \"react-router-dom\"\n\nimport Toast from \"../utils/notifications\"\n\nfunction StudentPage() {\n  const history = useHistory()\n  const match = useRouteMatch()\n  const userState = history?.location?.state?.user || {\n    name: \"\",\n    camera: true,\n    micro: true,\n    role: \"guest\",\n  }\n\n  const [user, setUser] = useState(userState)\n  const [show, setShow] = useState(false)\n\n  const handleChangeUser = (name, value) => {\n    setUser((prevTags) => {\n      return {\n        ...prevTags,\n        [name]: value,\n      }\n    })\n  }\n  const handleChangeSwitch = (name, value) => {\n    setUser((prevTags) => {\n      return {\n        ...prevTags,\n        [name]: !value,\n      }\n    })\n  }\n\n  const handleClose = () => setShow(false)\n  // const handleShow = () => setShow(true)\n\n  const connection = new RTCMultiConnection()\n  connection.socketURL = \"https://rtcmulticonnection.herokuapp.com:443/\"\n\n  connection.session = {\n    audio: userState.micro,\n    video: userState.camera,\n    data: true,\n  }\n\n  connection.sdpConstraints.mandatory = {\n    OfferToReceiveAudio: true,\n    OfferToReceiveVideo: true,\n  }\n\n  connection.mediaConstraints = {\n    video: true,\n    audio: true,\n  }\n  console.log(\"connection.channel\", connection.channel)\n\n  const refLocal = useRef(null)\n  const refRemote = useRef(null)\n\n  connection.onstream = (event) => {\n    delete event.mediaElement.id\n    const video = event.mediaElement\n\n    console.log(\"connection.socket\", connection.socket)\n\n    if (event.type === \"local\") {\n      refLocal.current.id = event.streamId\n      refLocal.current.appendChild(video)\n    }\n    if (event.type === \"remote\") {\n      refLocal.current.id = event.streamId\n      refRemote.current.appendChild(video)\n    }\n  }\n\n  connection.extra = {\n    ...user,\n  }\n\n  connection.addStream({\n    data: true,\n  })\n\n  const userPreferences = {\n    extra: connection.extra,\n    localPeerSdpConstraints: {\n      OfferToReceiveAudio: true,\n      OfferToReceiveVideo: true,\n    },\n    remotePeerSdpConstraints: {\n      OfferToReceiveAudio: true,\n      OfferToReceiveVideo: true,\n    },\n    isOneWay: false,\n    isDataOnly: false,\n    dontGetRemoteStream: false,\n    dontAttachLocalStream: false,\n    connectionDescription: {\n      remoteUserId: connection.userid,\n      message: {\n        newParticipationRequest: true,\n        isOneWay: false,\n        isDataOnly: false,\n        localPeerSdpConstraints: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true,\n        },\n        remotePeerSdpConstraints: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true,\n        },\n      },\n      sender: connection.userid,\n    },\n    successCallback: function () {\n      //\n    },\n  }\n  let roomId = match?.params?.uuid || 1\n\n  useEffect(() => {\n    if (!history?.location?.state?.user) {\n      setShow(true)\n    } else {\n      // history.push('/')\n      connection.acceptParticipationRequest(connection.userid, userPreferences)\n      connection.peers.send(user)\n      connection.openOrJoin(roomId)\n      // connection.peers.send(user)\n      Toast.success(\"You are joining the class!!!\", \"\")\n      // connection.onNewParticipant(connection.userid, userPreferences)\n    }\n  }, [roomId])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    connection.user = user\n    history.push(history.location.pathname, { user })\n\n    // connection.onNewParticipant = function(participantId, userPreferences) {\n    //   console.log('participantId', participantId)\n    //   console.log('userPreferences', userPreferences)\n    //   // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n    //   userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n    //   userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n\n    //   // userPreferences.dontAttachStream = false // according to situation\n    //   // userPreferences.dontGetRemoteStream = false  // according to situation\n\n    //   // below line must be included. Above all lines are optional.\n    //   // if below line is NOT included \"join-request\" will be considered rejected.\n    //   connection.acceptParticipationRequest(participantId, userPreferences)\n\n    //   console.log('saaaa')\n    //   connection.openOrJoin(roomId)\n    //   Toast.success('You are joining the class!!!', '')\n    // }\n\n    connection.openOrJoin(roomId)\n    handleClose()\n    history.push(history.location.pathname, {user})\n    Toast.success(\"You are joining the class!!!\", \"\")\n    console.log(\"connection.userid\", connection.userid)\n    // connection.peers.send(user)\n    // connection.send(user)\n    connection.acceptParticipationRequest(connection.userid, userPreferences)\n    return false\n  }\n  console.log(\"connection\", connection)\n  console.log(\"getAllParticipants\", connection.getAllParticipants().length)\n  console.log(\"connection.peers\", connection.peers)\n  console.log(\"connection.peers.getLength\", connection.peers.getLength())\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>JOIN CLASS ROOM</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Name\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  value={user.name}\n                  onChange={(event) =>\n                    handleChangeUser(\"name\", event.target.value)\n                  }\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Camera\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"camera\"\n                  label=\"ON/OFF\"\n                  checked={user.camera}\n                  onChange={() => handleChangeSwitch(\"camera\", user.camera)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                micro\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"micro\"\n                  label=\"ON/OFF\"\n                  checked={user.micro}\n                  onChange={() => handleChangeSwitch(\"micro\", user.micro)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Join room</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"12\">\n          <h4>Student</h4>\n          <div ref={refRemote}></div>\n        </Col>\n        <Col xs lg=\"12\">\n          <h4>Teacher</h4>\n          {/* <div ref={refRemote}></div> */}\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"6\">\n          <hr />\n          <div ref={refLocal}></div>\n          <p>Student: {user.name}</p>\n          <hr />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default StudentPage\n","/home/nl/Documents/demo-webRTC/demo-app/src/pages/TopPage.jsx",[],"/home/nl/Documents/demo-webRTC/demo-app/src/app/routes.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/utils/notifications.js",[],"/home/nl/Documents/demo-webRTC/demo-app/src/pages/LiveRoom.jsx",["88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"/home/nl/Documents/demo-webRTC/demo-app/src/pages/StreamComponent.jsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":40,"column":3,"nodeType":"112","messageId":"113","endLine":40,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":62,"column":3,"nodeType":"112","messageId":"113","endLine":62,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":72,"column":9,"nodeType":"112","messageId":"113","endLine":72,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":73,"column":9,"nodeType":"112","messageId":"113","endLine":73,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":88,"column":6,"nodeType":"116","endLine":88,"endColumn":22,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"111","line":112,"column":5,"nodeType":"112","messageId":"113","endLine":112,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":112,"column":31,"nodeType":"120","messageId":"121","endLine":112,"endColumn":32,"fix":"122"},{"ruleId":"118","severity":1,"message":"119","line":113,"column":36,"nodeType":"123","messageId":"121","endLine":113,"endColumn":37,"fix":"124"},{"ruleId":"110","severity":1,"message":"111","line":115,"column":5,"nodeType":"112","messageId":"113","endLine":115,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":116,"column":5,"nodeType":"112","messageId":"113","endLine":116,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":118,"column":4,"nodeType":"120","messageId":"121","endLine":118,"endColumn":5,"fix":"125"},{"ruleId":"110","severity":1,"message":"111","line":121,"column":5,"nodeType":"112","messageId":"113","endLine":121,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":122,"column":5,"nodeType":"112","messageId":"113","endLine":122,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":141,"column":5,"nodeType":"112","messageId":"113","endLine":141,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":148,"column":3,"nodeType":"112","messageId":"113","endLine":148,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":149,"column":3,"nodeType":"112","messageId":"113","endLine":149,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":150,"column":3,"nodeType":"112","messageId":"113","endLine":150,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":60,"column":3,"nodeType":"112","messageId":"113","endLine":60,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":69,"column":5,"nodeType":"112","messageId":"113","endLine":69,"endColumn":16},{"ruleId":"114","severity":1,"message":"126","line":138,"column":6,"nodeType":"116","endLine":138,"endColumn":14,"suggestions":"127"},{"ruleId":"110","severity":1,"message":"111","line":168,"column":5,"nodeType":"112","messageId":"113","endLine":168,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":174,"column":3,"nodeType":"112","messageId":"113","endLine":174,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":175,"column":3,"nodeType":"112","messageId":"113","endLine":175,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":176,"column":3,"nodeType":"112","messageId":"113","endLine":176,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":177,"column":3,"nodeType":"112","messageId":"113","endLine":177,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":71,"column":5,"nodeType":"112","messageId":"113","endLine":71,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":74,"column":5,"nodeType":"112","messageId":"113","endLine":74,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":91,"column":7,"nodeType":"112","messageId":"113","endLine":91,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":91,"column":58,"nodeType":"120","messageId":"121","endLine":91,"endColumn":59,"fix":"128"},{"ruleId":"110","severity":1,"message":"111","line":101,"column":5,"nodeType":"112","messageId":"113","endLine":101,"endColumn":16},{"ruleId":"118","severity":1,"message":"119","line":101,"column":28,"nodeType":"120","messageId":"121","endLine":101,"endColumn":29,"fix":"129"},{"ruleId":"110","severity":1,"message":"111","line":108,"column":3,"nodeType":"112","messageId":"113","endLine":108,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":111,"column":5,"nodeType":"112","messageId":"113","endLine":111,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":115,"column":7,"nodeType":"112","messageId":"113","endLine":115,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":117,"column":7,"nodeType":"112","messageId":"113","endLine":117,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":137,"column":9,"nodeType":"112","messageId":"113","endLine":137,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":138,"column":9,"nodeType":"112","messageId":"113","endLine":138,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":145,"column":11,"nodeType":"112","messageId":"113","endLine":145,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":148,"column":11,"nodeType":"112","messageId":"113","endLine":148,"endColumn":22},{"ruleId":"110","severity":1,"message":"111","line":151,"column":13,"nodeType":"112","messageId":"113","endLine":151,"endColumn":24},{"ruleId":"110","severity":1,"message":"111","line":165,"column":7,"nodeType":"112","messageId":"113","endLine":165,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":187,"column":7,"nodeType":"112","messageId":"113","endLine":187,"endColumn":18},{"ruleId":"114","severity":1,"message":"130","line":209,"column":6,"nodeType":"116","endLine":209,"endColumn":23,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connection' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["134"],"semi","Extra semicolon.","ExpressionStatement","extraSemi",{"range":"135","text":"136"},"VariableDeclaration",{"range":"137","text":"138"},{"range":"139","text":"140"},"React Hook useEffect has missing dependencies: 'connection', 'history?.location?.state?.user', 'user', and 'userPreferences'. Either include them or remove the dependency array.",["141"],{"range":"142","text":"143"},{"range":"144","text":"145"},"React Hook useEffect has missing dependencies: 'checkUser', 'connection', and 'user'. Either include them or remove the dependency array.",["146"],"no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},[3175,3185],")\n    var",[3207,3227],"userid\n\n    console",[3323,3339],"}\n\n  connection",{"desc":"149","fix":"150"},[2437,2445],")\n    }",[2709,2715],")\n  }",{"desc":"151","fix":"152"},"Update the dependencies array to be: [roomId, history, connection, user]",{"range":"153","text":"154"},"Update the dependencies array to be: [connection, history?.location?.state?.user, roomId, user, userPreferences]",{"range":"155","text":"156"},"Update the dependencies array to be: [roomId, history, connection, user, checkUser]",{"range":"157","text":"158"},[2696,2712],"[roomId, history, connection, user]",[3438,3446],"[connection, history?.location?.state?.user, roomId, user, userPreferences]",[6404,6421],"[roomId, history, connection, user, checkUser]"]