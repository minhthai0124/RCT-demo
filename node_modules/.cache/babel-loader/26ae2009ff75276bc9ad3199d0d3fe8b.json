{"ast":null,"code":"/**\n * Create the store with dynamic reducers\n */\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga'; //  import {\n//    changeLocationMiddleware,\n//    handleHttpRequestMiddleware,\n//    changeLocationVoteMiddleware\n//  } from '../middleware'\n\nimport createReducer from './rootReducer';\nexport default function configureStore(initialState = {}, history) {\n  let composeEnhancers = compose;\n  const reduxSagaMonitorOptions = {}; // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n\n  /* istanbul ignore next */\n\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    /* eslint-disable no-underscore-dangle */\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}); // NOTE: Uncomment the code below to restore support for Redux Saga\n    // Dev Tools once it supports redux-saga version 1.x.x\n    // if (window.__SAGA_MONITOR_EXTENSION__)\n    //   reduxSagaMonitorOptions = {\n    //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n    //   }\n\n    /* eslint-enable */\n  }\n\n  const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions); // Create the store with two middlewares\n  // 1. sagaMiddleware: Makes redux-sagas work\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n\n  const middlewares = [sagaMiddleware, routerMiddleware(history) //  changeLocationMiddleware,\n  //  changeLocationVoteMiddleware,\n  //  handleHttpRequestMiddleware\n  ];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const store = createStore(createReducer(), initialState, composeEnhancers(...enhancers));\n  const storeExtend = Object.assign(store); // Extensions\n\n  storeExtend.runSaga = sagaMiddleware.run;\n  storeExtend.injectedReducers = {}; // Reducer registry\n\n  storeExtend.injectedSagas = {}; // Saga registry\n  // Make reducers hot reloadable, see http://mxs.is/googmo\n\n  /* istanbul ignore next */\n\n  if (module.hasOwnProperty('hot')) {\n    module.hot.accept('./rootReducer.js', () => {\n      storeExtend.replaceReducer(createReducer(storeExtend.injectedReducers));\n    });\n  }\n\n  return storeExtend;\n}","map":{"version":3,"sources":["/home/nl/Documents/demo-webRTC/demo-app/src/app/store.js"],"names":["createStore","applyMiddleware","compose","routerMiddleware","createSagaMiddleware","createReducer","configureStore","initialState","history","composeEnhancers","reduxSagaMonitorOptions","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","middlewares","enhancers","store","storeExtend","Object","assign","runSaga","run","injectedReducers","injectedSagas","module","hasOwnProperty","hot","accept","replaceReducer"],"mappings":"AAAA;AACA;AACA;AAEC,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAED;AACA;AACA;AACA;AACA;;AAEC,OAAOC,aAAP,MAA0B,eAA1B;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2CC,OAA3C,EAAoD;AACjE,MAAIC,gBAAgB,GAAGP,OAAvB;AACA,QAAMQ,uBAAuB,GAAG,EAAhC,CAFiE,CAIjE;;AACA;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,OAAOC,MAAP,KAAkB,QAA/D,EAAyE;AACvE;AACA,QAAKA,MAAD,CAASC,oCAAb,EACEN,gBAAgB,GAAIK,MAAD,CAASC,oCAAT,CAA8C,EAA9C,CAAnB,CAHqE,CAKvE;AACA;AACA;AACA;AACA;AACA;;AACA;AACD;;AAED,QAAMC,cAAc,GAAGZ,oBAAoB,CAACM,uBAAD,CAA3C,CApBiE,CAsBjE;AACA;AACA;;AACA,QAAMO,WAAW,GAAG,CAClBD,cADkB,EAElBb,gBAAgB,CAACK,OAAD,CAFE,CAGnB;AACA;AACA;AALmB,GAApB;AAQA,QAAMU,SAAS,GAAG,CAACjB,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAAlB;AAEA,QAAME,KAAK,GAAGnB,WAAW,CACvBK,aAAa,EADU,EAEvBE,YAFuB,EAGvBE,gBAAgB,CAAC,GAAGS,SAAJ,CAHO,CAAzB;AAMA,QAAME,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAApB,CAzCiE,CA2CjE;;AACAC,EAAAA,WAAW,CAACG,OAAZ,GAAsBP,cAAc,CAACQ,GAArC;AACAJ,EAAAA,WAAW,CAACK,gBAAZ,GAA+B,EAA/B,CA7CiE,CA6C/B;;AAClCL,EAAAA,WAAW,CAACM,aAAZ,GAA4B,EAA5B,CA9CiE,CA8ClC;AAE/B;;AACA;;AACA,MAAIC,MAAM,CAACC,cAAP,CAAsB,KAAtB,CAAJ,EAAkC;AAChCD,IAAAA,MAAM,CAACE,GAAP,CAAWC,MAAX,CAAkB,kBAAlB,EAAsC,MAAM;AAC1CV,MAAAA,WAAW,CAACW,cAAZ,CAA2B1B,aAAa,CAACe,WAAW,CAACK,gBAAb,CAAxC;AACD,KAFD;AAGD;;AAED,SAAOL,WAAP;AACD","sourcesContent":["/**\n * Create the store with dynamic reducers\n */\n\n import { createStore, applyMiddleware, compose } from 'redux'\n import { routerMiddleware } from 'connected-react-router'\n import createSagaMiddleware from 'redux-saga'\n\n//  import {\n//    changeLocationMiddleware,\n//    handleHttpRequestMiddleware,\n//    changeLocationVoteMiddleware\n//  } from '../middleware'\n\n import createReducer from './rootReducer'\n\n export default function configureStore(initialState = {}, history) {\n   let composeEnhancers = compose\n   const reduxSagaMonitorOptions = {}\n\n   // If Redux Dev Tools and Saga Dev Tools Extensions are installed, enable them\n   /* istanbul ignore next */\n   if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n     /* eslint-disable no-underscore-dangle */\n     if ((window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\n       composeEnhancers = (window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n\n     // NOTE: Uncomment the code below to restore support for Redux Saga\n     // Dev Tools once it supports redux-saga version 1.x.x\n     // if (window.__SAGA_MONITOR_EXTENSION__)\n     //   reduxSagaMonitorOptions = {\n     //     sagaMonitor: window.__SAGA_MONITOR_EXTENSION__,\n     //   }\n     /* eslint-enable */\n   }\n\n   const sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions)\n\n   // Create the store with two middlewares\n   // 1. sagaMiddleware: Makes redux-sagas work\n   // 2. routerMiddleware: Syncs the location/URL path to the state\n   const middlewares = [\n     sagaMiddleware,\n     routerMiddleware(history),\n    //  changeLocationMiddleware,\n    //  changeLocationVoteMiddleware,\n    //  handleHttpRequestMiddleware\n   ]\n\n   const enhancers = [applyMiddleware(...middlewares)]\n\n   const store = createStore(\n     createReducer(),\n     initialState,\n     composeEnhancers(...enhancers)\n   )\n\n   const storeExtend = Object.assign(store)\n\n   // Extensions\n   storeExtend.runSaga = sagaMiddleware.run\n   storeExtend.injectedReducers = {} // Reducer registry\n   storeExtend.injectedSagas = {} // Saga registry\n\n   // Make reducers hot reloadable, see http://mxs.is/googmo\n   /* istanbul ignore next */\n   if (module.hasOwnProperty('hot')) {\n     module.hot.accept('./rootReducer.js', () => {\n       storeExtend.replaceReducer(createReducer(storeExtend.injectedReducers))\n     })\n   }\n\n   return storeExtend\n }\n"]},"metadata":{},"sourceType":"module"}