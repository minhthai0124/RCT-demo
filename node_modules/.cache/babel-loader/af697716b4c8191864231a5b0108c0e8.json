{"ast":null,"code":"var _jsxFileName = \"/home/nl/Documents/demo-webRTC/demo-app/src/pages/Student.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport RTCMultiConnection from 'rtcmulticonnection';\nimport { useRouteMatch } from 'react-router';\nimport { Form, Button, Row, Col, Modal } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Toast from '../utils/notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudentPage() {\n  _s();\n\n  var _history$location, _history$location$sta, _match$params;\n\n  const history = useHistory();\n  const match = useRouteMatch();\n  const userState = (history === null || history === void 0 ? void 0 : (_history$location = history.location) === null || _history$location === void 0 ? void 0 : (_history$location$sta = _history$location.state) === null || _history$location$sta === void 0 ? void 0 : _history$location$sta.user) || {\n    name: '',\n    camera: true,\n    micro: true,\n    role: 'guest'\n  };\n  const [user, setUser] = useState(userState);\n  const [show, setShow] = useState(false); // eslint-disable-next-line\n\n  const connection = new RTCMultiConnection();\n  connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\n  connection.session = {\n    audio: userState.micro,\n    video: userState.camera,\n    data: true\n  };\n  connection.sdpConstraints.mandatory = {\n    OfferToReceiveAudio: true,\n    OfferToReceiveVideo: true\n  };\n  connection.mediaConstraints = {\n    video: true,\n    audio: true\n  };\n  console.log('connection.channel', connection.channel);\n  const refLocal = useRef(null);\n  const refRemote = useRef(null);\n\n  connection.onstream = event => {\n    delete event.mediaElement.id;\n    const video = event.mediaElement;\n    console.log('connection.socket', connection.socket);\n\n    if (event.type === 'local') {\n      refLocal.current.id = event.streamId;\n      refLocal.current.appendChild(video);\n    }\n\n    if (event.type === 'remote') {\n      refLocal.current.id = event.streamId;\n      refRemote.current.appendChild(video);\n    }\n  };\n\n  connection.extra = { ...user\n  }; // const userPreferences = connection.setUserPreferences({\n  //   extra: connection.extra,\n  //   localPeerSdpConstraints: {\n  //       OfferToReceiveAudio: true,\n  //       OfferToReceiveVideo: true\n  //   },\n  //   remotePeerSdpConstraints: {\n  //       OfferToReceiveAudio: true,\n  //       OfferToReceiveVideo: true\n  //   },\n  //   isOneWay: false,\n  //   isDataOnly: false,\n  //   dontGetRemoteStream: false,\n  //   dontAttachLocalStream: false,\n  //   connectionDescription: {\n  //       remoteUserId: connection.userid,\n  //       message: {\n  //           newParticipationRequest: true,\n  //           isOneWay: false,\n  //           isDataOnly: false,\n  //           localPeerSdpConstraints: {\n  //               OfferToReceiveAudio: true,\n  //               OfferToReceiveVideo: true\n  //           },\n  //           remotePeerSdpConstraints: {\n  //               OfferToReceiveAudio: true,\n  //               OfferToReceiveVideo: true\n  //           }\n  //       },\n  //       sender: connection.userid\n  //   },\n  //   successCallback: function() {\n  //       //\n  //   }\n  // })\n\n  let roomId = (match === null || match === void 0 ? void 0 : (_match$params = match.params) === null || _match$params === void 0 ? void 0 : _match$params.uuid) || 1;\n  useEffect(() => {\n    var _history$location2, _history$location2$st;\n\n    if (!(history === null || history === void 0 ? void 0 : (_history$location2 = history.location) === null || _history$location2 === void 0 ? void 0 : (_history$location2$st = _history$location2.state) === null || _history$location2$st === void 0 ? void 0 : _history$location2$st.user)) {\n      setShow(true);\n    } else {\n      console.log('saaaa');\n      const userPreferences = connection.setUserPreferences({\n        extra: connection.extra,\n        localPeerSdpConstraints: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true\n        },\n        remotePeerSdpConstraints: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true\n        },\n        isOneWay: false,\n        isDataOnly: false,\n        dontGetRemoteStream: false,\n        dontAttachLocalStream: false,\n        connectionDescription: {\n          remoteUserId: connection.userid,\n          message: {\n            newParticipationRequest: true,\n            isOneWay: false,\n            isDataOnly: false,\n            localPeerSdpConstraints: {\n              OfferToReceiveAudio: true,\n              OfferToReceiveVideo: true\n            },\n            remotePeerSdpConstraints: {\n              OfferToReceiveAudio: true,\n              OfferToReceiveVideo: true\n            }\n          },\n          sender: connection.userid\n        },\n        successCallback: function () {//\n        }\n      });\n\n      connection.onNewParticipant = function (participantId, userPreferences, isSet) {\n        console.log('user useEffect', user);\n        console.log('participantId', participantId);\n        console.log('userPreferences', userPreferences); // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n        // userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n        // userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n        // userPreferences.dontAttachStream = false // according to situation\n        // userPreferences.dontGetRemoteStream = false  // according to situation\n        // below line must be included. Above all lines are optional.\n        // if below line is NOT included \"join-request\" will be considered rejected.\n\n        connection.acceptParticipationRequest(participantId, userPreferences);\n        connection.user = user; // if(isSet) {\n        //   console.log('passss')\n        //   history.push(history.location.pathname, {user})\n        // }\n\n        console.log('openOrJoin', roomId);\n        connection.openOrJoin(roomId);\n        handleClose();\n        Toast.success('You are joining the class!!!', '');\n      };\n\n      console.log('useEffectuseEffectuseEffectuseEffectuseEffect');\n      connection.onNewParticipant(connection.userid, userPreferences);\n    }\n  }, [roomId]);\n\n  const handleChangeUser = (name, value) => {\n    setUser(prevTags => {\n      return { ...prevTags,\n        [name]: value\n      };\n    });\n  };\n\n  const handleChangeSwitch = (name, value) => {\n    setUser(prevTags => {\n      return { ...prevTags,\n        [name]: !value\n      };\n    });\n  };\n\n  const handleClose = () => setShow(false); // const handleShow = () => setShow(true)\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    connection.user = user;\n    console.log('user', user);\n    const userPreferences = connection.setUserPreferences({\n      extra: connection.extra,\n      localPeerSdpConstraints: {\n        OfferToReceiveAudio: true,\n        OfferToReceiveVideo: true\n      },\n      remotePeerSdpConstraints: {\n        OfferToReceiveAudio: true,\n        OfferToReceiveVideo: true\n      },\n      isOneWay: false,\n      isDataOnly: false,\n      dontGetRemoteStream: false,\n      dontAttachLocalStream: false,\n      connectionDescription: {\n        remoteUserId: connection.userid,\n        message: {\n          newParticipationRequest: true,\n          isOneWay: false,\n          isDataOnly: false,\n          localPeerSdpConstraints: {\n            OfferToReceiveAudio: true,\n            OfferToReceiveVideo: true\n          },\n          remotePeerSdpConstraints: {\n            OfferToReceiveAudio: true,\n            OfferToReceiveVideo: true\n          }\n        },\n        sender: connection.userid\n      },\n      successCallback: function () {//\n      }\n    });\n\n    connection.onNewParticipant = function (participantId, userPreferences, isSet) {\n      console.log('user useEffect', user);\n      console.log('participantId', participantId);\n      console.log('userPreferences', userPreferences); // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n      // userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n      // userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n      // userPreferences.dontAttachStream = false // according to situation\n      // userPreferences.dontGetRemoteStream = false  // according to situation\n      // below line must be included. Above all lines are optional.\n      // if below line is NOT included \"join-request\" will be considered rejected.\n\n      connection.user = user;\n\n      if (isSet) {\n        console.log('passss');\n        history.push(history.location.pathname, {\n          user\n        });\n        connection.acceptParticipationRequest(participantId, userPreferences);\n      }\n\n      console.log('openOrJoin', roomId);\n      connection.openOrJoin(roomId);\n      handleClose();\n      Toast.success('You are joining the class!!!', '');\n    };\n\n    connection.onNewParticipant(connection.userid, userPreferences, true);\n    return false;\n  };\n\n  connection.getAllParticipants().forEach(function (participantId) {\n    let user = connection.peers[participantId];\n    console.log('getAllParticipants', user);\n  });\n  console.log('connection', connection);\n  console.log('getAllParticipants', connection.getAllParticipants().length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"JOIN CLASS ROOM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: event => handleSubmit(event),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"formHorizontalEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter your name\",\n                value: user.name,\n                onChange: event => handleChangeUser('name', event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"formHorizontalEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"Camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"switch\",\n                id: \"camera\",\n                label: \"ON/OFF\",\n                checked: user.camera,\n                onChange: () => handleChangeSwitch('camera', user.camera)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"formHorizontalEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: 2,\n              children: \"micro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"switch\",\n                id: \"micro\",\n                label: \"ON/OFF\",\n                checked: user.micro,\n                onChange: () => handleChangeSwitch('micro', user.micro)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: {\n                span: 10,\n                offset: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                children: \"Join room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: refRemote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"12\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Teacher\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"6\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: refLocal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Student: \", user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudentPage, \"JWikI7LlBUEYzTY6lGBRxgATi6A=\", false, function () {\n  return [useHistory, useRouteMatch];\n});\n\n_c = StudentPage;\nexport default StudentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentPage\");","map":{"version":3,"sources":["/home/nl/Documents/demo-webRTC/demo-app/src/pages/Student.jsx"],"names":["React","useState","useEffect","useRef","RTCMultiConnection","useRouteMatch","Form","Button","Row","Col","Modal","useHistory","Toast","StudentPage","history","match","userState","location","state","user","name","camera","micro","role","setUser","show","setShow","connection","socketURL","session","audio","video","data","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","mediaConstraints","console","log","channel","refLocal","refRemote","onstream","event","mediaElement","id","socket","type","current","streamId","appendChild","extra","roomId","params","uuid","userPreferences","setUserPreferences","localPeerSdpConstraints","remotePeerSdpConstraints","isOneWay","isDataOnly","dontGetRemoteStream","dontAttachLocalStream","connectionDescription","remoteUserId","userid","message","newParticipationRequest","sender","successCallback","onNewParticipant","participantId","isSet","acceptParticipationRequest","openOrJoin","handleClose","success","handleChangeUser","value","prevTags","handleChangeSwitch","handleSubmit","preventDefault","push","pathname","getAllParticipants","forEach","peers","length","target","span","offset"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport RTCMultiConnection from 'rtcmulticonnection'\nimport { useRouteMatch } from 'react-router'\nimport { Form, Button, Row, Col, Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport Toast from '../utils/notifications'\n\nfunction StudentPage() {\n  const history = useHistory()\n  const match = useRouteMatch()\n  const userState = history?.location?.state?.user || {\n    name: '',\n    camera: true,\n    micro: true,\n    role: 'guest'\n  }\n\n  const [user, setUser] = useState(userState)\n  const [show, setShow] = useState(false)\n\n  // eslint-disable-next-line\n  const connection = new RTCMultiConnection()\n  connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/'\n\n  connection.session = {\n    audio: userState.micro,\n    video: userState.camera,\n    data: true\n  }\n\n  connection.sdpConstraints.mandatory = {\n    OfferToReceiveAudio: true,\n    OfferToReceiveVideo: true\n  }\n\n  connection.mediaConstraints = {\n      video: true,\n      audio: true\n  }\n  console.log('connection.channel', connection.channel)\n\n  const refLocal = useRef(null)\n  const refRemote = useRef(null)\n\n  connection.onstream = (event) => {\n    delete event.mediaElement.id\n    const video = event.mediaElement\n\n    console.log('connection.socket', connection.socket)\n\n    if(event.type === 'local') {\n      refLocal.current.id = event.streamId\n      refLocal.current.appendChild(video)\n    }\n    if(event.type === 'remote') {\n      refLocal.current.id = event.streamId\n      refRemote.current.appendChild(video)\n    }\n  }\n\n  connection.extra = {\n    ...user\n  }\n  // const userPreferences = connection.setUserPreferences({\n  //   extra: connection.extra,\n  //   localPeerSdpConstraints: {\n  //       OfferToReceiveAudio: true,\n  //       OfferToReceiveVideo: true\n  //   },\n  //   remotePeerSdpConstraints: {\n  //       OfferToReceiveAudio: true,\n  //       OfferToReceiveVideo: true\n  //   },\n  //   isOneWay: false,\n  //   isDataOnly: false,\n  //   dontGetRemoteStream: false,\n  //   dontAttachLocalStream: false,\n  //   connectionDescription: {\n  //       remoteUserId: connection.userid,\n  //       message: {\n  //           newParticipationRequest: true,\n  //           isOneWay: false,\n  //           isDataOnly: false,\n  //           localPeerSdpConstraints: {\n  //               OfferToReceiveAudio: true,\n  //               OfferToReceiveVideo: true\n  //           },\n  //           remotePeerSdpConstraints: {\n  //               OfferToReceiveAudio: true,\n  //               OfferToReceiveVideo: true\n  //           }\n  //       },\n  //       sender: connection.userid\n  //   },\n  //   successCallback: function() {\n  //       //\n  //   }\n  // })\n\n  let roomId = match?.params?.uuid || 1\n\n  useEffect(() => {\n    if(!history?.location?.state?.user) {\n      setShow(true)\n    } else {\n      console.log('saaaa');\n      const userPreferences = connection.setUserPreferences({\n        extra: connection.extra,\n        localPeerSdpConstraints: {\n            OfferToReceiveAudio: true,\n            OfferToReceiveVideo: true\n        },\n        remotePeerSdpConstraints: {\n            OfferToReceiveAudio: true,\n            OfferToReceiveVideo: true\n        },\n        isOneWay: false,\n        isDataOnly: false,\n        dontGetRemoteStream: false,\n        dontAttachLocalStream: false,\n        connectionDescription: {\n            remoteUserId: connection.userid,\n            message: {\n                newParticipationRequest: true,\n                isOneWay: false,\n                isDataOnly: false,\n                localPeerSdpConstraints: {\n                    OfferToReceiveAudio: true,\n                    OfferToReceiveVideo: true\n                },\n                remotePeerSdpConstraints: {\n                    OfferToReceiveAudio: true,\n                    OfferToReceiveVideo: true\n                }\n            },\n            sender: connection.userid\n        },\n        successCallback: function() {\n            //\n        }\n      })\n      connection.onNewParticipant = function(participantId, userPreferences, isSet) {\n        console.log('user useEffect' , user)\n        console.log('participantId', participantId)\n        console.log('userPreferences', userPreferences)\n        // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n        // userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n        // userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n\n        // userPreferences.dontAttachStream = false // according to situation\n        // userPreferences.dontGetRemoteStream = false  // according to situation\n\n        // below line must be included. Above all lines are optional.\n        // if below line is NOT included \"join-request\" will be considered rejected.\n          connection.acceptParticipationRequest(participantId, userPreferences)\n        connection.user = user\n        // if(isSet) {\n        //   console.log('passss')\n        //   history.push(history.location.pathname, {user})\n        // }\n        console.log('openOrJoin', roomId)\n        connection.openOrJoin(roomId)\n        handleClose()\n        Toast.success('You are joining the class!!!', '')\n      }\n      console.log('useEffectuseEffectuseEffectuseEffectuseEffect')\n      connection.onNewParticipant(connection.userid, userPreferences)\n    }\n  }, [roomId])\n\n  const handleChangeUser = (name, value) => {\n    setUser(prevTags => {\n      return {\n        ...prevTags,\n        [name]: value\n      }\n    })\n  }\n  const handleChangeSwitch = (name, value) => {\n    setUser(prevTags => {\n      return {\n        ...prevTags,\n        [name]: !value\n      }\n    })\n  }\n\n  const handleClose = () => setShow(false)\n  // const handleShow = () => setShow(true)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    connection.user = user\n    console.log('user', user)\n    const userPreferences = connection.setUserPreferences({\n      extra: connection.extra,\n      localPeerSdpConstraints: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true\n      },\n      remotePeerSdpConstraints: {\n          OfferToReceiveAudio: true,\n          OfferToReceiveVideo: true\n      },\n      isOneWay: false,\n      isDataOnly: false,\n      dontGetRemoteStream: false,\n      dontAttachLocalStream: false,\n      connectionDescription: {\n          remoteUserId: connection.userid,\n          message: {\n              newParticipationRequest: true,\n              isOneWay: false,\n              isDataOnly: false,\n              localPeerSdpConstraints: {\n                  OfferToReceiveAudio: true,\n                  OfferToReceiveVideo: true\n              },\n              remotePeerSdpConstraints: {\n                  OfferToReceiveAudio: true,\n                  OfferToReceiveVideo: true\n              }\n          },\n          sender: connection.userid\n      },\n      successCallback: function() {\n          //\n      }\n    })\n    connection.onNewParticipant = function(participantId, userPreferences, isSet) {\n      console.log('user useEffect' , user)\n      console.log('participantId', participantId)\n      console.log('userPreferences', userPreferences)\n      // if OfferToReceiveAudio/OfferToReceiveVideo should be enabled for specific users\n      // userPreferences.localPeerSdpConstraints.OfferToReceiveAudio = true\n      // userPreferences.localPeerSdpConstraints.OfferToReceiveVideo = true\n\n      // userPreferences.dontAttachStream = false // according to situation\n      // userPreferences.dontGetRemoteStream = false  // according to situation\n\n      // below line must be included. Above all lines are optional.\n      // if below line is NOT included \"join-request\" will be considered rejected.\n      connection.user = user\n      if(isSet) {\n        console.log('passss')\n        history.push(history.location.pathname, {user})\n        connection.acceptParticipationRequest(participantId, userPreferences)\n      }\n      console.log('openOrJoin', roomId)\n      connection.openOrJoin(roomId)\n      handleClose()\n      Toast.success('You are joining the class!!!', '')\n    }\n\n    connection.onNewParticipant(connection.userid, userPreferences, true)\n    return false\n  }\n\n  connection.getAllParticipants().forEach(function(participantId) {\n    let user = connection.peers[participantId];\n    console.log('getAllParticipants', user);\n  });\n\n  console.log('connection', connection)\n  console.log('getAllParticipants', connection.getAllParticipants().length)\n\n  return (\n    <div>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>JOIN CLASS ROOM</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form onSubmit={(event) => handleSubmit(event)}>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Name\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  value={user.name}\n                  onChange={(event) => handleChangeUser('name', event.target.value)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                Camera\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"camera\"\n                  label=\"ON/OFF\"\n                  checked={user.camera}\n                  onChange={() => handleChangeSwitch('camera', user.camera)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm={2}>\n                micro\n              </Form.Label>\n              <Col sm={10}>\n                <Form.Check\n                  type=\"switch\"\n                  id=\"micro\"\n                  label=\"ON/OFF\"\n                  checked={user.micro}\n                  onChange={() => handleChangeSwitch('micro', user.micro)}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Col sm={{ span: 10, offset: 2 }}>\n                <Button type=\"submit\">Join room</Button>\n              </Col>\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n      </Modal>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"12\">\n          <h4>Student</h4>\n          <div ref={refRemote}></div>\n        </Col>\n        <Col xs lg=\"12\">\n          <h4>Teacher</h4>\n          {/* <div ref={refRemote}></div> */}\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col xs lg=\"6\">\n          <hr />\n          <div ref={refLocal}></div>\n          <p>Student: {user.name}</p>\n          <hr />\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default StudentPage\n"]},"metadata":{},"sourceType":"module"}