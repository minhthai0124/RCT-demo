{"ast":null,"code":"'use strict'; // Last time updated: 2019-06-15 4:26:11 PM UTC\n// _________________________\n// RTCMultiConnection v3.6.9\n// Open-Sourced: https://github.com/muaz-khan/RTCMultiConnection\n// --------------------------------------------------\n// Muaz Khan     - www.MuazKhan.com\n// MIT License   - www.WebRTC-Experiment.com/licence\n// --------------------------------------------------\n\nvar RTCMultiConnection = function (roomid, forceOptions) {\n  var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n\n  (function (that) {\n    if (!that) {\n      return;\n    }\n\n    if (typeof window !== 'undefined') {\n      return;\n    }\n\n    if (typeof global === 'undefined') {\n      return;\n    }\n\n    global.navigator = {\n      userAgent: browserFakeUserAgent,\n      getUserMedia: function () {}\n    };\n\n    if (!global.console) {\n      global.console = {};\n    }\n\n    if (typeof global.console.debug === 'undefined') {\n      global.console.debug = global.console.info = global.console.error = global.console.log = global.console.log || function () {\n        console.log(arguments);\n      };\n    }\n\n    if (typeof document === 'undefined') {\n      /*global document:true */\n      that.document = {};\n\n      document.createElement = document.captureStream = document.mozCaptureStream = function () {\n        var obj = {\n          getContext: function () {\n            return obj;\n          },\n          play: function () {},\n          pause: function () {},\n          drawImage: function () {},\n          toDataURL: function () {\n            return '';\n          }\n        };\n        return obj;\n      };\n\n      document.addEventListener = document.removeEventListener = that.addEventListener = that.removeEventListener = function () {};\n\n      that.HTMLVideoElement = that.HTMLMediaElement = function () {};\n    }\n\n    if (typeof io === 'undefined') {\n      that.io = function () {\n        return {\n          on: function (eventName, callback) {\n            callback = callback || function () {};\n\n            if (eventName === 'connect') {\n              callback();\n            }\n          },\n          emit: function (eventName, data, callback) {\n            callback = callback || function () {};\n\n            if (eventName === 'open-room' || eventName === 'join-room') {\n              callback(true, data.sessionid, null);\n            }\n          }\n        };\n      };\n    }\n\n    if (typeof location === 'undefined') {\n      /*global location:true */\n      that.location = {\n        protocol: 'file:',\n        href: '',\n        hash: '',\n        origin: 'self'\n      };\n    }\n\n    if (typeof screen === 'undefined') {\n      /*global screen:true */\n      that.screen = {\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (typeof URL === 'undefined') {\n      /*global screen:true */\n      that.URL = {\n        createObjectURL: function () {\n          return '';\n        },\n        revokeObjectURL: function () {\n          return '';\n        }\n      };\n    }\n    /*global window:true */\n\n\n    that.window = global;\n  })(typeof global !== 'undefined' ? global : null);\n\n  function SocketConnection(connection, connectCallback) {\n    function isData(session) {\n      return !session.audio && !session.video && !session.screen && session.data;\n    }\n\n    var parameters = '';\n    parameters += '?userid=' + connection.userid;\n    parameters += '&sessionid=' + connection.sessionid;\n    parameters += '&msgEvent=' + connection.socketMessageEvent;\n    parameters += '&socketCustomEvent=' + connection.socketCustomEvent;\n    parameters += '&autoCloseEntireSession=' + !!connection.autoCloseEntireSession;\n\n    if (connection.session.broadcast === true) {\n      parameters += '&oneToMany=true';\n    }\n\n    parameters += '&maxParticipantsAllowed=' + connection.maxParticipantsAllowed;\n\n    if (connection.enableScalableBroadcast) {\n      parameters += '&enableScalableBroadcast=true';\n      parameters += '&maxRelayLimitPerUser=' + (connection.maxRelayLimitPerUser || 2);\n    }\n\n    parameters += '&extra=' + JSON.stringify(connection.extra || {});\n\n    if (connection.socketCustomParameters) {\n      parameters += connection.socketCustomParameters;\n    }\n\n    try {\n      io.sockets = {};\n    } catch (e) {}\n\n    ;\n\n    if (!connection.socketURL) {\n      connection.socketURL = '/';\n    }\n\n    if (connection.socketURL.substr(connection.socketURL.length - 1, 1) != '/') {\n      // connection.socketURL = 'https://domain.com:9001/';\n      throw '\"socketURL\" MUST end with a slash.';\n    }\n\n    if (connection.enableLogs) {\n      if (connection.socketURL == '/') {\n        console.info('socket.io url is: ', location.origin + '/');\n      } else {\n        console.info('socket.io url is: ', connection.socketURL);\n      }\n    }\n\n    try {\n      connection.socket = io(connection.socketURL + parameters);\n    } catch (e) {\n      connection.socket = io.connect(connection.socketURL + parameters, connection.socketOptions);\n    }\n\n    var mPeer = connection.multiPeersHandler;\n    connection.socket.on('extra-data-updated', function (remoteUserId, extra) {\n      if (!connection.peers[remoteUserId]) return;\n      connection.peers[remoteUserId].extra = extra;\n      connection.onExtraDataUpdated({\n        userid: remoteUserId,\n        extra: extra\n      });\n      updateExtraBackup(remoteUserId, extra);\n    });\n\n    function updateExtraBackup(remoteUserId, extra) {\n      if (!connection.peersBackup[remoteUserId]) {\n        connection.peersBackup[remoteUserId] = {\n          userid: remoteUserId,\n          extra: {}\n        };\n      }\n\n      connection.peersBackup[remoteUserId].extra = extra;\n    }\n\n    function onMessageEvent(message) {\n      if (message.remoteUserId != connection.userid) return;\n\n      if (connection.peers[message.sender] && connection.peers[message.sender].extra != message.message.extra) {\n        connection.peers[message.sender].extra = message.extra;\n        connection.onExtraDataUpdated({\n          userid: message.sender,\n          extra: message.extra\n        });\n        updateExtraBackup(message.sender, message.extra);\n      }\n\n      if (message.message.streamSyncNeeded && connection.peers[message.sender]) {\n        var stream = connection.streamEvents[message.message.streamid];\n\n        if (!stream || !stream.stream) {\n          return;\n        }\n\n        var action = message.message.action;\n\n        if (action === 'ended' || action === 'inactive' || action === 'stream-removed') {\n          if (connection.peersBackup[stream.userid]) {\n            stream.extra = connection.peersBackup[stream.userid].extra;\n          }\n\n          connection.onstreamended(stream);\n          return;\n        }\n\n        var type = message.message.type != 'both' ? message.message.type : null;\n\n        if (typeof stream.stream[action] == 'function') {\n          stream.stream[action](type);\n        }\n\n        return;\n      }\n\n      if (message.message === 'dropPeerConnection') {\n        connection.deletePeer(message.sender);\n        return;\n      }\n\n      if (message.message.allParticipants) {\n        if (message.message.allParticipants.indexOf(message.sender) === -1) {\n          message.message.allParticipants.push(message.sender);\n        }\n\n        message.message.allParticipants.forEach(function (participant) {\n          mPeer[!connection.peers[participant] ? 'createNewPeer' : 'renegotiatePeer'](participant, {\n            localPeerSdpConstraints: {\n              OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n              OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\n            },\n            remotePeerSdpConstraints: {\n              OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n              OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\n            },\n            isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\n            isDataOnly: isData(connection.session)\n          });\n        });\n        return;\n      }\n\n      if (message.message.newParticipant) {\n        if (message.message.newParticipant == connection.userid) return;\n        if (!!connection.peers[message.message.newParticipant]) return;\n        mPeer.createNewPeer(message.message.newParticipant, message.message.userPreferences || {\n          localPeerSdpConstraints: {\n            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\n          },\n          remotePeerSdpConstraints: {\n            OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n            OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\n          },\n          isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\n          isDataOnly: isData(connection.session)\n        });\n        return;\n      }\n\n      if (message.message.readyForOffer) {\n        if (connection.attachStreams.length) {\n          connection.waitingForLocalMedia = false;\n        }\n\n        if (connection.waitingForLocalMedia) {\n          // if someone is waiting to join you\n          // make sure that we've local media before making a handshake\n          setTimeout(function () {\n            onMessageEvent(message);\n          }, 1);\n          return;\n        }\n      }\n\n      if (message.message.newParticipationRequest && message.sender !== connection.userid) {\n        if (connection.peers[message.sender]) {\n          connection.deletePeer(message.sender);\n        }\n\n        var userPreferences = {\n          extra: message.extra || {},\n          localPeerSdpConstraints: message.message.remotePeerSdpConstraints || {\n            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\n          },\n          remotePeerSdpConstraints: message.message.localPeerSdpConstraints || {\n            OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n            OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\n          },\n          isOneWay: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\n          isDataOnly: typeof message.message.isDataOnly !== 'undefined' ? message.message.isDataOnly : isData(connection.session),\n          dontGetRemoteStream: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\n          dontAttachLocalStream: !!message.message.dontGetRemoteStream,\n          connectionDescription: message,\n          successCallback: function () {}\n        };\n        connection.onNewParticipant(message.sender, userPreferences);\n        return;\n      }\n\n      if (message.message.changedUUID) {\n        if (connection.peers[message.message.oldUUID]) {\n          connection.peers[message.message.newUUID] = connection.peers[message.message.oldUUID];\n          delete connection.peers[message.message.oldUUID];\n        }\n      }\n\n      if (message.message.userLeft) {\n        mPeer.onUserLeft(message.sender);\n\n        if (!!message.message.autoCloseEntireSession) {\n          connection.leave();\n        }\n\n        return;\n      }\n\n      mPeer.addNegotiatedMessage(message.message, message.sender);\n    }\n\n    connection.socket.on(connection.socketMessageEvent, onMessageEvent);\n    var alreadyConnected = false;\n\n    connection.socket.resetProps = function () {\n      alreadyConnected = false;\n    };\n\n    connection.socket.on('connect', function () {\n      if (alreadyConnected) {\n        return;\n      }\n\n      alreadyConnected = true;\n\n      if (connection.enableLogs) {\n        console.info('socket.io connection is opened.');\n      }\n\n      setTimeout(function () {\n        connection.socket.emit('extra-data-updated', connection.extra);\n      }, 1000);\n\n      if (connectCallback) {\n        connectCallback(connection.socket);\n      }\n    });\n    connection.socket.on('disconnect', function (event) {\n      connection.onSocketDisconnect(event);\n    });\n    connection.socket.on('error', function (event) {\n      connection.onSocketError(event);\n    });\n    connection.socket.on('user-disconnected', function (remoteUserId) {\n      if (remoteUserId === connection.userid) {\n        return;\n      }\n\n      connection.onUserStatusChanged({\n        userid: remoteUserId,\n        status: 'offline',\n        extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra || {} : {}\n      });\n      connection.deletePeer(remoteUserId);\n    });\n    connection.socket.on('user-connected', function (userid) {\n      if (userid === connection.userid) {\n        return;\n      }\n\n      connection.onUserStatusChanged({\n        userid: userid,\n        status: 'online',\n        extra: connection.peers[userid] ? connection.peers[userid].extra || {} : {}\n      });\n    });\n    connection.socket.on('closed-entire-session', function (sessionid, extra) {\n      connection.leave();\n      connection.onEntireSessionClosed({\n        sessionid: sessionid,\n        userid: sessionid,\n        extra: extra\n      });\n    });\n    connection.socket.on('userid-already-taken', function (useridAlreadyTaken, yourNewUserId) {\n      connection.onUserIdAlreadyTaken(useridAlreadyTaken, yourNewUserId);\n    });\n    connection.socket.on('logs', function (log) {\n      if (!connection.enableLogs) return;\n      console.debug('server-logs', log);\n    });\n    connection.socket.on('number-of-broadcast-viewers-updated', function (data) {\n      connection.onNumberOfBroadcastViewersUpdated(data);\n    });\n    connection.socket.on('set-isInitiator-true', function (sessionid) {\n      if (sessionid != connection.sessionid) return;\n      connection.isInitiator = true;\n    });\n  }\n\n  function MultiPeers(connection) {\n    var self = this;\n    var skipPeers = ['getAllParticipants', 'getLength', 'selectFirst', 'streams', 'send', 'forEach'];\n    connection.peers = {\n      getLength: function () {\n        var numberOfPeers = 0;\n\n        for (var peer in this) {\n          if (skipPeers.indexOf(peer) == -1) {\n            numberOfPeers++;\n          }\n        }\n\n        return numberOfPeers;\n      },\n      selectFirst: function () {\n        var firstPeer;\n\n        for (var peer in this) {\n          if (skipPeers.indexOf(peer) == -1) {\n            firstPeer = this[peer];\n          }\n        }\n\n        return firstPeer;\n      },\n      getAllParticipants: function (sender) {\n        var allPeers = [];\n\n        for (var peer in this) {\n          if (skipPeers.indexOf(peer) == -1 && peer != sender) {\n            allPeers.push(peer);\n          }\n        }\n\n        return allPeers;\n      },\n      forEach: function (callbcak) {\n        this.getAllParticipants().forEach(function (participant) {\n          callbcak(connection.peers[participant]);\n        });\n      },\n      send: function (data, remoteUserId) {\n        var that = this;\n\n        if (!isNull(data.size) && !isNull(data.type)) {\n          if (connection.enableFileSharing) {\n            self.shareFile(data, remoteUserId);\n            return;\n          }\n\n          if (typeof data !== 'string') {\n            data = JSON.stringify(data);\n          }\n        }\n\n        if (data.type !== 'text' && !(data instanceof ArrayBuffer) && !(data instanceof DataView)) {\n          TextSender.send({\n            text: data,\n            channel: this,\n            connection: connection,\n            remoteUserId: remoteUserId\n          });\n          return;\n        }\n\n        if (data.type === 'text') {\n          data = JSON.stringify(data);\n        }\n\n        if (remoteUserId) {\n          var remoteUser = connection.peers[remoteUserId];\n\n          if (remoteUser) {\n            if (!remoteUser.channels.length) {\n              connection.peers[remoteUserId].createDataChannel();\n              connection.renegotiate(remoteUserId);\n              setTimeout(function () {\n                that.send(data, remoteUserId);\n              }, 3000);\n              return;\n            }\n\n            remoteUser.channels.forEach(function (channel) {\n              channel.send(data);\n            });\n            return;\n          }\n        }\n\n        this.getAllParticipants().forEach(function (participant) {\n          if (!that[participant].channels.length) {\n            connection.peers[participant].createDataChannel();\n            connection.renegotiate(participant);\n            setTimeout(function () {\n              that[participant].channels.forEach(function (channel) {\n                channel.send(data);\n              });\n            }, 3000);\n            return;\n          }\n\n          that[participant].channels.forEach(function (channel) {\n            channel.send(data);\n          });\n        });\n      }\n    };\n    this.uuid = connection.userid;\n\n    this.getLocalConfig = function (remoteSdp, remoteUserId, userPreferences) {\n      if (!userPreferences) {\n        userPreferences = {};\n      }\n\n      return {\n        streamsToShare: userPreferences.streamsToShare || {},\n        rtcMultiConnection: connection,\n        connectionDescription: userPreferences.connectionDescription,\n        userid: remoteUserId,\n        localPeerSdpConstraints: userPreferences.localPeerSdpConstraints,\n        remotePeerSdpConstraints: userPreferences.remotePeerSdpConstraints,\n        dontGetRemoteStream: !!userPreferences.dontGetRemoteStream,\n        dontAttachLocalStream: !!userPreferences.dontAttachLocalStream,\n        renegotiatingPeer: !!userPreferences.renegotiatingPeer,\n        peerRef: userPreferences.peerRef,\n        channels: userPreferences.channels || [],\n        onLocalSdp: function (localSdp) {\n          self.onNegotiationNeeded(localSdp, remoteUserId);\n        },\n        onLocalCandidate: function (localCandidate) {\n          localCandidate = OnIceCandidateHandler.processCandidates(connection, localCandidate);\n\n          if (localCandidate) {\n            self.onNegotiationNeeded(localCandidate, remoteUserId);\n          }\n        },\n        remoteSdp: remoteSdp,\n        onDataChannelMessage: function (message) {\n          if (!connection.fbr && connection.enableFileSharing) initFileBufferReader();\n\n          if (typeof message == 'string' || !connection.enableFileSharing) {\n            self.onDataChannelMessage(message, remoteUserId);\n            return;\n          }\n\n          var that = this;\n\n          if (message instanceof ArrayBuffer || message instanceof DataView) {\n            connection.fbr.convertToObject(message, function (object) {\n              that.onDataChannelMessage(object);\n            });\n            return;\n          }\n\n          if (message.readyForNextChunk) {\n            connection.fbr.getNextChunk(message, function (nextChunk, isLastChunk) {\n              connection.peers[remoteUserId].channels.forEach(function (channel) {\n                channel.send(nextChunk);\n              });\n            }, remoteUserId);\n            return;\n          }\n\n          if (message.chunkMissing) {\n            connection.fbr.chunkMissing(message);\n            return;\n          }\n\n          connection.fbr.addChunk(message, function (promptNextChunk) {\n            connection.peers[remoteUserId].peer.channel.send(promptNextChunk);\n          });\n        },\n        onDataChannelError: function (error) {\n          self.onDataChannelError(error, remoteUserId);\n        },\n        onDataChannelOpened: function (channel) {\n          self.onDataChannelOpened(channel, remoteUserId);\n        },\n        onDataChannelClosed: function (event) {\n          self.onDataChannelClosed(event, remoteUserId);\n        },\n        onRemoteStream: function (stream) {\n          if (connection.peers[remoteUserId]) {\n            connection.peers[remoteUserId].streams.push(stream);\n          }\n\n          self.onGettingRemoteMedia(stream, remoteUserId);\n        },\n        onRemoteStreamRemoved: function (stream) {\n          self.onRemovingRemoteMedia(stream, remoteUserId);\n        },\n        onPeerStateChanged: function (states) {\n          self.onPeerStateChanged(states);\n\n          if (states.iceConnectionState === 'new') {\n            self.onNegotiationStarted(remoteUserId, states);\n          }\n\n          if (states.iceConnectionState === 'connected') {\n            self.onNegotiationCompleted(remoteUserId, states);\n          }\n\n          if (states.iceConnectionState.search(/closed|failed/gi) !== -1) {\n            self.onUserLeft(remoteUserId);\n            self.disconnectWith(remoteUserId);\n          }\n        }\n      };\n    };\n\n    this.createNewPeer = function (remoteUserId, userPreferences) {\n      if (connection.maxParticipantsAllowed <= connection.getAllParticipants().length) {\n        return;\n      }\n\n      userPreferences = userPreferences || {};\n\n      if (connection.isInitiator && !!connection.session.audio && connection.session.audio === 'two-way' && !userPreferences.streamsToShare) {\n        userPreferences.isOneWay = false;\n        userPreferences.isDataOnly = false;\n        userPreferences.session = connection.session;\n      }\n\n      if (!userPreferences.isOneWay && !userPreferences.isDataOnly) {\n        userPreferences.isOneWay = true;\n        this.onNegotiationNeeded({\n          enableMedia: true,\n          userPreferences: userPreferences\n        }, remoteUserId);\n        return;\n      }\n\n      userPreferences = connection.setUserPreferences(userPreferences, remoteUserId);\n      var localConfig = this.getLocalConfig(null, remoteUserId, userPreferences);\n      connection.peers[remoteUserId] = new PeerInitiator(localConfig);\n    };\n\n    this.createAnsweringPeer = function (remoteSdp, remoteUserId, userPreferences) {\n      userPreferences = connection.setUserPreferences(userPreferences || {}, remoteUserId);\n      var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\n      connection.peers[remoteUserId] = new PeerInitiator(localConfig);\n    };\n\n    this.renegotiatePeer = function (remoteUserId, userPreferences, remoteSdp) {\n      if (!connection.peers[remoteUserId]) {\n        if (connection.enableLogs) {\n          console.error('Peer (' + remoteUserId + ') does not exist. Renegotiation skipped.');\n        }\n\n        return;\n      }\n\n      if (!userPreferences) {\n        userPreferences = {};\n      }\n\n      userPreferences.renegotiatingPeer = true;\n      userPreferences.peerRef = connection.peers[remoteUserId].peer;\n      userPreferences.channels = connection.peers[remoteUserId].channels;\n      var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\n      connection.peers[remoteUserId] = new PeerInitiator(localConfig);\n    };\n\n    this.replaceTrack = function (track, remoteUserId, isVideoTrack) {\n      if (!connection.peers[remoteUserId]) {\n        throw 'This peer (' + remoteUserId + ') does not exist.';\n      }\n\n      var peer = connection.peers[remoteUserId].peer;\n\n      if (!!peer.getSenders && typeof peer.getSenders === 'function' && peer.getSenders().length) {\n        peer.getSenders().forEach(function (rtpSender) {\n          if (isVideoTrack && rtpSender.track.kind === 'video') {\n            connection.peers[remoteUserId].peer.lastVideoTrack = rtpSender.track;\n            rtpSender.replaceTrack(track);\n          }\n\n          if (!isVideoTrack && rtpSender.track.kind === 'audio') {\n            connection.peers[remoteUserId].peer.lastAudioTrack = rtpSender.track;\n            rtpSender.replaceTrack(track);\n          }\n        });\n        return;\n      }\n\n      console.warn('RTPSender.replaceTrack is NOT supported.');\n      this.renegotiatePeer(remoteUserId);\n    };\n\n    this.onNegotiationNeeded = function (message, remoteUserId) {};\n\n    this.addNegotiatedMessage = function (message, remoteUserId) {\n      if (message.type && message.sdp) {\n        if (message.type == 'answer') {\n          if (connection.peers[remoteUserId]) {\n            connection.peers[remoteUserId].addRemoteSdp(message);\n          }\n        }\n\n        if (message.type == 'offer') {\n          if (message.renegotiatingPeer) {\n            this.renegotiatePeer(remoteUserId, null, message);\n          } else {\n            this.createAnsweringPeer(message, remoteUserId);\n          }\n        }\n\n        if (connection.enableLogs) {\n          console.log('Remote peer\\'s sdp:', message.sdp);\n        }\n\n        return;\n      }\n\n      if (message.candidate) {\n        if (connection.peers[remoteUserId]) {\n          connection.peers[remoteUserId].addRemoteCandidate(message);\n        }\n\n        if (connection.enableLogs) {\n          console.log('Remote peer\\'s candidate pairs:', message.candidate);\n        }\n\n        return;\n      }\n\n      if (message.enableMedia) {\n        connection.session = message.userPreferences.session || connection.session;\n\n        if (connection.session.oneway && connection.attachStreams.length) {\n          connection.attachStreams = [];\n        }\n\n        if (message.userPreferences.isDataOnly && connection.attachStreams.length) {\n          connection.attachStreams.length = [];\n        }\n\n        var streamsToShare = {};\n        connection.attachStreams.forEach(function (stream) {\n          streamsToShare[stream.streamid] = {\n            isAudio: !!stream.isAudio,\n            isVideo: !!stream.isVideo,\n            isScreen: !!stream.isScreen\n          };\n        });\n        message.userPreferences.streamsToShare = streamsToShare;\n        self.onNegotiationNeeded({\n          readyForOffer: true,\n          userPreferences: message.userPreferences\n        }, remoteUserId);\n      }\n\n      if (message.readyForOffer) {\n        connection.onReadyForOffer(remoteUserId, message.userPreferences);\n      }\n\n      function cb(stream) {\n        gumCallback(stream, message, remoteUserId);\n      }\n    };\n\n    function gumCallback(stream, message, remoteUserId) {\n      var streamsToShare = {};\n      connection.attachStreams.forEach(function (stream) {\n        streamsToShare[stream.streamid] = {\n          isAudio: !!stream.isAudio,\n          isVideo: !!stream.isVideo,\n          isScreen: !!stream.isScreen\n        };\n      });\n      message.userPreferences.streamsToShare = streamsToShare;\n      self.onNegotiationNeeded({\n        readyForOffer: true,\n        userPreferences: message.userPreferences\n      }, remoteUserId);\n    }\n\n    this.onGettingRemoteMedia = function (stream, remoteUserId) {};\n\n    this.onRemovingRemoteMedia = function (stream, remoteUserId) {};\n\n    this.onGettingLocalMedia = function (localStream) {};\n\n    this.onLocalMediaError = function (error, constraints) {\n      connection.onMediaError(error, constraints);\n    };\n\n    function initFileBufferReader() {\n      connection.fbr = new FileBufferReader();\n\n      connection.fbr.onProgress = function (chunk) {\n        connection.onFileProgress(chunk);\n      };\n\n      connection.fbr.onBegin = function (file) {\n        connection.onFileStart(file);\n      };\n\n      connection.fbr.onEnd = function (file) {\n        connection.onFileEnd(file);\n      };\n    }\n\n    this.shareFile = function (file, remoteUserId) {\n      initFileBufferReader();\n      connection.fbr.readAsArrayBuffer(file, function (uuid) {\n        var arrayOfUsers = connection.getAllParticipants();\n\n        if (remoteUserId) {\n          arrayOfUsers = [remoteUserId];\n        }\n\n        arrayOfUsers.forEach(function (participant) {\n          connection.fbr.getNextChunk(uuid, function (nextChunk) {\n            connection.peers[participant].channels.forEach(function (channel) {\n              channel.send(nextChunk);\n            });\n          }, participant);\n        });\n      }, {\n        userid: connection.userid,\n        // extra: connection.extra,\n        chunkSize: DetectRTC.browser.name === 'Firefox' ? 15 * 1000 : connection.chunkSize || 0\n      });\n    };\n\n    if (typeof 'TextReceiver' !== 'undefined') {\n      var textReceiver = new TextReceiver(connection);\n    }\n\n    this.onDataChannelMessage = function (message, remoteUserId) {\n      textReceiver.receive(JSON.parse(message), remoteUserId, connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {});\n    };\n\n    this.onDataChannelClosed = function (event, remoteUserId) {\n      event.userid = remoteUserId;\n      event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\n      connection.onclose(event);\n    };\n\n    this.onDataChannelError = function (error, remoteUserId) {\n      error.userid = remoteUserId;\n      event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\n      connection.onerror(error);\n    };\n\n    this.onDataChannelOpened = function (channel, remoteUserId) {\n      // keep last channel only; we are not expecting parallel/channels channels\n      if (connection.peers[remoteUserId].channels.length) {\n        connection.peers[remoteUserId].channels = [channel];\n        return;\n      }\n\n      connection.peers[remoteUserId].channels.push(channel);\n      connection.onopen({\n        userid: remoteUserId,\n        extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\n        channel: channel\n      });\n    };\n\n    this.onPeerStateChanged = function (state) {\n      connection.onPeerStateChanged(state);\n    };\n\n    this.onNegotiationStarted = function (remoteUserId, states) {};\n\n    this.onNegotiationCompleted = function (remoteUserId, states) {};\n\n    this.getRemoteStreams = function (remoteUserId) {\n      remoteUserId = remoteUserId || connection.peers.getAllParticipants()[0];\n      return connection.peers[remoteUserId] ? connection.peers[remoteUserId].streams : [];\n    };\n  }\n\n  'use strict'; // Last Updated On: 2019-01-10 5:32:55 AM UTC\n  // ________________\n  // DetectRTC v1.3.9\n  // Open-Sourced: https://github.com/muaz-khan/DetectRTC\n  // --------------------------------------------------\n  // Muaz Khan     - www.MuazKhan.com\n  // MIT License   - www.WebRTC-Experiment.com/licence\n  // --------------------------------------------------\n\n\n  (function () {\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\n    var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node &&\n    /*node-process*/\n    !process.browser;\n\n    if (isNodejs) {\n      var version = process.versions.node.toString().replace('v', '');\n      browserFakeUserAgent = 'Nodejs/' + version + ' (NodeOS) AppleWebKit/' + version + ' (KHTML, like Gecko) Nodejs/' + version + ' Nodejs/' + version;\n    }\n\n    (function (that) {\n      if (typeof window !== 'undefined') {\n        return;\n      }\n\n      if (typeof window === 'undefined' && typeof global !== 'undefined') {\n        global.navigator = {\n          userAgent: browserFakeUserAgent,\n          getUserMedia: function () {}\n        };\n        /*global window:true */\n\n        that.window = global;\n      } else if (typeof window === 'undefined') {// window = this;\n      }\n\n      if (typeof location === 'undefined') {\n        /*global location:true */\n        that.location = {\n          protocol: 'file:',\n          href: '',\n          hash: ''\n        };\n      }\n\n      if (typeof screen === 'undefined') {\n        /*global screen:true */\n        that.screen = {\n          width: 0,\n          height: 0\n        };\n      }\n    })(typeof global !== 'undefined' ? global : window);\n    /*global navigator:true */\n\n\n    var navigator = window.navigator;\n\n    if (typeof navigator !== 'undefined') {\n      if (typeof navigator.webkitGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\n      }\n\n      if (typeof navigator.mozGetUserMedia !== 'undefined') {\n        navigator.getUserMedia = navigator.mozGetUserMedia;\n      }\n    } else {\n      navigator = {\n        getUserMedia: function () {},\n        userAgent: browserFakeUserAgent\n      };\n    }\n\n    var isMobileDevice = !!/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(navigator.userAgent || '');\n    var isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob);\n    var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    var isFirefox = typeof window.InstallTrigger !== 'undefined';\n    var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    var isChrome = !!window.chrome && !isOpera;\n    var isIE = typeof document !== 'undefined' && !!document.documentMode && !isEdge; // this one can also be used:\n    // https://www.websocket.org/js/stuff.js (DetectBrowser.js)\n\n    function getBrowserInfo() {\n      var nVer = navigator.appVersion;\n      var nAgt = navigator.userAgent;\n      var browserName = navigator.appName;\n      var fullVersion = '' + parseFloat(navigator.appVersion);\n      var majorVersion = parseInt(navigator.appVersion, 10);\n      var nameOffset, verOffset, ix; // both and safri and chrome has same userAgent\n\n      if (isSafari && !isChrome && nAgt.indexOf('CriOS') !== -1) {\n        isSafari = false;\n        isChrome = true;\n      } // In Opera, the true version is after 'Opera' or after 'Version'\n\n\n      if (isOpera) {\n        browserName = 'Opera';\n\n        try {\n          fullVersion = navigator.userAgent.split('OPR/')[1].split(' ')[0];\n          majorVersion = fullVersion.split('.')[0];\n        } catch (e) {\n          fullVersion = '0.0.0.0';\n          majorVersion = 0;\n        }\n      } // In MSIE version <=10, the true version is after 'MSIE' in userAgent\n      // In IE 11, look for the string after 'rv:'\n      else if (isIE) {\n          verOffset = nAgt.indexOf('rv:');\n\n          if (verOffset > 0) {\n            //IE 11\n            fullVersion = nAgt.substring(verOffset + 3);\n          } else {\n            //IE 10 or earlier\n            verOffset = nAgt.indexOf('MSIE');\n            fullVersion = nAgt.substring(verOffset + 5);\n          }\n\n          browserName = 'IE';\n        } // In Chrome, the true version is after 'Chrome' \n        else if (isChrome) {\n            verOffset = nAgt.indexOf('Chrome');\n            browserName = 'Chrome';\n            fullVersion = nAgt.substring(verOffset + 7);\n          } // In Safari, the true version is after 'Safari' or after 'Version' \n          else if (isSafari) {\n              verOffset = nAgt.indexOf('Safari');\n              browserName = 'Safari';\n              fullVersion = nAgt.substring(verOffset + 7);\n\n              if ((verOffset = nAgt.indexOf('Version')) !== -1) {\n                fullVersion = nAgt.substring(verOffset + 8);\n              }\n\n              if (navigator.userAgent.indexOf('Version/') !== -1) {\n                fullVersion = navigator.userAgent.split('Version/')[1].split(' ')[0];\n              }\n            } // In Firefox, the true version is after 'Firefox' \n            else if (isFirefox) {\n                verOffset = nAgt.indexOf('Firefox');\n                browserName = 'Firefox';\n                fullVersion = nAgt.substring(verOffset + 8);\n              } // In most other browsers, 'name/version' is at the end of userAgent \n              else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\n                  browserName = nAgt.substring(nameOffset, verOffset);\n                  fullVersion = nAgt.substring(verOffset + 1);\n\n                  if (browserName.toLowerCase() === browserName.toUpperCase()) {\n                    browserName = navigator.appName;\n                  }\n                }\n\n      if (isEdge) {\n        browserName = 'Edge';\n        fullVersion = navigator.userAgent.split('Edge/')[1]; // fullVersion = parseInt(navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)[2], 10).toString();\n      } // trim the fullVersion string at semicolon/space/bracket if present\n\n\n      if ((ix = fullVersion.search(/[; \\)]/)) !== -1) {\n        fullVersion = fullVersion.substring(0, ix);\n      }\n\n      majorVersion = parseInt('' + fullVersion, 10);\n\n      if (isNaN(majorVersion)) {\n        fullVersion = '' + parseFloat(navigator.appVersion);\n        majorVersion = parseInt(navigator.appVersion, 10);\n      }\n\n      return {\n        fullVersion: fullVersion,\n        version: majorVersion,\n        name: browserName,\n        isPrivateBrowsing: false\n      };\n    } // via: https://gist.github.com/cou929/7973956\n\n\n    function retry(isDone, next) {\n      var currentTrial = 0,\n          maxRetry = 50,\n          interval = 10,\n          isTimeout = false;\n      var id = window.setInterval(function () {\n        if (isDone()) {\n          window.clearInterval(id);\n          next(isTimeout);\n        }\n\n        if (currentTrial++ > maxRetry) {\n          window.clearInterval(id);\n          isTimeout = true;\n          next(isTimeout);\n        }\n      }, 10);\n    }\n\n    function isIE10OrLater(userAgent) {\n      var ua = userAgent.toLowerCase();\n\n      if (ua.indexOf('msie') === 0 && ua.indexOf('trident') === 0) {\n        return false;\n      }\n\n      var match = /(?:msie|rv:)\\s?([\\d\\.]+)/.exec(ua);\n\n      if (match && parseInt(match[1], 10) >= 10) {\n        return true;\n      }\n\n      return false;\n    }\n\n    function detectPrivateMode(callback) {\n      var isPrivate;\n\n      try {\n        if (window.webkitRequestFileSystem) {\n          window.webkitRequestFileSystem(window.TEMPORARY, 1, function () {\n            isPrivate = false;\n          }, function (e) {\n            isPrivate = true;\n          });\n        } else if (window.indexedDB && /Firefox/.test(window.navigator.userAgent)) {\n          var db;\n\n          try {\n            db = window.indexedDB.open('test');\n\n            db.onerror = function () {\n              return true;\n            };\n          } catch (e) {\n            isPrivate = true;\n          }\n\n          if (typeof isPrivate === 'undefined') {\n            retry(function isDone() {\n              return db.readyState === 'done' ? true : false;\n            }, function next(isTimeout) {\n              if (!isTimeout) {\n                isPrivate = db.result ? false : true;\n              }\n            });\n          }\n        } else if (isIE10OrLater(window.navigator.userAgent)) {\n          isPrivate = false;\n\n          try {\n            if (!window.indexedDB) {\n              isPrivate = true;\n            }\n          } catch (e) {\n            isPrivate = true;\n          }\n        } else if (window.localStorage && /Safari/.test(window.navigator.userAgent)) {\n          try {\n            window.localStorage.setItem('test', 1);\n          } catch (e) {\n            isPrivate = true;\n          }\n\n          if (typeof isPrivate === 'undefined') {\n            isPrivate = false;\n            window.localStorage.removeItem('test');\n          }\n        }\n      } catch (e) {\n        isPrivate = false;\n      }\n\n      retry(function isDone() {\n        return typeof isPrivate !== 'undefined' ? true : false;\n      }, function next(isTimeout) {\n        callback(isPrivate);\n      });\n    }\n\n    var isMobile = {\n      Android: function () {\n        return navigator.userAgent.match(/Android/i);\n      },\n      BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry|BB10/i);\n      },\n      iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n      },\n      Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n      },\n      Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n      },\n      any: function () {\n        return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();\n      },\n      getOsName: function () {\n        var osName = 'Unknown OS';\n\n        if (isMobile.Android()) {\n          osName = 'Android';\n        }\n\n        if (isMobile.BlackBerry()) {\n          osName = 'BlackBerry';\n        }\n\n        if (isMobile.iOS()) {\n          osName = 'iOS';\n        }\n\n        if (isMobile.Opera()) {\n          osName = 'Opera Mini';\n        }\n\n        if (isMobile.Windows()) {\n          osName = 'Windows';\n        }\n\n        return osName;\n      }\n    }; // via: http://jsfiddle.net/ChristianL/AVyND/\n\n    function detectDesktopOS() {\n      var unknown = '-';\n      var nVer = navigator.appVersion;\n      var nAgt = navigator.userAgent;\n      var os = unknown;\n      var clientStrings = [{\n        s: 'Windows 10',\n        r: /(Windows 10.0|Windows NT 10.0)/\n      }, {\n        s: 'Windows 8.1',\n        r: /(Windows 8.1|Windows NT 6.3)/\n      }, {\n        s: 'Windows 8',\n        r: /(Windows 8|Windows NT 6.2)/\n      }, {\n        s: 'Windows 7',\n        r: /(Windows 7|Windows NT 6.1)/\n      }, {\n        s: 'Windows Vista',\n        r: /Windows NT 6.0/\n      }, {\n        s: 'Windows Server 2003',\n        r: /Windows NT 5.2/\n      }, {\n        s: 'Windows XP',\n        r: /(Windows NT 5.1|Windows XP)/\n      }, {\n        s: 'Windows 2000',\n        r: /(Windows NT 5.0|Windows 2000)/\n      }, {\n        s: 'Windows ME',\n        r: /(Win 9x 4.90|Windows ME)/\n      }, {\n        s: 'Windows 98',\n        r: /(Windows 98|Win98)/\n      }, {\n        s: 'Windows 95',\n        r: /(Windows 95|Win95|Windows_95)/\n      }, {\n        s: 'Windows NT 4.0',\n        r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/\n      }, {\n        s: 'Windows CE',\n        r: /Windows CE/\n      }, {\n        s: 'Windows 3.11',\n        r: /Win16/\n      }, {\n        s: 'Android',\n        r: /Android/\n      }, {\n        s: 'Open BSD',\n        r: /OpenBSD/\n      }, {\n        s: 'Sun OS',\n        r: /SunOS/\n      }, {\n        s: 'Linux',\n        r: /(Linux|X11)/\n      }, {\n        s: 'iOS',\n        r: /(iPhone|iPad|iPod)/\n      }, {\n        s: 'Mac OS X',\n        r: /Mac OS X/\n      }, {\n        s: 'Mac OS',\n        r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/\n      }, {\n        s: 'QNX',\n        r: /QNX/\n      }, {\n        s: 'UNIX',\n        r: /UNIX/\n      }, {\n        s: 'BeOS',\n        r: /BeOS/\n      }, {\n        s: 'OS/2',\n        r: /OS\\/2/\n      }, {\n        s: 'Search Bot',\n        r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/\n      }];\n\n      for (var i = 0, cs; cs = clientStrings[i]; i++) {\n        if (cs.r.test(nAgt)) {\n          os = cs.s;\n          break;\n        }\n      }\n\n      var osVersion = unknown;\n\n      if (/Windows/.test(os)) {\n        if (/Windows (.*)/.test(os)) {\n          osVersion = /Windows (.*)/.exec(os)[1];\n        }\n\n        os = 'Windows';\n      }\n\n      switch (os) {\n        case 'Mac OS X':\n          if (/Mac OS X (10[\\.\\_\\d]+)/.test(nAgt)) {\n            osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\n          }\n\n          break;\n\n        case 'Android':\n          if (/Android ([\\.\\_\\d]+)/.test(nAgt)) {\n            osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\n          }\n\n          break;\n\n        case 'iOS':\n          if (/OS (\\d+)_(\\d+)_?(\\d+)?/.test(nAgt)) {\n            osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\n            osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\n          }\n\n          break;\n      }\n\n      return {\n        osName: os,\n        osVersion: osVersion\n      };\n    }\n\n    var osName = 'Unknown OS';\n    var osVersion = 'Unknown OS Version';\n\n    function getAndroidVersion(ua) {\n      ua = (ua || navigator.userAgent).toLowerCase();\n      var match = ua.match(/android\\s([0-9\\.]*)/);\n      return match ? match[1] : false;\n    }\n\n    var osInfo = detectDesktopOS();\n\n    if (osInfo && osInfo.osName && osInfo.osName != '-') {\n      osName = osInfo.osName;\n      osVersion = osInfo.osVersion;\n    } else if (isMobile.any()) {\n      osName = isMobile.getOsName();\n\n      if (osName == 'Android') {\n        osVersion = getAndroidVersion();\n      }\n    }\n\n    var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node;\n\n    if (osName === 'Unknown OS' && isNodejs) {\n      osName = 'Nodejs';\n      osVersion = process.versions.node.toString().replace('v', '');\n    }\n\n    var isCanvasSupportsStreamCapturing = false;\n    var isVideoSupportsStreamCapturing = false;\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function (item) {\n      if (typeof document === 'undefined' || typeof document.createElement !== 'function') {\n        return;\n      }\n\n      if (!isCanvasSupportsStreamCapturing && item in document.createElement('canvas')) {\n        isCanvasSupportsStreamCapturing = true;\n      }\n\n      if (!isVideoSupportsStreamCapturing && item in document.createElement('video')) {\n        isVideoSupportsStreamCapturing = true;\n      }\n    });\n    var regexIpv4Local = /^(192\\.168\\.|169\\.254\\.|10\\.|172\\.(1[6-9]|2\\d|3[01]))/,\n        regexIpv4 = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/,\n        regexIpv6 = /[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/; // via: https://github.com/diafygi/webrtc-ips\n\n    function DetectLocalIPAddress(callback, stream) {\n      if (!DetectRTC.isWebRTCSupported) {\n        return;\n      }\n\n      var isPublic = true,\n          isIpv4 = true;\n      getIPs(function (ip) {\n        if (!ip) {\n          callback(); // Pass nothing to tell that ICE-gathering-ended\n        } else if (ip.match(regexIpv4Local)) {\n          isPublic = false;\n          callback('Local: ' + ip, isPublic, isIpv4);\n        } else if (ip.match(regexIpv6)) {\n          //via https://ourcodeworld.com/articles/read/257/how-to-get-the-client-ip-address-with-javascript-only\n          isIpv4 = false;\n          callback('Public: ' + ip, isPublic, isIpv4);\n        } else {\n          callback('Public: ' + ip, isPublic, isIpv4);\n        }\n      }, stream);\n    }\n\n    function getIPs(callback, stream) {\n      if (typeof document === 'undefined' || typeof document.getElementById !== 'function') {\n        return;\n      }\n\n      var ipDuplicates = {};\n      var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n\n      if (!RTCPeerConnection) {\n        var iframe = document.getElementById('iframe');\n\n        if (!iframe) {\n          return;\n        }\n\n        var win = iframe.contentWindow;\n        RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\n      }\n\n      if (!RTCPeerConnection) {\n        return;\n      }\n\n      var peerConfig = null;\n\n      if (DetectRTC.browser === 'Chrome' && DetectRTC.browser.version < 58) {\n        // todo: add support for older Opera\n        peerConfig = {\n          optional: [{\n            RtpDataChannels: true\n          }]\n        };\n      }\n\n      var servers = {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }]\n      };\n      var pc = new RTCPeerConnection(servers, peerConfig);\n\n      if (stream) {\n        if (pc.addStream) {\n          pc.addStream(stream);\n        } else if (pc.addTrack && stream.getTracks()[0]) {\n          pc.addTrack(stream.getTracks()[0], stream);\n        }\n      }\n\n      function handleCandidate(candidate) {\n        if (!candidate) {\n          callback(); // Pass nothing to tell that ICE-gathering-ended\n\n          return;\n        }\n\n        var match = regexIpv4.exec(candidate);\n\n        if (!match) {\n          return;\n        }\n\n        var ipAddress = match[1];\n        var isPublic = candidate.match(regexIpv4Local),\n            isIpv4 = true;\n\n        if (ipDuplicates[ipAddress] === undefined) {\n          callback(ipAddress, isPublic, isIpv4);\n        }\n\n        ipDuplicates[ipAddress] = true;\n      } // listen for candidate events\n\n\n      pc.onicecandidate = function (event) {\n        if (event.candidate && event.candidate.candidate) {\n          handleCandidate(event.candidate.candidate);\n        } else {\n          handleCandidate(); // Pass nothing to tell that ICE-gathering-ended\n        }\n      }; // create data channel\n\n\n      if (!stream) {\n        try {\n          pc.createDataChannel('sctp', {});\n        } catch (e) {}\n      } // create an offer sdp\n\n\n      if (DetectRTC.isPromisesSupported) {\n        pc.createOffer().then(function (result) {\n          pc.setLocalDescription(result).then(afterCreateOffer);\n        });\n      } else {\n        pc.createOffer(function (result) {\n          pc.setLocalDescription(result, afterCreateOffer, function () {});\n        }, function () {});\n      }\n\n      function afterCreateOffer() {\n        var lines = pc.localDescription.sdp.split('\\n');\n        lines.forEach(function (line) {\n          if (line && line.indexOf('a=candidate:') === 0) {\n            handleCandidate(line);\n          }\n        });\n      }\n    }\n\n    var MediaDevices = [];\n    var audioInputDevices = [];\n    var audioOutputDevices = [];\n    var videoInputDevices = [];\n\n    if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\n      // Firefox 38+ seems having support of enumerateDevices\n      // Thanks @xdumaine/enumerateDevices\n      navigator.enumerateDevices = function (callback) {\n        var enumerateDevices = navigator.mediaDevices.enumerateDevices();\n\n        if (enumerateDevices && enumerateDevices.then) {\n          navigator.mediaDevices.enumerateDevices().then(callback).catch(function () {\n            callback([]);\n          });\n        } else {\n          callback([]);\n        }\n      };\n    } // Media Devices detection\n\n\n    var canEnumerate = false;\n    /*global MediaStreamTrack:true */\n\n    if (typeof MediaStreamTrack !== 'undefined' && 'getSources' in MediaStreamTrack) {\n      canEnumerate = true;\n    } else if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\n      canEnumerate = true;\n    }\n\n    var hasMicrophone = false;\n    var hasSpeakers = false;\n    var hasWebcam = false;\n    var isWebsiteHasMicrophonePermissions = false;\n    var isWebsiteHasWebcamPermissions = false; // http://dev.w3.org/2011/webrtc/editor/getusermedia.html#mediadevices\n\n    function checkDeviceSupport(callback) {\n      if (!canEnumerate) {\n        if (callback) {\n          callback();\n        }\n\n        return;\n      }\n\n      if (!navigator.enumerateDevices && window.MediaStreamTrack && window.MediaStreamTrack.getSources) {\n        navigator.enumerateDevices = window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack);\n      }\n\n      if (!navigator.enumerateDevices && navigator.enumerateDevices) {\n        navigator.enumerateDevices = navigator.enumerateDevices.bind(navigator);\n      }\n\n      if (!navigator.enumerateDevices) {\n        if (callback) {\n          callback();\n        }\n\n        return;\n      }\n\n      MediaDevices = [];\n      audioInputDevices = [];\n      audioOutputDevices = [];\n      videoInputDevices = [];\n      hasMicrophone = false;\n      hasSpeakers = false;\n      hasWebcam = false;\n      isWebsiteHasMicrophonePermissions = false;\n      isWebsiteHasWebcamPermissions = false; // to prevent duplication\n\n      var alreadyUsedDevices = {};\n      navigator.enumerateDevices(function (devices) {\n        devices.forEach(function (_device) {\n          var device = {};\n\n          for (var d in _device) {\n            try {\n              if (typeof _device[d] !== 'function') {\n                device[d] = _device[d];\n              }\n            } catch (e) {}\n          }\n\n          if (alreadyUsedDevices[device.deviceId + device.label + device.kind]) {\n            return;\n          } // if it is MediaStreamTrack.getSources\n\n\n          if (device.kind === 'audio') {\n            device.kind = 'audioinput';\n          }\n\n          if (device.kind === 'video') {\n            device.kind = 'videoinput';\n          }\n\n          if (!device.deviceId) {\n            device.deviceId = device.id;\n          }\n\n          if (!device.id) {\n            device.id = device.deviceId;\n          }\n\n          if (!device.label) {\n            device.isCustomLabel = true;\n\n            if (device.kind === 'videoinput') {\n              device.label = 'Camera ' + (videoInputDevices.length + 1);\n            } else if (device.kind === 'audioinput') {\n              device.label = 'Microphone ' + (audioInputDevices.length + 1);\n            } else if (device.kind === 'audiooutput') {\n              device.label = 'Speaker ' + (audioOutputDevices.length + 1);\n            } else {\n              device.label = 'Please invoke getUserMedia once.';\n            }\n\n            if (typeof DetectRTC !== 'undefined' && DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\n              if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\n                device.label = 'HTTPs is required to get label of this ' + device.kind + ' device.';\n              }\n            }\n          } else {\n            // Firefox on Android still returns empty label\n            if (device.kind === 'videoinput' && !isWebsiteHasWebcamPermissions) {\n              isWebsiteHasWebcamPermissions = true;\n            }\n\n            if (device.kind === 'audioinput' && !isWebsiteHasMicrophonePermissions) {\n              isWebsiteHasMicrophonePermissions = true;\n            }\n          }\n\n          if (device.kind === 'audioinput') {\n            hasMicrophone = true;\n\n            if (audioInputDevices.indexOf(device) === -1) {\n              audioInputDevices.push(device);\n            }\n          }\n\n          if (device.kind === 'audiooutput') {\n            hasSpeakers = true;\n\n            if (audioOutputDevices.indexOf(device) === -1) {\n              audioOutputDevices.push(device);\n            }\n          }\n\n          if (device.kind === 'videoinput') {\n            hasWebcam = true;\n\n            if (videoInputDevices.indexOf(device) === -1) {\n              videoInputDevices.push(device);\n            }\n          } // there is no 'videoouput' in the spec.\n\n\n          MediaDevices.push(device);\n          alreadyUsedDevices[device.deviceId + device.label + device.kind] = device;\n        });\n\n        if (typeof DetectRTC !== 'undefined') {\n          // to sync latest outputs\n          DetectRTC.MediaDevices = MediaDevices;\n          DetectRTC.hasMicrophone = hasMicrophone;\n          DetectRTC.hasSpeakers = hasSpeakers;\n          DetectRTC.hasWebcam = hasWebcam;\n          DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\n          DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\n          DetectRTC.audioInputDevices = audioInputDevices;\n          DetectRTC.audioOutputDevices = audioOutputDevices;\n          DetectRTC.videoInputDevices = videoInputDevices;\n        }\n\n        if (callback) {\n          callback();\n        }\n      });\n    }\n\n    var DetectRTC = window.DetectRTC || {}; // ----------\n    // DetectRTC.browser.name || DetectRTC.browser.version || DetectRTC.browser.fullVersion\n\n    DetectRTC.browser = getBrowserInfo();\n    detectPrivateMode(function (isPrivateBrowsing) {\n      DetectRTC.browser.isPrivateBrowsing = !!isPrivateBrowsing;\n    }); // DetectRTC.isChrome || DetectRTC.isFirefox || DetectRTC.isEdge\n\n    DetectRTC.browser['is' + DetectRTC.browser.name] = true; // -----------\n\n    DetectRTC.osName = osName;\n    DetectRTC.osVersion = osVersion;\n    var isNodeWebkit = typeof process === 'object' && typeof process.versions === 'object' && process.versions['node-webkit']; // --------- Detect if system supports WebRTC 1.0 or WebRTC 1.1.\n\n    var isWebRTCSupported = false;\n    ['RTCPeerConnection', 'webkitRTCPeerConnection', 'mozRTCPeerConnection', 'RTCIceGatherer'].forEach(function (item) {\n      if (isWebRTCSupported) {\n        return;\n      }\n\n      if (item in window) {\n        isWebRTCSupported = true;\n      }\n    });\n    DetectRTC.isWebRTCSupported = isWebRTCSupported; //-------\n\n    DetectRTC.isORTCSupported = typeof RTCIceGatherer !== 'undefined'; // --------- Detect if system supports screen capturing API\n\n    var isScreenCapturingSupported = false;\n\n    if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 35) {\n      isScreenCapturingSupported = true;\n    } else if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 34) {\n      isScreenCapturingSupported = true;\n    } else if (DetectRTC.browser.isEdge && DetectRTC.browser.version >= 17) {\n      isScreenCapturingSupported = true; // navigator.getDisplayMedia\n    } else if (DetectRTC.osName === 'Android' && DetectRTC.browser.isChrome) {\n      isScreenCapturingSupported = true;\n    }\n\n    if (!/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\n      var isNonLocalHost = typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1;\n\n      if (isNonLocalHost && (DetectRTC.browser.isChrome || DetectRTC.browser.isEdge || DetectRTC.browser.isOpera)) {\n        isScreenCapturingSupported = false;\n      } else if (DetectRTC.browser.isFirefox) {\n        isScreenCapturingSupported = false;\n      }\n    }\n\n    DetectRTC.isScreenCapturingSupported = isScreenCapturingSupported; // --------- Detect if WebAudio API are supported\n\n    var webAudio = {\n      isSupported: false,\n      isCreateMediaStreamSourceSupported: false\n    };\n    ['AudioContext', 'webkitAudioContext', 'mozAudioContext', 'msAudioContext'].forEach(function (item) {\n      if (webAudio.isSupported) {\n        return;\n      }\n\n      if (item in window) {\n        webAudio.isSupported = true;\n\n        if (window[item] && 'createMediaStreamSource' in window[item].prototype) {\n          webAudio.isCreateMediaStreamSourceSupported = true;\n        }\n      }\n    });\n    DetectRTC.isAudioContextSupported = webAudio.isSupported;\n    DetectRTC.isCreateMediaStreamSourceSupported = webAudio.isCreateMediaStreamSourceSupported; // ---------- Detect if SCTP/RTP channels are supported.\n\n    var isRtpDataChannelsSupported = false;\n\n    if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 31) {\n      isRtpDataChannelsSupported = true;\n    }\n\n    DetectRTC.isRtpDataChannelsSupported = isRtpDataChannelsSupported;\n    var isSCTPSupportd = false;\n\n    if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 28) {\n      isSCTPSupportd = true;\n    } else if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 25) {\n      isSCTPSupportd = true;\n    } else if (DetectRTC.browser.isOpera && DetectRTC.browser.version >= 11) {\n      isSCTPSupportd = true;\n    }\n\n    DetectRTC.isSctpDataChannelsSupported = isSCTPSupportd; // ---------\n\n    DetectRTC.isMobileDevice = isMobileDevice; // \"isMobileDevice\" boolean is defined in \"getBrowserInfo.js\"\n    // ------\n\n    var isGetUserMediaSupported = false;\n\n    if (navigator.getUserMedia) {\n      isGetUserMediaSupported = true;\n    } else if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      isGetUserMediaSupported = true;\n    }\n\n    if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\n      if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\n        isGetUserMediaSupported = 'Requires HTTPs';\n      }\n    }\n\n    if (DetectRTC.osName === 'Nodejs') {\n      isGetUserMediaSupported = false;\n    }\n\n    DetectRTC.isGetUserMediaSupported = isGetUserMediaSupported;\n    var displayResolution = '';\n\n    if (screen.width) {\n      var width = screen.width ? screen.width : '';\n      var height = screen.height ? screen.height : '';\n      displayResolution += '' + width + ' x ' + height;\n    }\n\n    DetectRTC.displayResolution = displayResolution;\n\n    function getAspectRatio(w, h) {\n      function gcd(a, b) {\n        return b == 0 ? a : gcd(b, a % b);\n      }\n\n      var r = gcd(w, h);\n      return w / r / (h / r);\n    }\n\n    DetectRTC.displayAspectRatio = getAspectRatio(screen.width, screen.height).toFixed(2); // ----------\n\n    DetectRTC.isCanvasSupportsStreamCapturing = isCanvasSupportsStreamCapturing;\n    DetectRTC.isVideoSupportsStreamCapturing = isVideoSupportsStreamCapturing;\n\n    if (DetectRTC.browser.name == 'Chrome' && DetectRTC.browser.version >= 53) {\n      if (!DetectRTC.isCanvasSupportsStreamCapturing) {\n        DetectRTC.isCanvasSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\n      }\n\n      if (!DetectRTC.isVideoSupportsStreamCapturing) {\n        DetectRTC.isVideoSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\n      }\n    } // ------\n\n\n    DetectRTC.DetectLocalIPAddress = DetectLocalIPAddress;\n    DetectRTC.isWebSocketsSupported = 'WebSocket' in window && 2 === window.WebSocket.CLOSING;\n    DetectRTC.isWebSocketsBlocked = !DetectRTC.isWebSocketsSupported;\n\n    if (DetectRTC.osName === 'Nodejs') {\n      DetectRTC.isWebSocketsSupported = true;\n      DetectRTC.isWebSocketsBlocked = false;\n    }\n\n    DetectRTC.checkWebSocketsSupport = function (callback) {\n      callback = callback || function () {};\n\n      try {\n        var starttime;\n        var websocket = new WebSocket('wss://echo.websocket.org:443/');\n\n        websocket.onopen = function () {\n          DetectRTC.isWebSocketsBlocked = false;\n          starttime = new Date().getTime();\n          websocket.send('ping');\n        };\n\n        websocket.onmessage = function () {\n          DetectRTC.WebsocketLatency = new Date().getTime() - starttime + 'ms';\n          callback();\n          websocket.close();\n          websocket = null;\n        };\n\n        websocket.onerror = function () {\n          DetectRTC.isWebSocketsBlocked = true;\n          callback();\n        };\n      } catch (e) {\n        DetectRTC.isWebSocketsBlocked = true;\n        callback();\n      }\n    }; // -------\n\n\n    DetectRTC.load = function (callback) {\n      callback = callback || function () {};\n\n      checkDeviceSupport(callback);\n    }; // check for microphone/camera support!\n\n\n    if (typeof checkDeviceSupport === 'function') {// checkDeviceSupport();\n    }\n\n    if (typeof MediaDevices !== 'undefined') {\n      DetectRTC.MediaDevices = MediaDevices;\n    } else {\n      DetectRTC.MediaDevices = [];\n    }\n\n    DetectRTC.hasMicrophone = hasMicrophone;\n    DetectRTC.hasSpeakers = hasSpeakers;\n    DetectRTC.hasWebcam = hasWebcam;\n    DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\n    DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\n    DetectRTC.audioInputDevices = audioInputDevices;\n    DetectRTC.audioOutputDevices = audioOutputDevices;\n    DetectRTC.videoInputDevices = videoInputDevices; // ------\n\n    var isSetSinkIdSupported = false;\n\n    if (typeof document !== 'undefined' && typeof document.createElement === 'function' && 'setSinkId' in document.createElement('video')) {\n      isSetSinkIdSupported = true;\n    }\n\n    DetectRTC.isSetSinkIdSupported = isSetSinkIdSupported; // -----\n\n    var isRTPSenderReplaceTracksSupported = false;\n\n    if (DetectRTC.browser.isFirefox && typeof mozRTCPeerConnection !== 'undefined'\n    /*&& DetectRTC.browser.version > 39*/\n    ) {\n        /*global mozRTCPeerConnection:true */\n        if ('getSenders' in mozRTCPeerConnection.prototype) {\n          isRTPSenderReplaceTracksSupported = true;\n        }\n      } else if (DetectRTC.browser.isChrome && typeof webkitRTCPeerConnection !== 'undefined') {\n      /*global webkitRTCPeerConnection:true */\n      if ('getSenders' in webkitRTCPeerConnection.prototype) {\n        isRTPSenderReplaceTracksSupported = true;\n      }\n    }\n\n    DetectRTC.isRTPSenderReplaceTracksSupported = isRTPSenderReplaceTracksSupported; //------\n\n    var isRemoteStreamProcessingSupported = false;\n\n    if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 38) {\n      isRemoteStreamProcessingSupported = true;\n    }\n\n    DetectRTC.isRemoteStreamProcessingSupported = isRemoteStreamProcessingSupported; //-------\n\n    var isApplyConstraintsSupported = false;\n    /*global MediaStreamTrack:true */\n\n    if (typeof MediaStreamTrack !== 'undefined' && 'applyConstraints' in MediaStreamTrack.prototype) {\n      isApplyConstraintsSupported = true;\n    }\n\n    DetectRTC.isApplyConstraintsSupported = isApplyConstraintsSupported; //-------\n\n    var isMultiMonitorScreenCapturingSupported = false;\n\n    if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 43) {\n      // version 43 merely supports platforms for multi-monitors\n      // version 44 will support exact multi-monitor selection i.e. you can select any monitor for screen capturing.\n      isMultiMonitorScreenCapturingSupported = true;\n    }\n\n    DetectRTC.isMultiMonitorScreenCapturingSupported = isMultiMonitorScreenCapturingSupported;\n    DetectRTC.isPromisesSupported = !!('Promise' in window); // version is generated by \"grunt\"\n\n    DetectRTC.version = '1.3.9';\n\n    if (typeof DetectRTC === 'undefined') {\n      window.DetectRTC = {};\n    }\n\n    var MediaStream = window.MediaStream;\n\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n      MediaStream = webkitMediaStream;\n    }\n\n    if (typeof MediaStream !== 'undefined' && typeof MediaStream === 'function') {\n      DetectRTC.MediaStream = Object.keys(MediaStream.prototype);\n    } else DetectRTC.MediaStream = false;\n\n    if (typeof MediaStreamTrack !== 'undefined') {\n      DetectRTC.MediaStreamTrack = Object.keys(MediaStreamTrack.prototype);\n    } else DetectRTC.MediaStreamTrack = false;\n\n    var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\n\n    if (typeof RTCPeerConnection !== 'undefined') {\n      DetectRTC.RTCPeerConnection = Object.keys(RTCPeerConnection.prototype);\n    } else DetectRTC.RTCPeerConnection = false;\n\n    window.DetectRTC = DetectRTC;\n\n    if (typeof module !== 'undefined'\n    /* && !!module.exports*/\n    ) {\n        module.exports = DetectRTC;\n      }\n\n    if (typeof define === 'function' && define.amd) {\n      define('DetectRTC', [], function () {\n        return DetectRTC;\n      });\n    }\n  })(); // globals.js\n\n\n  if (typeof cordova !== 'undefined') {\n    DetectRTC.isMobileDevice = true;\n    DetectRTC.browser.name = 'Chrome';\n  }\n\n  if (navigator && navigator.userAgent && navigator.userAgent.indexOf('Crosswalk') !== -1) {\n    DetectRTC.isMobileDevice = true;\n    DetectRTC.browser.name = 'Chrome';\n  }\n\n  function fireEvent(obj, eventName, args) {\n    if (typeof CustomEvent === 'undefined') {\n      return;\n    }\n\n    var eventDetail = {\n      arguments: args,\n      __exposedProps__: args\n    };\n    var event = new CustomEvent(eventName, eventDetail);\n    obj.dispatchEvent(event);\n  }\n\n  function setHarkEvents(connection, streamEvent) {\n    if (!streamEvent.stream || !getTracks(streamEvent.stream, 'audio').length) return;\n\n    if (!connection || !streamEvent) {\n      throw 'Both arguments are required.';\n    }\n\n    if (!connection.onspeaking || !connection.onsilence) {\n      return;\n    }\n\n    if (typeof hark === 'undefined') {\n      throw 'hark.js not found.';\n    }\n\n    hark(streamEvent.stream, {\n      onspeaking: function () {\n        connection.onspeaking(streamEvent);\n      },\n      onsilence: function () {\n        connection.onsilence(streamEvent);\n      },\n      onvolumechange: function (volume, threshold) {\n        if (!connection.onvolumechange) {\n          return;\n        }\n\n        connection.onvolumechange(merge({\n          volume: volume,\n          threshold: threshold\n        }, streamEvent));\n      }\n    });\n  }\n\n  function setMuteHandlers(connection, streamEvent) {\n    if (!streamEvent.stream || !streamEvent.stream || !streamEvent.stream.addEventListener) return;\n    streamEvent.stream.addEventListener('mute', function (event) {\n      event = connection.streamEvents[streamEvent.streamid];\n      event.session = {\n        audio: event.muteType === 'audio',\n        video: event.muteType === 'video'\n      };\n      connection.onmute(event);\n    }, false);\n    streamEvent.stream.addEventListener('unmute', function (event) {\n      event = connection.streamEvents[streamEvent.streamid];\n      event.session = {\n        audio: event.unmuteType === 'audio',\n        video: event.unmuteType === 'video'\n      };\n      connection.onunmute(event);\n    }, false);\n  }\n\n  function getRandomString() {\n    if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\n      var a = window.crypto.getRandomValues(new Uint32Array(3)),\n          token = '';\n\n      for (var i = 0, l = a.length; i < l; i++) {\n        token += a[i].toString(36);\n      }\n\n      return token;\n    } else {\n      return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\n    }\n  } // Get HTMLAudioElement/HTMLVideoElement accordingly\n  // todo: add API documentation for connection.autoCreateMediaElement\n\n\n  function getRMCMediaElement(stream, callback, connection) {\n    if (!connection.autoCreateMediaElement) {\n      callback({});\n      return;\n    }\n\n    var isAudioOnly = false;\n\n    if (!getTracks(stream, 'video').length && !stream.isVideo && !stream.isScreen) {\n      isAudioOnly = true;\n    }\n\n    if (DetectRTC.browser.name === 'Firefox') {\n      if (connection.session.video || connection.session.screen) {\n        isAudioOnly = false;\n      }\n    }\n\n    var mediaElement = document.createElement(isAudioOnly ? 'audio' : 'video');\n    mediaElement.srcObject = stream;\n    mediaElement.setAttribute('autoplay', true);\n    mediaElement.setAttribute('playsinline', true);\n    mediaElement.setAttribute('controls', true);\n    mediaElement.setAttribute('muted', false);\n    mediaElement.setAttribute('volume', 1); // http://goo.gl/WZ5nFl\n    // Firefox don't yet support onended for any stream (remote/local)\n\n    if (DetectRTC.browser.name === 'Firefox') {\n      var streamEndedEvent = 'ended';\n\n      if ('oninactive' in mediaElement) {\n        streamEndedEvent = 'inactive';\n      }\n\n      mediaElement.addEventListener(streamEndedEvent, function () {\n        // fireEvent(stream, streamEndedEvent, stream);\n        currentUserMediaRequest.remove(stream.idInstance);\n\n        if (stream.type === 'local') {\n          streamEndedEvent = 'ended';\n\n          if ('oninactive' in stream) {\n            streamEndedEvent = 'inactive';\n          }\n\n          StreamsHandler.onSyncNeeded(stream.streamid, streamEndedEvent);\n          connection.attachStreams.forEach(function (aStream, idx) {\n            if (stream.streamid === aStream.streamid) {\n              delete connection.attachStreams[idx];\n            }\n          });\n          var newStreamsArray = [];\n          connection.attachStreams.forEach(function (aStream) {\n            if (aStream) {\n              newStreamsArray.push(aStream);\n            }\n          });\n          connection.attachStreams = newStreamsArray;\n          var streamEvent = connection.streamEvents[stream.streamid];\n\n          if (streamEvent) {\n            connection.onstreamended(streamEvent);\n            return;\n          }\n\n          if (this.parentNode) {\n            this.parentNode.removeChild(this);\n          }\n        }\n      }, false);\n    }\n\n    var played = mediaElement.play();\n\n    if (typeof played !== 'undefined') {\n      var cbFired = false;\n      setTimeout(function () {\n        if (!cbFired) {\n          cbFired = true;\n          callback(mediaElement);\n        }\n      }, 1000);\n      played.then(function () {\n        if (cbFired) return;\n        cbFired = true;\n        callback(mediaElement);\n      }).catch(function (error) {\n        if (cbFired) return;\n        cbFired = true;\n        callback(mediaElement);\n      });\n    } else {\n      callback(mediaElement);\n    }\n  } // if IE\n\n\n  if (!window.addEventListener) {\n    window.addEventListener = function (el, eventName, eventHandler) {\n      if (!el.attachEvent) {\n        return;\n      }\n\n      el.attachEvent('on' + eventName, eventHandler);\n    };\n  }\n\n  function listenEventHandler(eventName, eventHandler) {\n    window.removeEventListener(eventName, eventHandler);\n    window.addEventListener(eventName, eventHandler, false);\n  }\n\n  window.attachEventListener = function (video, type, listener, useCapture) {\n    video.addEventListener(type, listener, useCapture);\n  };\n\n  function removeNullEntries(array) {\n    var newArray = [];\n    array.forEach(function (item) {\n      if (item) {\n        newArray.push(item);\n      }\n    });\n    return newArray;\n  }\n\n  function isData(session) {\n    return !session.audio && !session.video && !session.screen && session.data;\n  }\n\n  function isNull(obj) {\n    return typeof obj === 'undefined';\n  }\n\n  function isString(obj) {\n    return typeof obj === 'string';\n  }\n\n  var MediaStream = window.MediaStream;\n\n  if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\n    MediaStream = webkitMediaStream;\n  }\n  /*global MediaStream:true */\n\n\n  if (typeof MediaStream !== 'undefined') {\n    if (!('stop' in MediaStream.prototype)) {\n      MediaStream.prototype.stop = function () {\n        this.getTracks().forEach(function (track) {\n          track.stop();\n        });\n      };\n    }\n  }\n\n  function isAudioPlusTab(connection, audioPlusTab) {\n    if (connection.session.audio && connection.session.audio === 'two-way') {\n      return false;\n    }\n\n    if (DetectRTC.browser.name === 'Firefox' && audioPlusTab !== false) {\n      return true;\n    }\n\n    if (DetectRTC.browser.name !== 'Chrome' || DetectRTC.browser.version < 50) return false;\n\n    if (typeof audioPlusTab === true) {\n      return true;\n    }\n\n    if (typeof audioPlusTab === 'undefined' && connection.session.audio && connection.session.screen && !connection.session.video) {\n      audioPlusTab = true;\n      return true;\n    }\n\n    return false;\n  }\n\n  function getAudioScreenConstraints(screen_constraints) {\n    if (DetectRTC.browser.name === 'Firefox') {\n      return true;\n    }\n\n    if (DetectRTC.browser.name !== 'Chrome') return false;\n    return {\n      mandatory: {\n        chromeMediaSource: screen_constraints.mandatory.chromeMediaSource,\n        chromeMediaSourceId: screen_constraints.mandatory.chromeMediaSourceId\n      }\n    };\n  }\n\n  window.iOSDefaultAudioOutputDevice = window.iOSDefaultAudioOutputDevice || 'speaker'; // earpiece or speaker\n\n  function getTracks(stream, kind) {\n    if (!stream || !stream.getTracks) {\n      return [];\n    }\n\n    return stream.getTracks().filter(function (t) {\n      return t.kind === (kind || 'audio');\n    });\n  }\n\n  function isUnifiedPlanSupportedDefault() {\n    var canAddTransceiver = false;\n\n    try {\n      if (typeof RTCRtpTransceiver === 'undefined') return false;\n      if (!('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n      var tempPc = new RTCPeerConnection();\n\n      try {\n        tempPc.addTransceiver('audio');\n        canAddTransceiver = true;\n      } catch (e) {}\n\n      tempPc.close();\n    } catch (e) {\n      canAddTransceiver = false;\n    }\n\n    return canAddTransceiver && isUnifiedPlanSuppored();\n  }\n\n  function isUnifiedPlanSuppored() {\n    var isUnifiedPlanSupported = false;\n\n    try {\n      var pc = new RTCPeerConnection({\n        sdpSemantics: 'unified-plan'\n      });\n\n      try {\n        var config = pc.getConfiguration();\n        if (config.sdpSemantics == 'unified-plan') isUnifiedPlanSupported = true;else if (config.sdpSemantics == 'plan-b') isUnifiedPlanSupported = false;else isUnifiedPlanSupported = false;\n      } catch (e) {\n        isUnifiedPlanSupported = false;\n      }\n    } catch (e) {\n      isUnifiedPlanSupported = false;\n    }\n\n    return isUnifiedPlanSupported;\n  } // ios-hacks.js\n\n\n  function setCordovaAPIs() {\n    // if (DetectRTC.osName !== 'iOS') return;\n    if (typeof cordova === 'undefined' || typeof cordova.plugins === 'undefined' || typeof cordova.plugins.iosrtc === 'undefined') return;\n    var iosrtc = cordova.plugins.iosrtc;\n    window.webkitRTCPeerConnection = iosrtc.RTCPeerConnection;\n    window.RTCSessionDescription = iosrtc.RTCSessionDescription;\n    window.RTCIceCandidate = iosrtc.RTCIceCandidate;\n    window.MediaStream = iosrtc.MediaStream;\n    window.MediaStreamTrack = iosrtc.MediaStreamTrack;\n    navigator.getUserMedia = navigator.webkitGetUserMedia = iosrtc.getUserMedia;\n    iosrtc.debug.enable('iosrtc*');\n\n    if (typeof iosrtc.selectAudioOutput == 'function') {\n      iosrtc.selectAudioOutput(window.iOSDefaultAudioOutputDevice || 'speaker'); // earpiece or speaker\n    }\n\n    iosrtc.registerGlobals();\n  }\n\n  document.addEventListener('deviceready', setCordovaAPIs, false);\n  setCordovaAPIs(); // RTCPeerConnection.js\n\n  var defaults = {};\n\n  function setSdpConstraints(config) {\n    var sdpConstraints = {\n      OfferToReceiveAudio: !!config.OfferToReceiveAudio,\n      OfferToReceiveVideo: !!config.OfferToReceiveVideo\n    };\n    return sdpConstraints;\n  }\n\n  var RTCPeerConnection;\n\n  if (typeof window.RTCPeerConnection !== 'undefined') {\n    RTCPeerConnection = window.RTCPeerConnection;\n  } else if (typeof mozRTCPeerConnection !== 'undefined') {\n    RTCPeerConnection = mozRTCPeerConnection;\n  } else if (typeof webkitRTCPeerConnection !== 'undefined') {\n    RTCPeerConnection = webkitRTCPeerConnection;\n  }\n\n  var RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\n  var RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\n  var MediaStreamTrack = window.MediaStreamTrack;\n\n  function PeerInitiator(config) {\n    if (typeof window.RTCPeerConnection !== 'undefined') {\n      RTCPeerConnection = window.RTCPeerConnection;\n    } else if (typeof mozRTCPeerConnection !== 'undefined') {\n      RTCPeerConnection = mozRTCPeerConnection;\n    } else if (typeof webkitRTCPeerConnection !== 'undefined') {\n      RTCPeerConnection = webkitRTCPeerConnection;\n    }\n\n    RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\n    RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\n    MediaStreamTrack = window.MediaStreamTrack;\n\n    if (!RTCPeerConnection) {\n      throw 'WebRTC 1.0 (RTCPeerConnection) API are NOT available in this browser.';\n    }\n\n    var connection = config.rtcMultiConnection;\n    this.extra = config.remoteSdp ? config.remoteSdp.extra : connection.extra;\n    this.userid = config.userid;\n    this.streams = [];\n    this.channels = config.channels || [];\n    this.connectionDescription = config.connectionDescription;\n\n    this.addStream = function (session) {\n      connection.addStream(session, self.userid);\n    };\n\n    this.removeStream = function (streamid) {\n      connection.removeStream(streamid, self.userid);\n    };\n\n    var self = this;\n\n    if (config.remoteSdp) {\n      this.connectionDescription = config.remoteSdp.connectionDescription;\n    }\n\n    var allRemoteStreams = {};\n    defaults.sdpConstraints = setSdpConstraints({\n      OfferToReceiveAudio: true,\n      OfferToReceiveVideo: true\n    });\n    var peer;\n    var renegotiatingPeer = !!config.renegotiatingPeer;\n\n    if (config.remoteSdp) {\n      renegotiatingPeer = !!config.remoteSdp.renegotiatingPeer;\n    }\n\n    var localStreams = [];\n    connection.attachStreams.forEach(function (stream) {\n      if (!!stream) {\n        localStreams.push(stream);\n      }\n    });\n\n    if (!renegotiatingPeer) {\n      var iceTransports = 'all';\n\n      if (connection.candidates.turn || connection.candidates.relay) {\n        if (!connection.candidates.stun && !connection.candidates.reflexive && !connection.candidates.host) {\n          iceTransports = 'relay';\n        }\n      }\n\n      try {\n        // ref: developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\n        var params = {\n          iceServers: connection.iceServers,\n          iceTransportPolicy: connection.iceTransportPolicy || iceTransports\n        };\n\n        if (typeof connection.iceCandidatePoolSize !== 'undefined') {\n          params.iceCandidatePoolSize = connection.iceCandidatePoolSize;\n        }\n\n        if (typeof connection.bundlePolicy !== 'undefined') {\n          params.bundlePolicy = connection.bundlePolicy;\n        }\n\n        if (typeof connection.rtcpMuxPolicy !== 'undefined') {\n          params.rtcpMuxPolicy = connection.rtcpMuxPolicy;\n        }\n\n        if (!!connection.sdpSemantics) {\n          params.sdpSemantics = connection.sdpSemantics || 'unified-plan';\n        }\n\n        if (!connection.iceServers || !connection.iceServers.length) {\n          params = null;\n          connection.optionalArgument = null;\n        }\n\n        peer = new RTCPeerConnection(params, connection.optionalArgument);\n      } catch (e) {\n        try {\n          var params = {\n            iceServers: connection.iceServers\n          };\n          peer = new RTCPeerConnection(params);\n        } catch (e) {\n          peer = new RTCPeerConnection();\n        }\n      }\n    } else {\n      peer = config.peerRef;\n    }\n\n    if (!peer.getRemoteStreams && peer.getReceivers) {\n      peer.getRemoteStreams = function () {\n        var stream = new MediaStream();\n        peer.getReceivers().forEach(function (receiver) {\n          stream.addTrack(receiver.track);\n        });\n        return [stream];\n      };\n    }\n\n    if (!peer.getLocalStreams && peer.getSenders) {\n      peer.getLocalStreams = function () {\n        var stream = new MediaStream();\n        peer.getSenders().forEach(function (sender) {\n          stream.addTrack(sender.track);\n        });\n        return [stream];\n      };\n    }\n\n    peer.onicecandidate = function (event) {\n      if (!event.candidate) {\n        if (!connection.trickleIce) {\n          var localSdp = peer.localDescription;\n          config.onLocalSdp({\n            type: localSdp.type,\n            sdp: localSdp.sdp,\n            remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\n            renegotiatingPeer: !!config.renegotiatingPeer || false,\n            connectionDescription: self.connectionDescription,\n            dontGetRemoteStream: !!config.dontGetRemoteStream,\n            extra: connection ? connection.extra : {},\n            streamsToShare: streamsToShare\n          });\n        }\n\n        return;\n      }\n\n      if (!connection.trickleIce) return;\n      config.onLocalCandidate({\n        candidate: event.candidate.candidate,\n        sdpMid: event.candidate.sdpMid,\n        sdpMLineIndex: event.candidate.sdpMLineIndex\n      });\n    };\n\n    localStreams.forEach(function (localStream) {\n      if (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.dontGetRemoteStream) {\n        return;\n      }\n\n      if (config.dontAttachLocalStream) {\n        return;\n      }\n\n      localStream = connection.beforeAddingStream(localStream, self);\n      if (!localStream) return;\n      peer.getLocalStreams().forEach(function (stream) {\n        if (localStream && stream.id == localStream.id) {\n          localStream = null;\n        }\n      });\n\n      if (localStream && localStream.getTracks) {\n        localStream.getTracks().forEach(function (track) {\n          try {\n            // last parameter is redundant for unified-plan\n            // starting from chrome version 72\n            peer.addTrack(track, localStream);\n          } catch (e) {}\n        });\n      }\n    });\n\n    peer.oniceconnectionstatechange = peer.onsignalingstatechange = function () {\n      var extra = self.extra;\n\n      if (connection.peers[self.userid]) {\n        extra = connection.peers[self.userid].extra || extra;\n      }\n\n      if (!peer) {\n        return;\n      }\n\n      config.onPeerStateChanged({\n        iceConnectionState: peer.iceConnectionState,\n        iceGatheringState: peer.iceGatheringState,\n        signalingState: peer.signalingState,\n        extra: extra,\n        userid: self.userid\n      });\n\n      if (peer && peer.iceConnectionState && peer.iceConnectionState.search(/closed|failed/gi) !== -1 && self.streams instanceof Array) {\n        self.streams.forEach(function (stream) {\n          var streamEvent = connection.streamEvents[stream.id] || {\n            streamid: stream.id,\n            stream: stream,\n            type: 'remote'\n          };\n          connection.onstreamended(streamEvent);\n        });\n      }\n    };\n\n    var sdpConstraints = {\n      OfferToReceiveAudio: !!localStreams.length,\n      OfferToReceiveVideo: !!localStreams.length\n    };\n    if (config.localPeerSdpConstraints) sdpConstraints = config.localPeerSdpConstraints;\n    defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\n    var streamObject;\n    var dontDuplicate = {};\n\n    peer.ontrack = function (event) {\n      if (!event || event.type !== 'track') return;\n      event.stream = event.streams[event.streams.length - 1];\n\n      if (!event.stream.id) {\n        event.stream.id = event.track.id;\n      }\n\n      if (dontDuplicate[event.stream.id] && DetectRTC.browser.name !== 'Safari') {\n        if (event.track) {\n          event.track.onended = function () {\n            // event.track.onmute = \n            peer && peer.onremovestream(event);\n          };\n        }\n\n        return;\n      }\n\n      dontDuplicate[event.stream.id] = event.stream.id;\n      var streamsToShare = {};\n\n      if (config.remoteSdp && config.remoteSdp.streamsToShare) {\n        streamsToShare = config.remoteSdp.streamsToShare;\n      } else if (config.streamsToShare) {\n        streamsToShare = config.streamsToShare;\n      }\n\n      var streamToShare = streamsToShare[event.stream.id];\n\n      if (streamToShare) {\n        event.stream.isAudio = streamToShare.isAudio;\n        event.stream.isVideo = streamToShare.isVideo;\n        event.stream.isScreen = streamToShare.isScreen;\n      } else {\n        event.stream.isVideo = !!getTracks(event.stream, 'video').length;\n        event.stream.isAudio = !event.stream.isVideo;\n        event.stream.isScreen = false;\n      }\n\n      event.stream.streamid = event.stream.id;\n      allRemoteStreams[event.stream.id] = event.stream;\n      config.onRemoteStream(event.stream);\n      event.stream.getTracks().forEach(function (track) {\n        track.onended = function () {\n          // track.onmute = \n          peer && peer.onremovestream(event);\n        };\n      });\n\n      event.stream.onremovetrack = function () {\n        peer && peer.onremovestream(event);\n      };\n    };\n\n    peer.onremovestream = function (event) {\n      // this event doesn't works anymore\n      event.stream.streamid = event.stream.id;\n\n      if (allRemoteStreams[event.stream.id]) {\n        delete allRemoteStreams[event.stream.id];\n      }\n\n      config.onRemoteStreamRemoved(event.stream);\n    };\n\n    if (typeof peer.removeStream !== 'function') {\n      // removeStream backward compatibility\n      peer.removeStream = function (stream) {\n        stream.getTracks().forEach(function (track) {\n          peer.removeTrack(track, stream);\n        });\n      };\n    }\n\n    this.addRemoteCandidate = function (remoteCandidate) {\n      peer.addIceCandidate(new RTCIceCandidate(remoteCandidate));\n    };\n\n    function oldAddRemoteSdp(remoteSdp, cb) {\n      cb = cb || function () {};\n\n      if (DetectRTC.browser.name !== 'Safari') {\n        remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\n      }\n\n      peer.setRemoteDescription(new RTCSessionDescription(remoteSdp), cb, function (error) {\n        if (!!connection.enableLogs) {\n          console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\n        }\n\n        cb();\n      });\n    }\n\n    this.addRemoteSdp = function (remoteSdp, cb) {\n      cb = cb || function () {};\n\n      if (DetectRTC.browser.name !== 'Safari') {\n        remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\n      }\n\n      peer.setRemoteDescription(new RTCSessionDescription(remoteSdp)).then(cb, function (error) {\n        if (!!connection.enableLogs) {\n          console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\n        }\n\n        cb();\n      }).catch(function (error) {\n        if (!!connection.enableLogs) {\n          console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\n        }\n\n        cb();\n      });\n    };\n\n    var isOfferer = true;\n\n    if (config.remoteSdp) {\n      isOfferer = false;\n    }\n\n    this.createDataChannel = function () {\n      var channel = peer.createDataChannel('sctp', {});\n      setChannelEvents(channel);\n    };\n\n    if (connection.session.data === true && !renegotiatingPeer) {\n      if (!isOfferer) {\n        peer.ondatachannel = function (event) {\n          var channel = event.channel;\n          setChannelEvents(channel);\n        };\n      } else {\n        this.createDataChannel();\n      }\n    }\n\n    this.enableDisableVideoEncoding = function (enable) {\n      var rtcp;\n      peer.getSenders().forEach(function (sender) {\n        if (!rtcp && sender.track.kind === 'video') {\n          rtcp = sender;\n        }\n      });\n      if (!rtcp || !rtcp.getParameters) return;\n      var parameters = rtcp.getParameters();\n      parameters.encodings[1] && (parameters.encodings[1].active = !!enable);\n      parameters.encodings[2] && (parameters.encodings[2].active = !!enable);\n      rtcp.setParameters(parameters);\n    };\n\n    if (config.remoteSdp) {\n      if (config.remoteSdp.remotePeerSdpConstraints) {\n        sdpConstraints = config.remoteSdp.remotePeerSdpConstraints;\n      }\n\n      defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\n      this.addRemoteSdp(config.remoteSdp, function () {\n        createOfferOrAnswer('createAnswer');\n      });\n    }\n\n    function setChannelEvents(channel) {\n      // force ArrayBuffer in Firefox; which uses \"Blob\" by default.\n      channel.binaryType = 'arraybuffer';\n\n      channel.onmessage = function (event) {\n        config.onDataChannelMessage(event.data);\n      };\n\n      channel.onopen = function () {\n        config.onDataChannelOpened(channel);\n      };\n\n      channel.onerror = function (error) {\n        config.onDataChannelError(error);\n      };\n\n      channel.onclose = function (event) {\n        config.onDataChannelClosed(event);\n      };\n\n      channel.internalSend = channel.send;\n\n      channel.send = function (data) {\n        if (channel.readyState !== 'open') {\n          return;\n        }\n\n        channel.internalSend(data);\n      };\n\n      peer.channel = channel;\n    }\n\n    if (connection.session.audio == 'two-way' || connection.session.video == 'two-way' || connection.session.screen == 'two-way') {\n      defaults.sdpConstraints = setSdpConstraints({\n        OfferToReceiveAudio: connection.session.audio == 'two-way' || config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio,\n        OfferToReceiveVideo: connection.session.video == 'two-way' || connection.session.screen == 'two-way' || config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio\n      });\n    }\n\n    var streamsToShare = {};\n    peer.getLocalStreams().forEach(function (stream) {\n      streamsToShare[stream.streamid] = {\n        isAudio: !!stream.isAudio,\n        isVideo: !!stream.isVideo,\n        isScreen: !!stream.isScreen\n      };\n    });\n\n    function oldCreateOfferOrAnswer(_method) {\n      peer[_method](function (localSdp) {\n        if (DetectRTC.browser.name !== 'Safari') {\n          localSdp.sdp = connection.processSdp(localSdp.sdp);\n        }\n\n        peer.setLocalDescription(localSdp, function () {\n          if (!connection.trickleIce) return;\n          config.onLocalSdp({\n            type: localSdp.type,\n            sdp: localSdp.sdp,\n            remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\n            renegotiatingPeer: !!config.renegotiatingPeer || false,\n            connectionDescription: self.connectionDescription,\n            dontGetRemoteStream: !!config.dontGetRemoteStream,\n            extra: connection ? connection.extra : {},\n            streamsToShare: streamsToShare\n          });\n          connection.onSettingLocalDescription(self);\n        }, function (error) {\n          if (!!connection.enableLogs) {\n            console.error('setLocalDescription-error', error);\n          }\n        });\n      }, function (error) {\n        if (!!connection.enableLogs) {\n          console.error('sdp-' + _method + '-error', error);\n        }\n      }, defaults.sdpConstraints);\n    }\n\n    function createOfferOrAnswer(_method) {\n      peer[_method](defaults.sdpConstraints).then(function (localSdp) {\n        if (DetectRTC.browser.name !== 'Safari') {\n          localSdp.sdp = connection.processSdp(localSdp.sdp);\n        }\n\n        peer.setLocalDescription(localSdp).then(function () {\n          if (!connection.trickleIce) return;\n          config.onLocalSdp({\n            type: localSdp.type,\n            sdp: localSdp.sdp,\n            remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\n            renegotiatingPeer: !!config.renegotiatingPeer || false,\n            connectionDescription: self.connectionDescription,\n            dontGetRemoteStream: !!config.dontGetRemoteStream,\n            extra: connection ? connection.extra : {},\n            streamsToShare: streamsToShare\n          });\n          connection.onSettingLocalDescription(self);\n        }, function (error) {\n          if (!connection.enableLogs) return;\n          console.error('setLocalDescription error', error);\n        });\n      }, function (error) {\n        if (!!connection.enableLogs) {\n          console.error('sdp-error', error);\n        }\n      });\n    }\n\n    if (isOfferer) {\n      createOfferOrAnswer('createOffer');\n    }\n\n    peer.nativeClose = peer.close;\n\n    peer.close = function () {\n      if (!peer) {\n        return;\n      }\n\n      try {\n        if (peer.nativeClose !== peer.close) {\n          peer.nativeClose();\n        }\n      } catch (e) {}\n\n      peer = null;\n      self.peer = null;\n    };\n\n    this.peer = peer;\n  } // CodecsHandler.js\n\n\n  var CodecsHandler = function () {\n    function preferCodec(sdp, codecName) {\n      var info = splitLines(sdp);\n\n      if (!info.videoCodecNumbers) {\n        return sdp;\n      }\n\n      if (codecName === 'vp8' && info.vp8LineNumber === info.videoCodecNumbers[0]) {\n        return sdp;\n      }\n\n      if (codecName === 'vp9' && info.vp9LineNumber === info.videoCodecNumbers[0]) {\n        return sdp;\n      }\n\n      if (codecName === 'h264' && info.h264LineNumber === info.videoCodecNumbers[0]) {\n        return sdp;\n      }\n\n      sdp = preferCodecHelper(sdp, codecName, info);\n      return sdp;\n    }\n\n    function preferCodecHelper(sdp, codec, info, ignore) {\n      var preferCodecNumber = '';\n\n      if (codec === 'vp8') {\n        if (!info.vp8LineNumber) {\n          return sdp;\n        }\n\n        preferCodecNumber = info.vp8LineNumber;\n      }\n\n      if (codec === 'vp9') {\n        if (!info.vp9LineNumber) {\n          return sdp;\n        }\n\n        preferCodecNumber = info.vp9LineNumber;\n      }\n\n      if (codec === 'h264') {\n        if (!info.h264LineNumber) {\n          return sdp;\n        }\n\n        preferCodecNumber = info.h264LineNumber;\n      }\n\n      var newLine = info.videoCodecNumbersOriginal.split('SAVPF')[0] + 'SAVPF ';\n      var newOrder = [preferCodecNumber];\n\n      if (ignore) {\n        newOrder = [];\n      }\n\n      info.videoCodecNumbers.forEach(function (codecNumber) {\n        if (codecNumber === preferCodecNumber) return;\n        newOrder.push(codecNumber);\n      });\n      newLine += newOrder.join(' ');\n      sdp = sdp.replace(info.videoCodecNumbersOriginal, newLine);\n      return sdp;\n    }\n\n    function splitLines(sdp) {\n      var info = {};\n      sdp.split('\\n').forEach(function (line) {\n        if (line.indexOf('m=video') === 0) {\n          info.videoCodecNumbers = [];\n          line.split('SAVPF')[1].split(' ').forEach(function (codecNumber) {\n            codecNumber = codecNumber.trim();\n            if (!codecNumber || !codecNumber.length) return;\n            info.videoCodecNumbers.push(codecNumber);\n            info.videoCodecNumbersOriginal = line;\n          });\n        }\n\n        if (line.indexOf('VP8/90000') !== -1 && !info.vp8LineNumber) {\n          info.vp8LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\n        }\n\n        if (line.indexOf('VP9/90000') !== -1 && !info.vp9LineNumber) {\n          info.vp9LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\n        }\n\n        if (line.indexOf('H264/90000') !== -1 && !info.h264LineNumber) {\n          info.h264LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\n        }\n      });\n      return info;\n    }\n\n    function removeVPX(sdp) {\n      var info = splitLines(sdp); // last parameter below means: ignore these codecs\n\n      sdp = preferCodecHelper(sdp, 'vp9', info, true);\n      sdp = preferCodecHelper(sdp, 'vp8', info, true);\n      return sdp;\n    }\n\n    function disableNACK(sdp) {\n      if (!sdp || typeof sdp !== 'string') {\n        throw 'Invalid arguments.';\n      }\n\n      sdp = sdp.replace('a=rtcp-fb:126 nack\\r\\n', '');\n      sdp = sdp.replace('a=rtcp-fb:126 nack pli\\r\\n', 'a=rtcp-fb:126 pli\\r\\n');\n      sdp = sdp.replace('a=rtcp-fb:97 nack\\r\\n', '');\n      sdp = sdp.replace('a=rtcp-fb:97 nack pli\\r\\n', 'a=rtcp-fb:97 pli\\r\\n');\n      return sdp;\n    }\n\n    function prioritize(codecMimeType, peer) {\n      if (!peer || !peer.getSenders || !peer.getSenders().length) {\n        return;\n      }\n\n      if (!codecMimeType || typeof codecMimeType !== 'string') {\n        throw 'Invalid arguments.';\n      }\n\n      peer.getSenders().forEach(function (sender) {\n        var params = sender.getParameters();\n\n        for (var i = 0; i < params.codecs.length; i++) {\n          if (params.codecs[i].mimeType == codecMimeType) {\n            params.codecs.unshift(params.codecs.splice(i, 1));\n            break;\n          }\n        }\n\n        sender.setParameters(params);\n      });\n    }\n\n    function removeNonG722(sdp) {\n      return sdp.replace(/m=audio ([0-9]+) RTP\\/SAVPF ([0-9 ]*)/g, 'm=audio $1 RTP\\/SAVPF 9');\n    }\n\n    function setBAS(sdp, bandwidth, isScreen) {\n      if (!bandwidth) {\n        return sdp;\n      }\n\n      if (typeof isFirefox !== 'undefined' && isFirefox) {\n        return sdp;\n      }\n\n      if (isScreen) {\n        if (!bandwidth.screen) {\n          console.warn('It seems that you are not using bandwidth for screen. Screen sharing is expected to fail.');\n        } else if (bandwidth.screen < 300) {\n          console.warn('It seems that you are using wrong bandwidth value for screen. Screen sharing is expected to fail.');\n        }\n      } // if screen; must use at least 300kbs\n\n\n      if (bandwidth.screen && isScreen) {\n        sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\n        sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\n      } // remove existing bandwidth lines\n\n\n      if (bandwidth.audio || bandwidth.video) {\n        sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\n      }\n\n      if (bandwidth.audio) {\n        sdp = sdp.replace(/a=mid:audio\\r\\n/g, 'a=mid:audio\\r\\nb=AS:' + bandwidth.audio + '\\r\\n');\n      }\n\n      if (bandwidth.screen) {\n        sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\n      } else if (bandwidth.video) {\n        sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.video + '\\r\\n');\n      }\n\n      return sdp;\n    } // Find the line in sdpLines that starts with |prefix|, and, if specified,\n    // contains |substr| (case-insensitive search).\n\n\n    function findLine(sdpLines, prefix, substr) {\n      return findLineInRange(sdpLines, 0, -1, prefix, substr);\n    } // Find the line in sdpLines[startLine...endLine - 1] that starts with |prefix|\n    // and, if specified, contains |substr| (case-insensitive search).\n\n\n    function findLineInRange(sdpLines, startLine, endLine, prefix, substr) {\n      var realEndLine = endLine !== -1 ? endLine : sdpLines.length;\n\n      for (var i = startLine; i < realEndLine; ++i) {\n        if (sdpLines[i].indexOf(prefix) === 0) {\n          if (!substr || sdpLines[i].toLowerCase().indexOf(substr.toLowerCase()) !== -1) {\n            return i;\n          }\n        }\n      }\n\n      return null;\n    } // Gets the codec payload type from an a=rtpmap:X line.\n\n\n    function getCodecPayloadType(sdpLine) {\n      var pattern = new RegExp('a=rtpmap:(\\\\d+) \\\\w+\\\\/\\\\d+');\n      var result = sdpLine.match(pattern);\n      return result && result.length === 2 ? result[1] : null;\n    }\n\n    function setVideoBitrates(sdp, params) {\n      params = params || {};\n      var xgoogle_min_bitrate = params.min;\n      var xgoogle_max_bitrate = params.max;\n      var sdpLines = sdp.split('\\r\\n'); // VP8\n\n      var vp8Index = findLine(sdpLines, 'a=rtpmap', 'VP8/90000');\n      var vp8Payload;\n\n      if (vp8Index) {\n        vp8Payload = getCodecPayloadType(sdpLines[vp8Index]);\n      }\n\n      if (!vp8Payload) {\n        return sdp;\n      }\n\n      var rtxIndex = findLine(sdpLines, 'a=rtpmap', 'rtx/90000');\n      var rtxPayload;\n\n      if (rtxIndex) {\n        rtxPayload = getCodecPayloadType(sdpLines[rtxIndex]);\n      }\n\n      if (!rtxIndex) {\n        return sdp;\n      }\n\n      var rtxFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + rtxPayload.toString());\n\n      if (rtxFmtpLineIndex !== null) {\n        var appendrtxNext = '\\r\\n';\n        appendrtxNext += 'a=fmtp:' + vp8Payload + ' x-google-min-bitrate=' + (xgoogle_min_bitrate || '228') + '; x-google-max-bitrate=' + (xgoogle_max_bitrate || '228');\n        sdpLines[rtxFmtpLineIndex] = sdpLines[rtxFmtpLineIndex].concat(appendrtxNext);\n        sdp = sdpLines.join('\\r\\n');\n      }\n\n      return sdp;\n    }\n\n    function setOpusAttributes(sdp, params) {\n      params = params || {};\n      var sdpLines = sdp.split('\\r\\n'); // Opus\n\n      var opusIndex = findLine(sdpLines, 'a=rtpmap', 'opus/48000');\n      var opusPayload;\n\n      if (opusIndex) {\n        opusPayload = getCodecPayloadType(sdpLines[opusIndex]);\n      }\n\n      if (!opusPayload) {\n        return sdp;\n      }\n\n      var opusFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + opusPayload.toString());\n\n      if (opusFmtpLineIndex === null) {\n        return sdp;\n      }\n\n      var appendOpusNext = '';\n      appendOpusNext += '; stereo=' + (typeof params.stereo != 'undefined' ? params.stereo : '1');\n      appendOpusNext += '; sprop-stereo=' + (typeof params['sprop-stereo'] != 'undefined' ? params['sprop-stereo'] : '1');\n\n      if (typeof params.maxaveragebitrate != 'undefined') {\n        appendOpusNext += '; maxaveragebitrate=' + (params.maxaveragebitrate || 128 * 1024 * 8);\n      }\n\n      if (typeof params.maxplaybackrate != 'undefined') {\n        appendOpusNext += '; maxplaybackrate=' + (params.maxplaybackrate || 128 * 1024 * 8);\n      }\n\n      if (typeof params.cbr != 'undefined') {\n        appendOpusNext += '; cbr=' + (typeof params.cbr != 'undefined' ? params.cbr : '1');\n      }\n\n      if (typeof params.useinbandfec != 'undefined') {\n        appendOpusNext += '; useinbandfec=' + params.useinbandfec;\n      }\n\n      if (typeof params.usedtx != 'undefined') {\n        appendOpusNext += '; usedtx=' + params.usedtx;\n      }\n\n      if (typeof params.maxptime != 'undefined') {\n        appendOpusNext += '\\r\\na=maxptime:' + params.maxptime;\n      }\n\n      sdpLines[opusFmtpLineIndex] = sdpLines[opusFmtpLineIndex].concat(appendOpusNext);\n      sdp = sdpLines.join('\\r\\n');\n      return sdp;\n    } // forceStereoAudio => via webrtcexample.com\n    // requires getUserMedia => echoCancellation:false\n\n\n    function forceStereoAudio(sdp) {\n      var sdpLines = sdp.split('\\r\\n');\n      var fmtpLineIndex = null;\n\n      for (var i = 0; i < sdpLines.length; i++) {\n        if (sdpLines[i].search('opus/48000') !== -1) {\n          var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\n          break;\n        }\n      }\n\n      for (var i = 0; i < sdpLines.length; i++) {\n        if (sdpLines[i].search('a=fmtp') !== -1) {\n          var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/);\n\n          if (payload === opusPayload) {\n            fmtpLineIndex = i;\n            break;\n          }\n        }\n      }\n\n      if (fmtpLineIndex === null) return sdp;\n      sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat('; stereo=1; sprop-stereo=1');\n      sdp = sdpLines.join('\\r\\n');\n      return sdp;\n    }\n\n    return {\n      removeVPX: removeVPX,\n      disableNACK: disableNACK,\n      prioritize: prioritize,\n      removeNonG722: removeNonG722,\n      setApplicationSpecificBandwidth: function (sdp, bandwidth, isScreen) {\n        return setBAS(sdp, bandwidth, isScreen);\n      },\n      setVideoBitrates: function (sdp, params) {\n        return setVideoBitrates(sdp, params);\n      },\n      setOpusAttributes: function (sdp, params) {\n        return setOpusAttributes(sdp, params);\n      },\n      preferVP9: function (sdp) {\n        return preferCodec(sdp, 'vp9');\n      },\n      preferCodec: preferCodec,\n      forceStereoAudio: forceStereoAudio\n    };\n  }(); // backward compatibility\n\n\n  window.BandwidthHandler = CodecsHandler; // OnIceCandidateHandler.js\n\n  var OnIceCandidateHandler = function () {\n    function processCandidates(connection, icePair) {\n      var candidate = icePair.candidate;\n      var iceRestrictions = connection.candidates;\n      var stun = iceRestrictions.stun;\n      var turn = iceRestrictions.turn;\n\n      if (!isNull(iceRestrictions.reflexive)) {\n        stun = iceRestrictions.reflexive;\n      }\n\n      if (!isNull(iceRestrictions.relay)) {\n        turn = iceRestrictions.relay;\n      }\n\n      if (!iceRestrictions.host && !!candidate.match(/typ host/g)) {\n        return;\n      }\n\n      if (!turn && !!candidate.match(/typ relay/g)) {\n        return;\n      }\n\n      if (!stun && !!candidate.match(/typ srflx/g)) {\n        return;\n      }\n\n      var protocol = connection.iceProtocols;\n\n      if (!protocol.udp && !!candidate.match(/ udp /g)) {\n        return;\n      }\n\n      if (!protocol.tcp && !!candidate.match(/ tcp /g)) {\n        return;\n      }\n\n      if (connection.enableLogs) {\n        console.debug('Your candidate pairs:', candidate);\n      }\n\n      return {\n        candidate: candidate,\n        sdpMid: icePair.sdpMid,\n        sdpMLineIndex: icePair.sdpMLineIndex\n      };\n    }\n\n    return {\n      processCandidates: processCandidates\n    };\n  }(); // IceServersHandler.js\n\n\n  var IceServersHandler = function () {\n    function getIceServers(connection) {\n      // resiprocate: 3344+4433\n      // pions: 7575\n      var iceServers = [{\n        'urls': ['stun:stun.l.google.com:19302', 'stun:stun1.l.google.com:19302', 'stun:stun2.l.google.com:19302', 'stun:stun.l.google.com:19302?transport=udp']\n      }];\n      return iceServers;\n    }\n\n    return {\n      getIceServers: getIceServers\n    };\n  }(); // getUserMediaHandler.js\n\n\n  function setStreamType(constraints, stream) {\n    if (constraints.mandatory && constraints.mandatory.chromeMediaSource) {\n      stream.isScreen = true;\n    } else if (constraints.mozMediaSource || constraints.mediaSource) {\n      stream.isScreen = true;\n    } else if (constraints.video) {\n      stream.isVideo = true;\n    } else if (constraints.audio) {\n      stream.isAudio = true;\n    }\n  } // allow users to manage this object (to support re-capturing of screen/etc.)\n\n\n  window.currentUserMediaRequest = {\n    streams: [],\n    mutex: false,\n    queueRequests: [],\n    remove: function (idInstance) {\n      this.mutex = false;\n      var stream = this.streams[idInstance];\n\n      if (!stream) {\n        return;\n      }\n\n      stream = stream.stream;\n      var options = stream.currentUserMediaRequestOptions;\n\n      if (this.queueRequests.indexOf(options)) {\n        delete this.queueRequests[this.queueRequests.indexOf(options)];\n        this.queueRequests = removeNullEntries(this.queueRequests);\n      }\n\n      this.streams[idInstance].stream = null;\n      delete this.streams[idInstance];\n    }\n  };\n\n  function getUserMediaHandler(options) {\n    if (currentUserMediaRequest.mutex === true) {\n      currentUserMediaRequest.queueRequests.push(options);\n      return;\n    }\n\n    currentUserMediaRequest.mutex = true; // easy way to match\n\n    var idInstance = JSON.stringify(options.localMediaConstraints);\n\n    function streaming(stream, returnBack) {\n      setStreamType(options.localMediaConstraints, stream);\n      var streamEndedEvent = 'ended';\n\n      if ('oninactive' in stream) {\n        streamEndedEvent = 'inactive';\n      }\n\n      stream.addEventListener(streamEndedEvent, function () {\n        delete currentUserMediaRequest.streams[idInstance];\n        currentUserMediaRequest.mutex = false;\n\n        if (currentUserMediaRequest.queueRequests.indexOf(options)) {\n          delete currentUserMediaRequest.queueRequests[currentUserMediaRequest.queueRequests.indexOf(options)];\n          currentUserMediaRequest.queueRequests = removeNullEntries(currentUserMediaRequest.queueRequests);\n        }\n      }, false);\n      currentUserMediaRequest.streams[idInstance] = {\n        stream: stream\n      };\n      currentUserMediaRequest.mutex = false;\n\n      if (currentUserMediaRequest.queueRequests.length) {\n        getUserMediaHandler(currentUserMediaRequest.queueRequests.shift());\n      } // callback\n\n\n      options.onGettingLocalMedia(stream, returnBack);\n    }\n\n    if (currentUserMediaRequest.streams[idInstance]) {\n      streaming(currentUserMediaRequest.streams[idInstance].stream, true);\n    } else {\n      var isBlackBerry = !!/BB10|BlackBerry/i.test(navigator.userAgent || '');\n\n      if (isBlackBerry || typeof navigator.mediaDevices === 'undefined' || typeof navigator.mediaDevices.getUserMedia !== 'function') {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        navigator.getUserMedia(options.localMediaConstraints, function (stream) {\n          stream.streamid = stream.streamid || stream.id || getRandomString();\n          stream.idInstance = idInstance;\n          streaming(stream);\n        }, function (error) {\n          options.onLocalMediaError(error, options.localMediaConstraints);\n        });\n        return;\n      }\n\n      if (typeof navigator.mediaDevices === 'undefined') {\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n        var getUserMediaSuccess = function () {};\n\n        var getUserMediaFailure = function () {};\n\n        var getUserMediaStream, getUserMediaError;\n        navigator.mediaDevices = {\n          getUserMedia: function (hints) {\n            navigator.getUserMedia(hints, function (getUserMediaSuccess) {\n              getUserMediaSuccess(stream);\n              getUserMediaStream = stream;\n            }, function (error) {\n              getUserMediaFailure(error);\n              getUserMediaError = error;\n            });\n            return {\n              then: function (successCB) {\n                if (getUserMediaStream) {\n                  successCB(getUserMediaStream);\n                  return;\n                }\n\n                getUserMediaSuccess = successCB;\n                return {\n                  then: function (failureCB) {\n                    if (getUserMediaError) {\n                      failureCB(getUserMediaError);\n                      return;\n                    }\n\n                    getUserMediaFailure = failureCB;\n                  }\n                };\n              }\n            };\n          }\n        };\n      }\n\n      if (options.localMediaConstraints.isScreen === true) {\n        if (navigator.mediaDevices.getDisplayMedia) {\n          navigator.mediaDevices.getDisplayMedia(options.localMediaConstraints).then(function (stream) {\n            stream.streamid = stream.streamid || stream.id || getRandomString();\n            stream.idInstance = idInstance;\n            streaming(stream);\n          }).catch(function (error) {\n            options.onLocalMediaError(error, options.localMediaConstraints);\n          });\n        } else if (navigator.getDisplayMedia) {\n          navigator.getDisplayMedia(options.localMediaConstraints).then(function (stream) {\n            stream.streamid = stream.streamid || stream.id || getRandomString();\n            stream.idInstance = idInstance;\n            streaming(stream);\n          }).catch(function (error) {\n            options.onLocalMediaError(error, options.localMediaConstraints);\n          });\n        } else {\n          throw new Error('getDisplayMedia API is not availabe in this browser.');\n        }\n\n        return;\n      }\n\n      navigator.mediaDevices.getUserMedia(options.localMediaConstraints).then(function (stream) {\n        stream.streamid = stream.streamid || stream.id || getRandomString();\n        stream.idInstance = idInstance;\n        streaming(stream);\n      }).catch(function (error) {\n        options.onLocalMediaError(error, options.localMediaConstraints);\n      });\n    }\n  } // StreamsHandler.js\n\n\n  var StreamsHandler = function () {\n    function handleType(type) {\n      if (!type) {\n        return;\n      }\n\n      if (typeof type === 'string' || typeof type === 'undefined') {\n        return type;\n      }\n\n      if (type.audio && type.video) {\n        return null;\n      }\n\n      if (type.audio) {\n        return 'audio';\n      }\n\n      if (type.video) {\n        return 'video';\n      }\n\n      return;\n    }\n\n    function setHandlers(stream, syncAction, connection) {\n      if (!stream || !stream.addEventListener) return;\n\n      if (typeof syncAction == 'undefined' || syncAction == true) {\n        var streamEndedEvent = 'ended';\n\n        if ('oninactive' in stream) {\n          streamEndedEvent = 'inactive';\n        }\n\n        stream.addEventListener(streamEndedEvent, function () {\n          StreamsHandler.onSyncNeeded(this.streamid, streamEndedEvent);\n        }, false);\n      }\n\n      stream.mute = function (type, isSyncAction) {\n        type = handleType(type);\n\n        if (typeof isSyncAction !== 'undefined') {\n          syncAction = isSyncAction;\n        }\n\n        if (typeof type == 'undefined' || type == 'audio') {\n          getTracks(stream, 'audio').forEach(function (track) {\n            track.enabled = false;\n            connection.streamEvents[stream.streamid].isAudioMuted = true;\n          });\n        }\n\n        if (typeof type == 'undefined' || type == 'video') {\n          getTracks(stream, 'video').forEach(function (track) {\n            track.enabled = false;\n          });\n        }\n\n        if (typeof syncAction == 'undefined' || syncAction == true) {\n          StreamsHandler.onSyncNeeded(stream.streamid, 'mute', type);\n        }\n\n        connection.streamEvents[stream.streamid].muteType = type || 'both';\n        fireEvent(stream, 'mute', type);\n      };\n\n      stream.unmute = function (type, isSyncAction) {\n        type = handleType(type);\n\n        if (typeof isSyncAction !== 'undefined') {\n          syncAction = isSyncAction;\n        }\n\n        graduallyIncreaseVolume();\n\n        if (typeof type == 'undefined' || type == 'audio') {\n          getTracks(stream, 'audio').forEach(function (track) {\n            track.enabled = true;\n            connection.streamEvents[stream.streamid].isAudioMuted = false;\n          });\n        }\n\n        if (typeof type == 'undefined' || type == 'video') {\n          getTracks(stream, 'video').forEach(function (track) {\n            track.enabled = true;\n          }); // make sure that video unmute doesn't affects audio\n\n          if (typeof type !== 'undefined' && type == 'video' && connection.streamEvents[stream.streamid].isAudioMuted) {\n            (function looper(times) {\n              if (!times) {\n                times = 0;\n              }\n\n              times++; // check until five-seconds\n\n              if (times < 100 && connection.streamEvents[stream.streamid].isAudioMuted) {\n                stream.mute('audio');\n                setTimeout(function () {\n                  looper(times);\n                }, 50);\n              }\n            })();\n          }\n        }\n\n        if (typeof syncAction == 'undefined' || syncAction == true) {\n          StreamsHandler.onSyncNeeded(stream.streamid, 'unmute', type);\n        }\n\n        connection.streamEvents[stream.streamid].unmuteType = type || 'both';\n        fireEvent(stream, 'unmute', type);\n      };\n\n      function graduallyIncreaseVolume() {\n        if (!connection.streamEvents[stream.streamid].mediaElement) {\n          return;\n        }\n\n        var mediaElement = connection.streamEvents[stream.streamid].mediaElement;\n        mediaElement.volume = 0;\n        afterEach(200, 5, function () {\n          try {\n            mediaElement.volume += .20;\n          } catch (e) {\n            mediaElement.volume = 1;\n          }\n        });\n      }\n    }\n\n    function afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes) {\n      startedTimes = (startedTimes || 0) + 1;\n      if (startedTimes >= numberOfTimes) return;\n      setTimeout(function () {\n        callback();\n        afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes);\n      }, setTimeoutInteval);\n    }\n\n    return {\n      setHandlers: setHandlers,\n      onSyncNeeded: function (streamid, action, type) {}\n    };\n  }(); // TextReceiver.js & TextSender.js\n\n\n  function TextReceiver(connection) {\n    var content = {};\n\n    function receive(data, userid, extra) {\n      // uuid is used to uniquely identify sending instance\n      var uuid = data.uuid;\n\n      if (!content[uuid]) {\n        content[uuid] = [];\n      }\n\n      content[uuid].push(data.message);\n\n      if (data.last) {\n        var message = content[uuid].join('');\n\n        if (data.isobject) {\n          message = JSON.parse(message);\n        } // latency detection\n\n\n        var receivingTime = new Date().getTime();\n        var latency = receivingTime - data.sendingTime;\n        var e = {\n          data: message,\n          userid: userid,\n          extra: extra,\n          latency: latency\n        };\n\n        if (connection.autoTranslateText) {\n          e.original = e.data;\n          connection.Translator.TranslateText(e.data, function (translatedText) {\n            e.data = translatedText;\n            connection.onmessage(e);\n          });\n        } else {\n          connection.onmessage(e);\n        }\n\n        delete content[uuid];\n      }\n    }\n\n    return {\n      receive: receive\n    };\n  } // TextSender.js\n\n\n  var TextSender = {\n    send: function (config) {\n      var connection = config.connection;\n      var channel = config.channel,\n          remoteUserId = config.remoteUserId,\n          initialText = config.text,\n          packetSize = connection.chunkSize || 1000,\n          textToTransfer = '',\n          isobject = false;\n\n      if (!isString(initialText)) {\n        isobject = true;\n        initialText = JSON.stringify(initialText);\n      } // uuid is used to uniquely identify sending instance\n\n\n      var uuid = getRandomString();\n      var sendingTime = new Date().getTime();\n      sendText(initialText);\n\n      function sendText(textMessage, text) {\n        var data = {\n          type: 'text',\n          uuid: uuid,\n          sendingTime: sendingTime\n        };\n\n        if (textMessage) {\n          text = textMessage;\n          data.packets = parseInt(text.length / packetSize);\n        }\n\n        if (text.length > packetSize) {\n          data.message = text.slice(0, packetSize);\n        } else {\n          data.message = text;\n          data.last = true;\n          data.isobject = isobject;\n        }\n\n        channel.send(data, remoteUserId);\n        textToTransfer = text.slice(data.message.length);\n\n        if (textToTransfer.length) {\n          setTimeout(function () {\n            sendText(null, textToTransfer);\n          }, connection.chunkInterval || 100);\n        }\n      }\n    }\n  }; // FileProgressBarHandler.js\n\n  var FileProgressBarHandler = function () {\n    function handle(connection) {\n      var progressHelper = {}; // www.RTCMultiConnection.org/docs/onFileStart/\n\n      connection.onFileStart = function (file) {\n        var div = document.createElement('div');\n        div.title = file.name;\n        div.innerHTML = '<label>0%</label> <progress></progress>';\n\n        if (file.remoteUserId) {\n          div.innerHTML += ' (Sharing with:' + file.remoteUserId + ')';\n        }\n\n        if (!connection.filesContainer) {\n          connection.filesContainer = document.body || document.documentElement;\n        }\n\n        connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\n\n        if (!file.remoteUserId) {\n          progressHelper[file.uuid] = {\n            div: div,\n            progress: div.querySelector('progress'),\n            label: div.querySelector('label')\n          };\n          progressHelper[file.uuid].progress.max = file.maxChunks;\n          return;\n        }\n\n        if (!progressHelper[file.uuid]) {\n          progressHelper[file.uuid] = {};\n        }\n\n        progressHelper[file.uuid][file.remoteUserId] = {\n          div: div,\n          progress: div.querySelector('progress'),\n          label: div.querySelector('label')\n        };\n        progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\n      }; // www.RTCMultiConnection.org/docs/onFileProgress/\n\n\n      connection.onFileProgress = function (chunk) {\n        var helper = progressHelper[chunk.uuid];\n\n        if (!helper) {\n          return;\n        }\n\n        if (chunk.remoteUserId) {\n          helper = progressHelper[chunk.uuid][chunk.remoteUserId];\n\n          if (!helper) {\n            return;\n          }\n        }\n\n        helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\n        updateLabel(helper.progress, helper.label);\n      }; // www.RTCMultiConnection.org/docs/onFileEnd/\n\n\n      connection.onFileEnd = function (file) {\n        var helper = progressHelper[file.uuid];\n\n        if (!helper) {\n          console.error('No such progress-helper element exist.', file);\n          return;\n        }\n\n        if (file.remoteUserId) {\n          helper = progressHelper[file.uuid][file.remoteUserId];\n\n          if (!helper) {\n            return;\n          }\n        }\n\n        var div = helper.div;\n\n        if (file.type.indexOf('image') != -1) {\n          div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><img src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"max-width: 80%;\">';\n        } else {\n          div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><iframe src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"width: 80%;border: 0;height: inherit;margin-top:1em;\"></iframe>';\n        }\n      };\n\n      function updateLabel(progress, label) {\n        if (progress.position === -1) {\n          return;\n        }\n\n        var position = +progress.position.toFixed(2).split('.')[1] || 100;\n        label.innerHTML = position + '%';\n      }\n    }\n\n    return {\n      handle: handle\n    };\n  }(); // TranslationHandler.js\n\n\n  var TranslationHandler = function () {\n    function handle(connection) {\n      connection.autoTranslateText = false;\n      connection.language = 'en';\n      connection.googKey = 'AIzaSyCgB5hmFY74WYB-EoWkhr9cAGr6TiTHrEE'; // www.RTCMultiConnection.org/docs/Translator/\n\n      connection.Translator = {\n        TranslateText: function (text, callback) {\n          // if(location.protocol === 'https:') return callback(text);\n          var newScript = document.createElement('script');\n          newScript.type = 'text/javascript';\n          var sourceText = encodeURIComponent(text); // escape\n\n          var randomNumber = 'method' + connection.token();\n\n          window[randomNumber] = function (response) {\n            if (response.data && response.data.translations[0] && callback) {\n              callback(response.data.translations[0].translatedText);\n              return;\n            }\n\n            if (response.error && response.error.message === 'Daily Limit Exceeded') {\n              console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\n              return;\n            }\n\n            if (response.error) {\n              console.error(response.error.message);\n              return;\n            }\n\n            console.error(response);\n          };\n\n          var source = 'https://www.googleapis.com/language/translate/v2?key=' + connection.googKey + '&target=' + (connection.language || 'en-US') + '&callback=window.' + randomNumber + '&q=' + sourceText;\n          newScript.src = source;\n          document.getElementsByTagName('head')[0].appendChild(newScript);\n        },\n        getListOfLanguages: function (callback) {\n          var xhr = new XMLHttpRequest();\n\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n              var response = JSON.parse(xhr.responseText);\n\n              if (response && response.data && response.data.languages) {\n                callback(response.data.languages);\n                return;\n              }\n\n              if (response.error && response.error.message === 'Daily Limit Exceeded') {\n                console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\n                return;\n              }\n\n              if (response.error) {\n                console.error(response.error.message);\n                return;\n              }\n\n              console.error(response);\n            }\n          };\n\n          var url = 'https://www.googleapis.com/language/translate/v2/languages?key=' + connection.googKey + '&target=en';\n          xhr.open('GET', url, true);\n          xhr.send(null);\n        }\n      };\n    }\n\n    return {\n      handle: handle\n    };\n  }(); // _____________________\n  // RTCMultiConnection.js\n\n\n  (function (connection) {\n    forceOptions = forceOptions || {\n      useDefaultDevices: true\n    };\n    connection.channel = connection.sessionid = (roomid || location.href.replace(/\\/|:|#|\\?|\\$|\\^|%|\\.|`|~|!|\\+|@|\\[|\\||]|\\|*. /g, '').split('\\n').join('').split('\\r').join('')) + '';\n    var mPeer = new MultiPeers(connection);\n    var preventDuplicateOnStreamEvents = {};\n\n    mPeer.onGettingLocalMedia = function (stream, callback) {\n      callback = callback || function () {};\n\n      if (preventDuplicateOnStreamEvents[stream.streamid]) {\n        callback();\n        return;\n      }\n\n      preventDuplicateOnStreamEvents[stream.streamid] = true;\n\n      try {\n        stream.type = 'local';\n      } catch (e) {}\n\n      connection.setStreamEndHandler(stream);\n      getRMCMediaElement(stream, function (mediaElement) {\n        mediaElement.id = stream.streamid;\n        mediaElement.muted = true;\n        mediaElement.volume = 0;\n\n        if (connection.attachStreams.indexOf(stream) === -1) {\n          connection.attachStreams.push(stream);\n        }\n\n        if (typeof StreamsHandler !== 'undefined') {\n          StreamsHandler.setHandlers(stream, true, connection);\n        }\n\n        connection.streamEvents[stream.streamid] = {\n          stream: stream,\n          type: 'local',\n          mediaElement: mediaElement,\n          userid: connection.userid,\n          extra: connection.extra,\n          streamid: stream.streamid,\n          isAudioMuted: true\n        };\n\n        try {\n          setHarkEvents(connection, connection.streamEvents[stream.streamid]);\n          setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\n          connection.onstream(connection.streamEvents[stream.streamid]);\n        } catch (e) {//\n        }\n\n        callback();\n      }, connection);\n    };\n\n    mPeer.onGettingRemoteMedia = function (stream, remoteUserId) {\n      try {\n        stream.type = 'remote';\n      } catch (e) {}\n\n      connection.setStreamEndHandler(stream, 'remote-stream');\n      getRMCMediaElement(stream, function (mediaElement) {\n        mediaElement.id = stream.streamid;\n\n        if (typeof StreamsHandler !== 'undefined') {\n          StreamsHandler.setHandlers(stream, false, connection);\n        }\n\n        connection.streamEvents[stream.streamid] = {\n          stream: stream,\n          type: 'remote',\n          userid: remoteUserId,\n          extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\n          mediaElement: mediaElement,\n          streamid: stream.streamid\n        };\n        setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\n        connection.onstream(connection.streamEvents[stream.streamid]);\n      }, connection);\n    };\n\n    mPeer.onRemovingRemoteMedia = function (stream, remoteUserId) {\n      var streamEvent = connection.streamEvents[stream.streamid];\n\n      if (!streamEvent) {\n        streamEvent = {\n          stream: stream,\n          type: 'remote',\n          userid: remoteUserId,\n          extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\n          streamid: stream.streamid,\n          mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\n        };\n      }\n\n      if (connection.peersBackup[streamEvent.userid]) {\n        streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\n      }\n\n      connection.onstreamended(streamEvent);\n      delete connection.streamEvents[stream.streamid];\n    };\n\n    mPeer.onNegotiationNeeded = function (message, remoteUserId, callback) {\n      callback = callback || function () {};\n\n      remoteUserId = remoteUserId || message.remoteUserId;\n      message = message || ''; // usually a message looks like this\n\n      var messageToDeliver = {\n        remoteUserId: remoteUserId,\n        message: message,\n        sender: connection.userid\n      };\n\n      if (message.remoteUserId && message.message && message.sender) {\n        // if a code is manually passing required data\n        messageToDeliver = message;\n      }\n\n      connectSocket(function () {\n        connection.socket.emit(connection.socketMessageEvent, messageToDeliver, callback);\n      });\n    };\n\n    function onUserLeft(remoteUserId) {\n      connection.deletePeer(remoteUserId);\n    }\n\n    mPeer.onUserLeft = onUserLeft;\n\n    mPeer.disconnectWith = function (remoteUserId, callback) {\n      if (connection.socket) {\n        connection.socket.emit('disconnect-with', remoteUserId, callback || function () {});\n      }\n\n      connection.deletePeer(remoteUserId);\n    };\n\n    connection.socketOptions = {\n      // 'force new connection': true, // For SocketIO version < 1.0\n      // 'forceNew': true, // For SocketIO version >= 1.0\n      'transport': 'polling' // fixing transport:unknown issues\n\n    };\n\n    function connectSocket(connectCallback) {\n      connection.socketAutoReConnect = true;\n\n      if (connection.socket) {\n        // todo: check here readySate/etc. to make sure socket is still opened\n        if (connectCallback) {\n          connectCallback(connection.socket);\n        }\n\n        return;\n      }\n\n      if (typeof SocketConnection === 'undefined') {\n        if (typeof FirebaseConnection !== 'undefined') {\n          window.SocketConnection = FirebaseConnection;\n        } else if (typeof PubNubConnection !== 'undefined') {\n          window.SocketConnection = PubNubConnection;\n        } else {\n          throw 'SocketConnection.js seems missed.';\n        }\n      }\n\n      new SocketConnection(connection, function (s) {\n        if (connectCallback) {\n          connectCallback(connection.socket);\n        }\n      });\n    } // 1st paramter is roomid\n    // 2rd paramter is a callback function\n\n\n    connection.openOrJoin = function (roomid, callback) {\n      callback = callback || function () {};\n\n      connection.checkPresence(roomid, function (isRoomExist, roomid) {\n        if (isRoomExist) {\n          connection.sessionid = roomid;\n          var localPeerSdpConstraints = false;\n          var remotePeerSdpConstraints = false;\n          var isOneWay = !!connection.session.oneway;\n          var isDataOnly = isData(connection.session);\n          remotePeerSdpConstraints = {\n            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\n          };\n          localPeerSdpConstraints = {\n            OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n            OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\n          };\n          var connectionDescription = {\n            remoteUserId: connection.sessionid,\n            message: {\n              newParticipationRequest: true,\n              isOneWay: isOneWay,\n              isDataOnly: isDataOnly,\n              localPeerSdpConstraints: localPeerSdpConstraints,\n              remotePeerSdpConstraints: remotePeerSdpConstraints\n            },\n            sender: connection.userid\n          };\n          beforeJoin(connectionDescription.message, function () {\n            joinRoom(connectionDescription, callback);\n          });\n          return;\n        }\n\n        connection.waitingForLocalMedia = true;\n        connection.isInitiator = true;\n        connection.sessionid = roomid || connection.sessionid;\n\n        if (isData(connection.session)) {\n          openRoom(callback);\n          return;\n        }\n\n        connection.captureUserMedia(function () {\n          openRoom(callback);\n        });\n      });\n    }; // don't allow someone to join this person until he has the media\n\n\n    connection.waitingForLocalMedia = false;\n\n    connection.open = function (roomid, callback) {\n      callback = callback || function () {};\n\n      connection.waitingForLocalMedia = true;\n      connection.isInitiator = true;\n      connection.sessionid = roomid || connection.sessionid;\n      connectSocket(function () {\n        if (isData(connection.session)) {\n          openRoom(callback);\n          return;\n        }\n\n        connection.captureUserMedia(function () {\n          openRoom(callback);\n        });\n      });\n    }; // this object keeps extra-data records for all connected users\n    // this object is never cleared so you can always access extra-data even if a user left\n\n\n    connection.peersBackup = {};\n\n    connection.deletePeer = function (remoteUserId) {\n      if (!remoteUserId || !connection.peers[remoteUserId]) {\n        return;\n      }\n\n      var eventObject = {\n        userid: remoteUserId,\n        extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {}\n      };\n\n      if (connection.peersBackup[eventObject.userid]) {\n        eventObject.extra = connection.peersBackup[eventObject.userid].extra;\n      }\n\n      connection.onleave(eventObject);\n\n      if (!!connection.peers[remoteUserId]) {\n        connection.peers[remoteUserId].streams.forEach(function (stream) {\n          stream.stop();\n        });\n        var peer = connection.peers[remoteUserId].peer;\n\n        if (peer && peer.iceConnectionState !== 'closed') {\n          try {\n            peer.close();\n          } catch (e) {}\n        }\n\n        if (connection.peers[remoteUserId]) {\n          connection.peers[remoteUserId].peer = null;\n          delete connection.peers[remoteUserId];\n        }\n      }\n    };\n\n    connection.rejoin = function (connectionDescription) {\n      if (connection.isInitiator || !connectionDescription || !Object.keys(connectionDescription).length) {\n        return;\n      }\n\n      var extra = {};\n\n      if (connection.peers[connectionDescription.remoteUserId]) {\n        extra = connection.peers[connectionDescription.remoteUserId].extra;\n        connection.deletePeer(connectionDescription.remoteUserId);\n      }\n\n      if (connectionDescription && connectionDescription.remoteUserId) {\n        connection.join(connectionDescription.remoteUserId);\n        connection.onReConnecting({\n          userid: connectionDescription.remoteUserId,\n          extra: extra\n        });\n      }\n    };\n\n    connection.join = function (remoteUserId, options) {\n      connection.sessionid = (remoteUserId ? remoteUserId.sessionid || remoteUserId.remoteUserId || remoteUserId : false) || connection.sessionid;\n      connection.sessionid += '';\n      var localPeerSdpConstraints = false;\n      var remotePeerSdpConstraints = false;\n      var isOneWay = false;\n      var isDataOnly = false;\n\n      if (remoteUserId && remoteUserId.session || !remoteUserId || typeof remoteUserId === 'string') {\n        var session = remoteUserId ? remoteUserId.session || connection.session : connection.session;\n        isOneWay = !!session.oneway;\n        isDataOnly = isData(session);\n        remotePeerSdpConstraints = {\n          OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n          OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\n        };\n        localPeerSdpConstraints = {\n          OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\n          OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\n        };\n      }\n\n      options = options || {};\n\n      var cb = function () {};\n\n      if (typeof options === 'function') {\n        cb = options;\n        options = {};\n      }\n\n      if (typeof options.localPeerSdpConstraints !== 'undefined') {\n        localPeerSdpConstraints = options.localPeerSdpConstraints;\n      }\n\n      if (typeof options.remotePeerSdpConstraints !== 'undefined') {\n        remotePeerSdpConstraints = options.remotePeerSdpConstraints;\n      }\n\n      if (typeof options.isOneWay !== 'undefined') {\n        isOneWay = options.isOneWay;\n      }\n\n      if (typeof options.isDataOnly !== 'undefined') {\n        isDataOnly = options.isDataOnly;\n      }\n\n      var connectionDescription = {\n        remoteUserId: connection.sessionid,\n        message: {\n          newParticipationRequest: true,\n          isOneWay: isOneWay,\n          isDataOnly: isDataOnly,\n          localPeerSdpConstraints: localPeerSdpConstraints,\n          remotePeerSdpConstraints: remotePeerSdpConstraints\n        },\n        sender: connection.userid\n      };\n      beforeJoin(connectionDescription.message, function () {\n        connectSocket(function () {\n          joinRoom(connectionDescription, cb);\n        });\n      });\n      return connectionDescription;\n    };\n\n    function joinRoom(connectionDescription, cb) {\n      connection.socket.emit('join-room', {\n        sessionid: connection.sessionid,\n        session: connection.session,\n        mediaConstraints: connection.mediaConstraints,\n        sdpConstraints: connection.sdpConstraints,\n        streams: getStreamInfoForAdmin(),\n        extra: connection.extra,\n        password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\n      }, function (isRoomJoined, error) {\n        if (isRoomJoined === true) {\n          if (connection.enableLogs) {\n            console.log('isRoomJoined: ', isRoomJoined, ' roomid: ', connection.sessionid);\n          }\n\n          if (!!connection.peers[connection.sessionid]) {\n            // on socket disconnect & reconnect\n            return;\n          }\n\n          mPeer.onNegotiationNeeded(connectionDescription);\n        }\n\n        if (isRoomJoined === false) {\n          if (connection.enableLogs) {\n            console.warn('isRoomJoined: ', error, ' roomid: ', connection.sessionid);\n          } // [disabled] retry after 3 seconds\n\n\n          false && setTimeout(function () {\n            joinRoom(connectionDescription, cb);\n          }, 3000);\n        }\n\n        cb(isRoomJoined, connection.sessionid, error);\n      });\n    }\n\n    connection.publicRoomIdentifier = '';\n\n    function openRoom(callback) {\n      if (connection.enableLogs) {\n        console.log('Sending open-room signal to socket.io');\n      }\n\n      connection.waitingForLocalMedia = false;\n      connection.socket.emit('open-room', {\n        sessionid: connection.sessionid,\n        session: connection.session,\n        mediaConstraints: connection.mediaConstraints,\n        sdpConstraints: connection.sdpConstraints,\n        streams: getStreamInfoForAdmin(),\n        extra: connection.extra,\n        identifier: connection.publicRoomIdentifier,\n        password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\n      }, function (isRoomOpened, error) {\n        if (isRoomOpened === true) {\n          if (connection.enableLogs) {\n            console.log('isRoomOpened: ', isRoomOpened, ' roomid: ', connection.sessionid);\n          }\n\n          callback(isRoomOpened, connection.sessionid);\n        }\n\n        if (isRoomOpened === false) {\n          if (connection.enableLogs) {\n            console.warn('isRoomOpened: ', error, ' roomid: ', connection.sessionid);\n          }\n\n          callback(isRoomOpened, connection.sessionid, error);\n        }\n      });\n    }\n\n    function getStreamInfoForAdmin() {\n      try {\n        return connection.streamEvents.selectAll('local').map(function (event) {\n          return {\n            streamid: event.streamid,\n            tracks: event.stream.getTracks().length\n          };\n        });\n      } catch (e) {\n        return [];\n      }\n    }\n\n    function beforeJoin(userPreferences, callback) {\n      if (connection.dontCaptureUserMedia || userPreferences.isDataOnly) {\n        callback();\n        return;\n      }\n\n      var localMediaConstraints = {};\n\n      if (userPreferences.localPeerSdpConstraints.OfferToReceiveAudio) {\n        localMediaConstraints.audio = connection.mediaConstraints.audio;\n      }\n\n      if (userPreferences.localPeerSdpConstraints.OfferToReceiveVideo) {\n        localMediaConstraints.video = connection.mediaConstraints.video;\n      }\n\n      var session = userPreferences.session || connection.session;\n\n      if (session.oneway && session.audio !== 'two-way' && session.video !== 'two-way' && session.screen !== 'two-way') {\n        callback();\n        return;\n      }\n\n      if (session.oneway && session.audio && session.audio === 'two-way') {\n        session = {\n          audio: true\n        };\n      }\n\n      if (session.audio || session.video || session.screen) {\n        if (session.screen) {\n          if (DetectRTC.browser.name === 'Edge') {\n            navigator.getDisplayMedia({\n              video: true,\n              audio: isAudioPlusTab(connection)\n            }).then(function (screen) {\n              screen.isScreen = true;\n              mPeer.onGettingLocalMedia(screen);\n\n              if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\n                connection.invokeGetUserMedia(null, callback);\n              } else {\n                callback(screen);\n              }\n            }, function (error) {\n              console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\n            });\n          } else {\n            connection.invokeGetUserMedia({\n              audio: isAudioPlusTab(connection),\n              video: true,\n              isScreen: true\n            }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, callback) : callback);\n          }\n        } else if (session.audio || session.video) {\n          connection.invokeGetUserMedia(null, callback, session);\n        }\n      }\n    }\n\n    connection.getUserMedia = connection.captureUserMedia = function (callback, sessionForced) {\n      callback = callback || function () {};\n\n      var session = sessionForced || connection.session;\n\n      if (connection.dontCaptureUserMedia || isData(session)) {\n        callback();\n        return;\n      }\n\n      if (session.audio || session.video || session.screen) {\n        if (session.screen) {\n          if (DetectRTC.browser.name === 'Edge') {\n            navigator.getDisplayMedia({\n              video: true,\n              audio: isAudioPlusTab(connection)\n            }).then(function (screen) {\n              screen.isScreen = true;\n              mPeer.onGettingLocalMedia(screen);\n\n              if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\n                var nonScreenSession = {};\n\n                for (var s in session) {\n                  if (s !== 'screen') {\n                    nonScreenSession[s] = session[s];\n                  }\n                }\n\n                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\n                return;\n              }\n\n              callback(screen);\n            }, function (error) {\n              console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\n            });\n          } else {\n            connection.invokeGetUserMedia({\n              audio: isAudioPlusTab(connection),\n              video: true,\n              isScreen: true\n            }, function (stream) {\n              if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\n                var nonScreenSession = {};\n\n                for (var s in session) {\n                  if (s !== 'screen') {\n                    nonScreenSession[s] = session[s];\n                  }\n                }\n\n                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\n                return;\n              }\n\n              callback(stream);\n            });\n          }\n        } else if (session.audio || session.video) {\n          connection.invokeGetUserMedia(sessionForced, callback, session);\n        }\n      }\n    };\n\n    connection.onbeforeunload = function (arg1, dontCloseSocket) {\n      if (!connection.closeBeforeUnload) {\n        return;\n      }\n\n      connection.peers.getAllParticipants().forEach(function (participant) {\n        mPeer.onNegotiationNeeded({\n          userLeft: true\n        }, participant);\n\n        if (connection.peers[participant] && connection.peers[participant].peer) {\n          connection.peers[participant].peer.close();\n        }\n\n        delete connection.peers[participant];\n      });\n\n      if (!dontCloseSocket) {\n        connection.closeSocket();\n      }\n\n      connection.isInitiator = false;\n    };\n\n    if (!window.ignoreBeforeUnload) {\n      // user can implement its own version of window.onbeforeunload\n      connection.closeBeforeUnload = true;\n      window.addEventListener('beforeunload', connection.onbeforeunload, false);\n    } else {\n      connection.closeBeforeUnload = false;\n    }\n\n    connection.userid = getRandomString();\n\n    connection.changeUserId = function (newUserId, callback) {\n      callback = callback || function () {};\n\n      connection.userid = newUserId || getRandomString();\n      connection.socket.emit('changed-uuid', connection.userid, callback);\n    };\n\n    connection.extra = {};\n    connection.attachStreams = [];\n    connection.session = {\n      audio: true,\n      video: true\n    };\n    connection.enableFileSharing = false; // all values in kbps\n\n    connection.bandwidth = {\n      screen: false,\n      audio: false,\n      video: false\n    };\n    connection.codecs = {\n      audio: 'opus',\n      video: 'VP9'\n    };\n\n    connection.processSdp = function (sdp) {\n      // ignore SDP modification if unified-pan is supported\n      if (isUnifiedPlanSupportedDefault()) {\n        return sdp;\n      }\n\n      if (DetectRTC.browser.name === 'Safari') {\n        return sdp;\n      }\n\n      if (connection.codecs.video.toUpperCase() === 'VP8') {\n        sdp = CodecsHandler.preferCodec(sdp, 'vp8');\n      }\n\n      if (connection.codecs.video.toUpperCase() === 'VP9') {\n        sdp = CodecsHandler.preferCodec(sdp, 'vp9');\n      }\n\n      if (connection.codecs.video.toUpperCase() === 'H264') {\n        sdp = CodecsHandler.preferCodec(sdp, 'h264');\n      }\n\n      if (connection.codecs.audio === 'G722') {\n        sdp = CodecsHandler.removeNonG722(sdp);\n      }\n\n      if (DetectRTC.browser.name === 'Firefox') {\n        return sdp;\n      }\n\n      if (connection.bandwidth.video || connection.bandwidth.screen) {\n        sdp = CodecsHandler.setApplicationSpecificBandwidth(sdp, connection.bandwidth, !!connection.session.screen);\n      }\n\n      if (connection.bandwidth.video) {\n        sdp = CodecsHandler.setVideoBitrates(sdp, {\n          min: connection.bandwidth.video * 8 * 1024,\n          max: connection.bandwidth.video * 8 * 1024\n        });\n      }\n\n      if (connection.bandwidth.audio) {\n        sdp = CodecsHandler.setOpusAttributes(sdp, {\n          maxaveragebitrate: connection.bandwidth.audio * 8 * 1024,\n          maxplaybackrate: connection.bandwidth.audio * 8 * 1024,\n          stereo: 1,\n          maxptime: 3\n        });\n      }\n\n      return sdp;\n    };\n\n    if (typeof CodecsHandler !== 'undefined') {\n      connection.BandwidthHandler = connection.CodecsHandler = CodecsHandler;\n    }\n\n    connection.mediaConstraints = {\n      audio: {\n        mandatory: {},\n        optional: connection.bandwidth.audio ? [{\n          bandwidth: connection.bandwidth.audio * 8 * 1024 || 128 * 8 * 1024\n        }] : []\n      },\n      video: {\n        mandatory: {},\n        optional: connection.bandwidth.video ? [{\n          bandwidth: connection.bandwidth.video * 8 * 1024 || 128 * 8 * 1024\n        }, {\n          facingMode: 'user'\n        }] : [{\n          facingMode: 'user'\n        }]\n      }\n    };\n\n    if (DetectRTC.browser.name === 'Firefox') {\n      connection.mediaConstraints = {\n        audio: true,\n        video: true\n      };\n    }\n\n    if (!forceOptions.useDefaultDevices && !DetectRTC.isMobileDevice) {\n      DetectRTC.load(function () {\n        var lastAudioDevice, lastVideoDevice; // it will force RTCMultiConnection to capture last-devices\n        // i.e. if external microphone is attached to system, we should prefer it over built-in devices.\n\n        DetectRTC.MediaDevices.forEach(function (device) {\n          if (device.kind === 'audioinput' && connection.mediaConstraints.audio !== false) {\n            lastAudioDevice = device;\n          }\n\n          if (device.kind === 'videoinput' && connection.mediaConstraints.video !== false) {\n            lastVideoDevice = device;\n          }\n        });\n\n        if (lastAudioDevice) {\n          if (DetectRTC.browser.name === 'Firefox') {\n            if (connection.mediaConstraints.audio !== true) {\n              connection.mediaConstraints.audio.deviceId = lastAudioDevice.id;\n            } else {\n              connection.mediaConstraints.audio = {\n                deviceId: lastAudioDevice.id\n              };\n            }\n\n            return;\n          }\n\n          if (connection.mediaConstraints.audio == true) {\n            connection.mediaConstraints.audio = {\n              mandatory: {},\n              optional: []\n            };\n          }\n\n          if (!connection.mediaConstraints.audio.optional) {\n            connection.mediaConstraints.audio.optional = [];\n          }\n\n          var optional = [{\n            sourceId: lastAudioDevice.id\n          }];\n          connection.mediaConstraints.audio.optional = optional.concat(connection.mediaConstraints.audio.optional);\n        }\n\n        if (lastVideoDevice) {\n          if (DetectRTC.browser.name === 'Firefox') {\n            if (connection.mediaConstraints.video !== true) {\n              connection.mediaConstraints.video.deviceId = lastVideoDevice.id;\n            } else {\n              connection.mediaConstraints.video = {\n                deviceId: lastVideoDevice.id\n              };\n            }\n\n            return;\n          }\n\n          if (connection.mediaConstraints.video == true) {\n            connection.mediaConstraints.video = {\n              mandatory: {},\n              optional: []\n            };\n          }\n\n          if (!connection.mediaConstraints.video.optional) {\n            connection.mediaConstraints.video.optional = [];\n          }\n\n          var optional = [{\n            sourceId: lastVideoDevice.id\n          }];\n          connection.mediaConstraints.video.optional = optional.concat(connection.mediaConstraints.video.optional);\n        }\n      });\n    }\n\n    connection.sdpConstraints = {\n      mandatory: {\n        OfferToReceiveAudio: true,\n        OfferToReceiveVideo: true\n      },\n      optional: [{\n        VoiceActivityDetection: false\n      }]\n    };\n    connection.sdpSemantics = null; // \"unified-plan\" or \"plan-b\", ref: webrtc.org/web-apis/chrome/unified-plan/\n\n    connection.iceCandidatePoolSize = null; // 0\n\n    connection.bundlePolicy = null; // max-bundle\n\n    connection.rtcpMuxPolicy = null; // \"require\" or \"negotiate\"\n\n    connection.iceTransportPolicy = null; // \"relay\" or \"all\"\n\n    connection.optionalArgument = {\n      optional: [{\n        DtlsSrtpKeyAgreement: true\n      }, {\n        googImprovedWifiBwe: true\n      }, {\n        googScreencastMinBitrate: 300\n      }, {\n        googIPv6: true\n      }, {\n        googDscp: true\n      }, {\n        googCpuUnderuseThreshold: 55\n      }, {\n        googCpuOveruseThreshold: 85\n      }, {\n        googSuspendBelowMinBitrate: true\n      }, {\n        googCpuOveruseDetection: true\n      }],\n      mandatory: {}\n    };\n    connection.iceServers = IceServersHandler.getIceServers(connection);\n    connection.candidates = {\n      host: true,\n      stun: true,\n      turn: true\n    };\n    connection.iceProtocols = {\n      tcp: true,\n      udp: true\n    }; // EVENTs\n\n    connection.onopen = function (event) {\n      if (!!connection.enableLogs) {\n        console.info('Data connection has been opened between you & ', event.userid);\n      }\n    };\n\n    connection.onclose = function (event) {\n      if (!!connection.enableLogs) {\n        console.warn('Data connection has been closed between you & ', event.userid);\n      }\n    };\n\n    connection.onerror = function (error) {\n      if (!!connection.enableLogs) {\n        console.error(error.userid, 'data-error', error);\n      }\n    };\n\n    connection.onmessage = function (event) {\n      if (!!connection.enableLogs) {\n        console.debug('data-message', event.userid, event.data);\n      }\n    };\n\n    connection.send = function (data, remoteUserId) {\n      connection.peers.send(data, remoteUserId);\n    };\n\n    connection.close = connection.disconnect = connection.leave = function () {\n      connection.onbeforeunload(false, true);\n    };\n\n    connection.closeEntireSession = function (callback) {\n      callback = callback || function () {};\n\n      connection.socket.emit('close-entire-session', function looper() {\n        if (connection.getAllParticipants().length) {\n          setTimeout(looper, 100);\n          return;\n        }\n\n        connection.onEntireSessionClosed({\n          sessionid: connection.sessionid,\n          userid: connection.userid,\n          extra: connection.extra\n        });\n        connection.changeUserId(null, function () {\n          connection.close();\n          callback();\n        });\n      });\n    };\n\n    connection.onEntireSessionClosed = function (event) {\n      if (!connection.enableLogs) return;\n      console.info('Entire session is closed: ', event.sessionid, event.extra);\n    };\n\n    connection.onstream = function (e) {\n      var parentNode = connection.videosContainer;\n      parentNode.insertBefore(e.mediaElement, parentNode.firstChild);\n      var played = e.mediaElement.play();\n\n      if (typeof played !== 'undefined') {\n        played.catch(function () {\n          /*** iOS 11 doesn't allow automatic play and rejects ***/\n        }).then(function () {\n          setTimeout(function () {\n            e.mediaElement.play();\n          }, 2000);\n        });\n        return;\n      }\n\n      setTimeout(function () {\n        e.mediaElement.play();\n      }, 2000);\n    };\n\n    connection.onstreamended = function (e) {\n      if (!e.mediaElement) {\n        e.mediaElement = document.getElementById(e.streamid);\n      }\n\n      if (!e.mediaElement || !e.mediaElement.parentNode) {\n        return;\n      }\n\n      e.mediaElement.parentNode.removeChild(e.mediaElement);\n    };\n\n    connection.direction = 'many-to-many';\n\n    connection.removeStream = function (streamid, remoteUserId) {\n      var stream;\n      connection.attachStreams.forEach(function (localStream) {\n        if (localStream.id === streamid) {\n          stream = localStream;\n        }\n      });\n\n      if (!stream) {\n        console.warn('No such stream exist.', streamid);\n        return;\n      }\n\n      connection.peers.getAllParticipants().forEach(function (participant) {\n        if (remoteUserId && participant !== remoteUserId) {\n          return;\n        }\n\n        var user = connection.peers[participant];\n\n        try {\n          user.peer.removeStream(stream);\n        } catch (e) {}\n      });\n      connection.renegotiate();\n    };\n\n    connection.addStream = function (session, remoteUserId) {\n      if (!!session.getTracks) {\n        if (connection.attachStreams.indexOf(session) === -1) {\n          if (!session.streamid) {\n            session.streamid = session.id;\n          }\n\n          connection.attachStreams.push(session);\n        }\n\n        connection.renegotiate(remoteUserId);\n        return;\n      }\n\n      if (isData(session)) {\n        connection.renegotiate(remoteUserId);\n        return;\n      }\n\n      if (session.audio || session.video || session.screen) {\n        if (session.screen) {\n          if (DetectRTC.browser.name === 'Edge') {\n            navigator.getDisplayMedia({\n              video: true,\n              audio: isAudioPlusTab(connection)\n            }).then(function (screen) {\n              screen.isScreen = true;\n              mPeer.onGettingLocalMedia(screen);\n\n              if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\n                connection.invokeGetUserMedia(null, function (stream) {\n                  gumCallback(stream);\n                });\n              } else {\n                gumCallback(screen);\n              }\n            }, function (error) {\n              console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\n            });\n          } else {\n            connection.invokeGetUserMedia({\n              audio: isAudioPlusTab(connection),\n              video: true,\n              isScreen: true\n            }, function (stream) {\n              if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\n                connection.invokeGetUserMedia(null, function (stream) {\n                  gumCallback(stream);\n                });\n              } else {\n                gumCallback(stream);\n              }\n            });\n          }\n        } else if (session.audio || session.video) {\n          connection.invokeGetUserMedia(null, gumCallback);\n        }\n      }\n\n      function gumCallback(stream) {\n        if (session.streamCallback) {\n          session.streamCallback(stream);\n        }\n\n        connection.renegotiate(remoteUserId);\n      }\n    };\n\n    connection.invokeGetUserMedia = function (localMediaConstraints, callback, session) {\n      if (!session) {\n        session = connection.session;\n      }\n\n      if (!localMediaConstraints) {\n        localMediaConstraints = connection.mediaConstraints;\n      }\n\n      getUserMediaHandler({\n        onGettingLocalMedia: function (stream) {\n          var videoConstraints = localMediaConstraints.video;\n\n          if (videoConstraints) {\n            if (videoConstraints.mediaSource || videoConstraints.mozMediaSource) {\n              stream.isScreen = true;\n            } else if (videoConstraints.mandatory && videoConstraints.mandatory.chromeMediaSource) {\n              stream.isScreen = true;\n            }\n          }\n\n          if (!stream.isScreen) {\n            stream.isVideo = !!getTracks(stream, 'video').length;\n            stream.isAudio = !stream.isVideo && getTracks(stream, 'audio').length;\n          }\n\n          mPeer.onGettingLocalMedia(stream, function () {\n            if (typeof callback === 'function') {\n              callback(stream);\n            }\n          });\n        },\n        onLocalMediaError: function (error, constraints) {\n          mPeer.onLocalMediaError(error, constraints);\n        },\n        localMediaConstraints: localMediaConstraints || {\n          audio: session.audio ? localMediaConstraints.audio : false,\n          video: session.video ? localMediaConstraints.video : false\n        }\n      });\n    };\n\n    function applyConstraints(stream, mediaConstraints) {\n      if (!stream) {\n        if (!!connection.enableLogs) {\n          console.error('No stream to applyConstraints.');\n        }\n\n        return;\n      }\n\n      if (mediaConstraints.audio) {\n        getTracks(stream, 'audio').forEach(function (track) {\n          track.applyConstraints(mediaConstraints.audio);\n        });\n      }\n\n      if (mediaConstraints.video) {\n        getTracks(stream, 'video').forEach(function (track) {\n          track.applyConstraints(mediaConstraints.video);\n        });\n      }\n    }\n\n    connection.applyConstraints = function (mediaConstraints, streamid) {\n      if (!MediaStreamTrack || !MediaStreamTrack.prototype.applyConstraints) {\n        alert('track.applyConstraints is NOT supported in your browser.');\n        return;\n      }\n\n      if (streamid) {\n        var stream;\n\n        if (connection.streamEvents[streamid]) {\n          stream = connection.streamEvents[streamid].stream;\n        }\n\n        applyConstraints(stream, mediaConstraints);\n        return;\n      }\n\n      connection.attachStreams.forEach(function (stream) {\n        applyConstraints(stream, mediaConstraints);\n      });\n    };\n\n    function replaceTrack(track, remoteUserId, isVideoTrack) {\n      if (remoteUserId) {\n        mPeer.replaceTrack(track, remoteUserId, isVideoTrack);\n        return;\n      }\n\n      connection.peers.getAllParticipants().forEach(function (participant) {\n        mPeer.replaceTrack(track, participant, isVideoTrack);\n      });\n    }\n\n    connection.replaceTrack = function (session, remoteUserId, isVideoTrack) {\n      session = session || {};\n\n      if (!RTCPeerConnection.prototype.getSenders) {\n        connection.addStream(session);\n        return;\n      }\n\n      if (session instanceof MediaStreamTrack) {\n        replaceTrack(session, remoteUserId, isVideoTrack);\n        return;\n      }\n\n      if (session instanceof MediaStream) {\n        if (getTracks(session, 'video').length) {\n          replaceTrack(getTracks(session, 'video')[0], remoteUserId, true);\n        }\n\n        if (getTracks(session, 'audio').length) {\n          replaceTrack(getTracks(session, 'audio')[0], remoteUserId, false);\n        }\n\n        return;\n      }\n\n      if (isData(session)) {\n        throw 'connection.replaceTrack requires audio and/or video and/or screen.';\n        return;\n      }\n\n      if (session.audio || session.video || session.screen) {\n        if (session.screen) {\n          if (DetectRTC.browser.name === 'Edge') {\n            navigator.getDisplayMedia({\n              video: true,\n              audio: isAudioPlusTab(connection)\n            }).then(function (screen) {\n              screen.isScreen = true;\n              mPeer.onGettingLocalMedia(screen);\n\n              if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\n                connection.invokeGetUserMedia(null, gumCallback);\n              } else {\n                gumCallback(screen);\n              }\n            }, function (error) {\n              console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\n            });\n          } else {\n            connection.invokeGetUserMedia({\n              audio: isAudioPlusTab(connection),\n              video: true,\n              isScreen: true\n            }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, gumCallback) : gumCallback);\n          }\n        } else if (session.audio || session.video) {\n          connection.invokeGetUserMedia(null, gumCallback);\n        }\n      }\n\n      function gumCallback(stream) {\n        connection.replaceTrack(stream, remoteUserId, isVideoTrack || session.video || session.screen);\n      }\n    };\n\n    connection.resetTrack = function (remoteUsersIds, isVideoTrack) {\n      if (!remoteUsersIds) {\n        remoteUsersIds = connection.getAllParticipants();\n      }\n\n      if (typeof remoteUsersIds == 'string') {\n        remoteUsersIds = [remoteUsersIds];\n      }\n\n      remoteUsersIds.forEach(function (participant) {\n        var peer = connection.peers[participant].peer;\n\n        if ((typeof isVideoTrack === 'undefined' || isVideoTrack === true) && peer.lastVideoTrack) {\n          connection.replaceTrack(peer.lastVideoTrack, participant, true);\n        }\n\n        if ((typeof isVideoTrack === 'undefined' || isVideoTrack === false) && peer.lastAudioTrack) {\n          connection.replaceTrack(peer.lastAudioTrack, participant, false);\n        }\n      });\n    };\n\n    connection.renegotiate = function (remoteUserId) {\n      if (remoteUserId) {\n        mPeer.renegotiatePeer(remoteUserId);\n        return;\n      }\n\n      connection.peers.getAllParticipants().forEach(function (participant) {\n        mPeer.renegotiatePeer(participant);\n      });\n    };\n\n    connection.setStreamEndHandler = function (stream, isRemote) {\n      if (!stream || !stream.addEventListener) return;\n      isRemote = !!isRemote;\n\n      if (stream.alreadySetEndHandler) {\n        return;\n      }\n\n      stream.alreadySetEndHandler = true;\n      var streamEndedEvent = 'ended';\n\n      if ('oninactive' in stream) {\n        streamEndedEvent = 'inactive';\n      }\n\n      stream.addEventListener(streamEndedEvent, function () {\n        if (stream.idInstance) {\n          currentUserMediaRequest.remove(stream.idInstance);\n        }\n\n        if (!isRemote) {\n          // reset attachStreams\n          var streams = [];\n          connection.attachStreams.forEach(function (s) {\n            if (s.id != stream.id) {\n              streams.push(s);\n            }\n          });\n          connection.attachStreams = streams;\n        } // connection.renegotiate();\n\n\n        var streamEvent = connection.streamEvents[stream.streamid];\n\n        if (!streamEvent) {\n          streamEvent = {\n            stream: stream,\n            streamid: stream.streamid,\n            type: isRemote ? 'remote' : 'local',\n            userid: connection.userid,\n            extra: connection.extra,\n            mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\n          };\n        }\n\n        if (isRemote && connection.peers[streamEvent.userid]) {\n          // reset remote \"streams\"\n          var peer = connection.peers[streamEvent.userid].peer;\n          var streams = [];\n          peer.getRemoteStreams().forEach(function (s) {\n            if (s.id != stream.id) {\n              streams.push(s);\n            }\n          });\n          connection.peers[streamEvent.userid].streams = streams;\n        }\n\n        if (streamEvent.userid === connection.userid && streamEvent.type === 'remote') {\n          return;\n        }\n\n        if (connection.peersBackup[streamEvent.userid]) {\n          streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\n        }\n\n        connection.onstreamended(streamEvent);\n        delete connection.streamEvents[stream.streamid];\n      }, false);\n    };\n\n    connection.onMediaError = function (error, constraints) {\n      if (!!connection.enableLogs) {\n        console.error(error, constraints);\n      }\n    };\n\n    connection.autoCloseEntireSession = false;\n    connection.filesContainer = connection.videosContainer = document.body || document.documentElement;\n    connection.isInitiator = false;\n    connection.shareFile = mPeer.shareFile;\n\n    if (typeof FileProgressBarHandler !== 'undefined') {\n      FileProgressBarHandler.handle(connection);\n    }\n\n    if (typeof TranslationHandler !== 'undefined') {\n      TranslationHandler.handle(connection);\n    }\n\n    connection.token = getRandomString;\n\n    connection.onNewParticipant = function (participantId, userPreferences) {\n      connection.acceptParticipationRequest(participantId, userPreferences);\n    };\n\n    connection.acceptParticipationRequest = function (participantId, userPreferences) {\n      if (userPreferences.successCallback) {\n        userPreferences.successCallback();\n        delete userPreferences.successCallback;\n      }\n\n      mPeer.createNewPeer(participantId, userPreferences);\n    };\n\n    if (typeof StreamsHandler !== 'undefined') {\n      connection.StreamsHandler = StreamsHandler;\n    }\n\n    connection.onleave = function (userid) {};\n\n    connection.invokeSelectFileDialog = function (callback) {\n      var selector = new FileSelector();\n      selector.accept = '*.*';\n      selector.selectSingleFile(callback);\n    };\n\n    connection.onmute = function (e) {\n      if (!e || !e.mediaElement) {\n        return;\n      }\n\n      if (e.muteType === 'both' || e.muteType === 'video') {\n        e.mediaElement.src = null;\n        var paused = e.mediaElement.pause();\n\n        if (typeof paused !== 'undefined') {\n          paused.then(function () {\n            e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\n          });\n        } else {\n          e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\n        }\n      } else if (e.muteType === 'audio') {\n        e.mediaElement.muted = true;\n      }\n    };\n\n    connection.onunmute = function (e) {\n      if (!e || !e.mediaElement || !e.stream) {\n        return;\n      }\n\n      if (e.unmuteType === 'both' || e.unmuteType === 'video') {\n        e.mediaElement.poster = null;\n        e.mediaElement.srcObject = e.stream;\n        e.mediaElement.play();\n      } else if (e.unmuteType === 'audio') {\n        e.mediaElement.muted = false;\n      }\n    };\n\n    connection.onExtraDataUpdated = function (event) {\n      event.status = 'online';\n      connection.onUserStatusChanged(event, true);\n    };\n\n    connection.getAllParticipants = function (sender) {\n      return connection.peers.getAllParticipants(sender);\n    };\n\n    if (typeof StreamsHandler !== 'undefined') {\n      StreamsHandler.onSyncNeeded = function (streamid, action, type) {\n        connection.peers.getAllParticipants().forEach(function (participant) {\n          mPeer.onNegotiationNeeded({\n            streamid: streamid,\n            action: action,\n            streamSyncNeeded: true,\n            type: type || 'both'\n          }, participant);\n        });\n      };\n    }\n\n    connection.connectSocket = function (callback) {\n      connectSocket(callback);\n    };\n\n    connection.closeSocket = function () {\n      try {\n        io.sockets = {};\n      } catch (e) {}\n\n      ;\n      if (!connection.socket) return;\n\n      if (typeof connection.socket.disconnect === 'function') {\n        connection.socket.disconnect();\n      }\n\n      if (typeof connection.socket.resetProps === 'function') {\n        connection.socket.resetProps();\n      }\n\n      connection.socket = null;\n    };\n\n    connection.getSocket = function (callback) {\n      if (!callback && connection.enableLogs) {\n        console.warn('getSocket.callback paramter is required.');\n      }\n\n      callback = callback || function () {};\n\n      if (!connection.socket) {\n        connectSocket(function () {\n          callback(connection.socket);\n        });\n      } else {\n        callback(connection.socket);\n      }\n\n      return connection.socket; // callback is preferred over return-statement\n    };\n\n    connection.getRemoteStreams = mPeer.getRemoteStreams;\n    var skipStreams = ['selectFirst', 'selectAll', 'forEach'];\n    connection.streamEvents = {\n      selectFirst: function (options) {\n        return connection.streamEvents.selectAll(options)[0];\n      },\n      selectAll: function (options) {\n        if (!options) {\n          // default will always be all streams\n          options = {\n            local: true,\n            remote: true,\n            isScreen: true,\n            isAudio: true,\n            isVideo: true\n          };\n        }\n\n        if (options == 'local') {\n          options = {\n            local: true\n          };\n        }\n\n        if (options == 'remote') {\n          options = {\n            remote: true\n          };\n        }\n\n        if (options == 'screen') {\n          options = {\n            isScreen: true\n          };\n        }\n\n        if (options == 'audio') {\n          options = {\n            isAudio: true\n          };\n        }\n\n        if (options == 'video') {\n          options = {\n            isVideo: true\n          };\n        }\n\n        var streams = [];\n        Object.keys(connection.streamEvents).forEach(function (key) {\n          var event = connection.streamEvents[key];\n          if (skipStreams.indexOf(key) !== -1) return;\n          var ignore = true;\n\n          if (options.local && event.type === 'local') {\n            ignore = false;\n          }\n\n          if (options.remote && event.type === 'remote') {\n            ignore = false;\n          }\n\n          if (options.isScreen && event.stream.isScreen) {\n            ignore = false;\n          }\n\n          if (options.isVideo && event.stream.isVideo) {\n            ignore = false;\n          }\n\n          if (options.isAudio && event.stream.isAudio) {\n            ignore = false;\n          }\n\n          if (options.userid && event.userid === options.userid) {\n            ignore = false;\n          }\n\n          if (ignore === false) {\n            streams.push(event);\n          }\n        });\n        return streams;\n      }\n    };\n    connection.socketURL = '/'; // generated via config.json\n\n    connection.socketMessageEvent = 'RTCMultiConnection-Message'; // generated via config.json\n\n    connection.socketCustomEvent = 'RTCMultiConnection-Custom-Message'; // generated via config.json\n\n    connection.DetectRTC = DetectRTC;\n\n    connection.setCustomSocketEvent = function (customEvent) {\n      if (customEvent) {\n        connection.socketCustomEvent = customEvent;\n      }\n\n      if (!connection.socket) {\n        return;\n      }\n\n      connection.socket.emit('set-custom-socket-event-listener', connection.socketCustomEvent);\n    };\n\n    connection.getNumberOfBroadcastViewers = function (broadcastId, callback) {\n      if (!connection.socket || !broadcastId || !callback) return;\n      connection.socket.emit('get-number-of-users-in-specific-broadcast', broadcastId, callback);\n    };\n\n    connection.onNumberOfBroadcastViewersUpdated = function (event) {\n      if (!connection.enableLogs || !connection.isInitiator) return;\n      console.info('Number of broadcast (', event.broadcastId, ') viewers', event.numberOfBroadcastViewers);\n    };\n\n    connection.onUserStatusChanged = function (event, dontWriteLogs) {\n      if (!!connection.enableLogs && !dontWriteLogs) {\n        console.info(event.userid, event.status);\n      }\n    };\n\n    connection.getUserMediaHandler = getUserMediaHandler;\n    connection.multiPeersHandler = mPeer;\n    connection.enableLogs = true;\n\n    connection.setCustomSocketHandler = function (customSocketHandler) {\n      if (typeof SocketConnection !== 'undefined') {\n        SocketConnection = customSocketHandler;\n      }\n    }; // default value should be 15k because [old]Firefox's receiving limit is 16k!\n    // however 64k works chrome-to-chrome\n\n\n    connection.chunkSize = 40 * 1000;\n    connection.maxParticipantsAllowed = 1000; // eject or leave single user\n\n    connection.disconnectWith = mPeer.disconnectWith; // check if room exist on server\n    // we will pass roomid to the server and wait for callback (i.e. server's response)\n\n    connection.checkPresence = function (roomid, callback) {\n      roomid = roomid || connection.sessionid;\n\n      if (SocketConnection.name === 'SSEConnection') {\n        SSEConnection.checkPresence(roomid, function (isRoomExist, _roomid, extra) {\n          if (!connection.socket) {\n            if (!isRoomExist) {\n              connection.userid = _roomid;\n            }\n\n            connection.connectSocket(function () {\n              callback(isRoomExist, _roomid, extra);\n            });\n            return;\n          }\n\n          callback(isRoomExist, _roomid);\n        });\n        return;\n      }\n\n      if (!connection.socket) {\n        connection.connectSocket(function () {\n          connection.checkPresence(roomid, callback);\n        });\n        return;\n      }\n\n      connection.socket.emit('check-presence', roomid + '', function (isRoomExist, _roomid, extra) {\n        if (connection.enableLogs) {\n          console.log('checkPresence.isRoomExist: ', isRoomExist, ' roomid: ', _roomid);\n        }\n\n        callback(isRoomExist, _roomid, extra);\n      });\n    };\n\n    connection.onReadyForOffer = function (remoteUserId, userPreferences) {\n      connection.multiPeersHandler.createNewPeer(remoteUserId, userPreferences);\n    };\n\n    connection.setUserPreferences = function (userPreferences) {\n      if (connection.dontAttachStream) {\n        userPreferences.dontAttachLocalStream = true;\n      }\n\n      if (connection.dontGetRemoteStream) {\n        userPreferences.dontGetRemoteStream = true;\n      }\n\n      return userPreferences;\n    };\n\n    connection.updateExtraData = function () {\n      connection.socket.emit('extra-data-updated', connection.extra);\n    };\n\n    connection.enableScalableBroadcast = false;\n    connection.maxRelayLimitPerUser = 3; // each broadcast should serve only 3 users\n\n    connection.dontCaptureUserMedia = false;\n    connection.dontAttachStream = false;\n    connection.dontGetRemoteStream = false;\n\n    connection.onReConnecting = function (event) {\n      if (connection.enableLogs) {\n        console.info('ReConnecting with', event.userid, '...');\n      }\n    };\n\n    connection.beforeAddingStream = function (stream) {\n      return stream;\n    };\n\n    connection.beforeRemovingStream = function (stream) {\n      return stream;\n    };\n\n    if (typeof isChromeExtensionAvailable !== 'undefined') {\n      connection.checkIfChromeExtensionAvailable = isChromeExtensionAvailable;\n    }\n\n    if (typeof isFirefoxExtensionAvailable !== 'undefined') {\n      connection.checkIfChromeExtensionAvailable = isFirefoxExtensionAvailable;\n    }\n\n    if (typeof getChromeExtensionStatus !== 'undefined') {\n      connection.getChromeExtensionStatus = getChromeExtensionStatus;\n    }\n\n    connection.modifyScreenConstraints = function (screen_constraints) {\n      return screen_constraints;\n    };\n\n    connection.onPeerStateChanged = function (state) {\n      if (connection.enableLogs) {\n        if (state.iceConnectionState.search(/closed|failed/gi) !== -1) {\n          console.error('Peer connection is closed between you & ', state.userid, state.extra, 'state:', state.iceConnectionState);\n        }\n      }\n    };\n\n    connection.isOnline = true;\n    listenEventHandler('online', function () {\n      connection.isOnline = true;\n    });\n    listenEventHandler('offline', function () {\n      connection.isOnline = false;\n    });\n    connection.isLowBandwidth = false;\n\n    if (navigator && navigator.connection && navigator.connection.type) {\n      connection.isLowBandwidth = navigator.connection.type.toString().toLowerCase().search(/wifi|cell/g) !== -1;\n\n      if (connection.isLowBandwidth) {\n        connection.bandwidth = {\n          audio: false,\n          video: false,\n          screen: false\n        };\n\n        if (connection.mediaConstraints.audio && connection.mediaConstraints.audio.optional && connection.mediaConstraints.audio.optional.length) {\n          var newArray = [];\n          connection.mediaConstraints.audio.optional.forEach(function (opt) {\n            if (typeof opt.bandwidth === 'undefined') {\n              newArray.push(opt);\n            }\n          });\n          connection.mediaConstraints.audio.optional = newArray;\n        }\n\n        if (connection.mediaConstraints.video && connection.mediaConstraints.video.optional && connection.mediaConstraints.video.optional.length) {\n          var newArray = [];\n          connection.mediaConstraints.video.optional.forEach(function (opt) {\n            if (typeof opt.bandwidth === 'undefined') {\n              newArray.push(opt);\n            }\n          });\n          connection.mediaConstraints.video.optional = newArray;\n        }\n      }\n    }\n\n    connection.getExtraData = function (remoteUserId, callback) {\n      if (!remoteUserId) throw 'remoteUserId is required.';\n\n      if (typeof callback === 'function') {\n        connection.socket.emit('get-remote-user-extra-data', remoteUserId, function (extra, remoteUserId, error) {\n          callback(extra, remoteUserId, error);\n        });\n        return;\n      }\n\n      if (!connection.peers[remoteUserId]) {\n        if (connection.peersBackup[remoteUserId]) {\n          return connection.peersBackup[remoteUserId].extra;\n        }\n\n        return {};\n      }\n\n      return connection.peers[remoteUserId].extra;\n    };\n\n    if (!!forceOptions.autoOpenOrJoin) {\n      connection.openOrJoin(connection.sessionid);\n    }\n\n    connection.onUserIdAlreadyTaken = function (useridAlreadyTaken, yourNewUserId) {\n      // via #683\n      connection.close();\n      connection.closeSocket();\n      connection.isInitiator = false;\n      connection.userid = connection.token();\n      connection.join(connection.sessionid);\n\n      if (connection.enableLogs) {\n        console.warn('Userid already taken.', useridAlreadyTaken, 'Your new userid:', connection.userid);\n      }\n    };\n\n    connection.trickleIce = true;\n    connection.version = '3.6.9';\n\n    connection.onSettingLocalDescription = function (event) {\n      if (connection.enableLogs) {\n        console.info('Set local description for remote user', event.userid);\n      }\n    };\n\n    connection.resetScreen = function () {\n      sourceId = null;\n\n      if (DetectRTC && DetectRTC.screen) {\n        delete DetectRTC.screen.sourceId;\n      }\n\n      currentUserMediaRequest = {\n        streams: [],\n        mutex: false,\n        queueRequests: []\n      };\n    }; // if disabled, \"event.mediaElement\" for \"onstream\" will be NULL\n\n\n    connection.autoCreateMediaElement = true; // set password\n\n    connection.password = null; // set password\n\n    connection.setPassword = function (password, callback) {\n      callback = callback || function () {};\n\n      if (connection.socket) {\n        connection.socket.emit('set-password', password, callback);\n      } else {\n        connection.password = password;\n        callback(true, connection.sessionid, null);\n      }\n    };\n\n    connection.onSocketDisconnect = function (event) {\n      if (connection.enableLogs) {\n        console.warn('socket.io connection is closed');\n      }\n    };\n\n    connection.onSocketError = function (event) {\n      if (connection.enableLogs) {\n        console.warn('socket.io connection is failed');\n      }\n    }; // error messages\n\n\n    connection.errors = {\n      ROOM_NOT_AVAILABLE: 'Room not available',\n      INVALID_PASSWORD: 'Invalid password',\n      USERID_NOT_AVAILABLE: 'User ID does not exist',\n      ROOM_PERMISSION_DENIED: 'Room permission denied',\n      ROOM_FULL: 'Room full',\n      DID_NOT_JOIN_ANY_ROOM: 'Did not join any room yet',\n      INVALID_SOCKET: 'Invalid socket',\n      PUBLIC_IDENTIFIER_MISSING: 'publicRoomIdentifier is required',\n      INVALID_ADMIN_CREDENTIAL: 'Invalid username or password attempted'\n    };\n  })(this);\n};\n\nif (typeof module !== 'undefined'\n/* && !!module.exports*/\n) {\n    module.exports = exports = RTCMultiConnection;\n  }\n\nif (typeof define === 'function' && define.amd) {\n  define('RTCMultiConnection', [], function () {\n    return RTCMultiConnection;\n  });\n}","map":{"version":3,"sources":["/home/nl/Documents/demo-webRTC/demo-app/node_modules/rtcmulticonnection/dist/RTCMultiConnection.js"],"names":["RTCMultiConnection","roomid","forceOptions","browserFakeUserAgent","that","window","global","navigator","userAgent","getUserMedia","console","debug","info","error","log","arguments","document","createElement","captureStream","mozCaptureStream","obj","getContext","play","pause","drawImage","toDataURL","addEventListener","removeEventListener","HTMLVideoElement","HTMLMediaElement","io","on","eventName","callback","emit","data","sessionid","location","protocol","href","hash","origin","screen","width","height","URL","createObjectURL","revokeObjectURL","SocketConnection","connection","connectCallback","isData","session","audio","video","parameters","userid","socketMessageEvent","socketCustomEvent","autoCloseEntireSession","broadcast","maxParticipantsAllowed","enableScalableBroadcast","maxRelayLimitPerUser","JSON","stringify","extra","socketCustomParameters","sockets","e","socketURL","substr","length","enableLogs","socket","connect","socketOptions","mPeer","multiPeersHandler","remoteUserId","peers","onExtraDataUpdated","updateExtraBackup","peersBackup","onMessageEvent","message","sender","streamSyncNeeded","stream","streamEvents","streamid","action","onstreamended","type","deletePeer","allParticipants","indexOf","push","forEach","participant","localPeerSdpConstraints","OfferToReceiveAudio","sdpConstraints","mandatory","OfferToReceiveVideo","remotePeerSdpConstraints","oneway","isOneWay","direction","isDataOnly","newParticipant","createNewPeer","userPreferences","readyForOffer","attachStreams","waitingForLocalMedia","setTimeout","newParticipationRequest","dontGetRemoteStream","dontAttachLocalStream","connectionDescription","successCallback","onNewParticipant","changedUUID","oldUUID","newUUID","userLeft","onUserLeft","leave","addNegotiatedMessage","alreadyConnected","resetProps","event","onSocketDisconnect","onSocketError","onUserStatusChanged","status","onEntireSessionClosed","useridAlreadyTaken","yourNewUserId","onUserIdAlreadyTaken","onNumberOfBroadcastViewersUpdated","isInitiator","MultiPeers","self","skipPeers","getLength","numberOfPeers","peer","selectFirst","firstPeer","getAllParticipants","allPeers","callbcak","send","isNull","size","enableFileSharing","shareFile","ArrayBuffer","DataView","TextSender","text","channel","remoteUser","channels","createDataChannel","renegotiate","uuid","getLocalConfig","remoteSdp","streamsToShare","rtcMultiConnection","renegotiatingPeer","peerRef","onLocalSdp","localSdp","onNegotiationNeeded","onLocalCandidate","localCandidate","OnIceCandidateHandler","processCandidates","onDataChannelMessage","fbr","initFileBufferReader","convertToObject","object","readyForNextChunk","getNextChunk","nextChunk","isLastChunk","chunkMissing","addChunk","promptNextChunk","onDataChannelError","onDataChannelOpened","onDataChannelClosed","onRemoteStream","streams","onGettingRemoteMedia","onRemoteStreamRemoved","onRemovingRemoteMedia","onPeerStateChanged","states","iceConnectionState","onNegotiationStarted","onNegotiationCompleted","search","disconnectWith","enableMedia","setUserPreferences","localConfig","PeerInitiator","createAnsweringPeer","renegotiatePeer","replaceTrack","track","isVideoTrack","getSenders","rtpSender","kind","lastVideoTrack","lastAudioTrack","warn","sdp","addRemoteSdp","candidate","addRemoteCandidate","isAudio","isVideo","isScreen","onReadyForOffer","cb","gumCallback","onGettingLocalMedia","localStream","onLocalMediaError","constraints","onMediaError","FileBufferReader","onProgress","chunk","onFileProgress","onBegin","file","onFileStart","onEnd","onFileEnd","readAsArrayBuffer","arrayOfUsers","chunkSize","DetectRTC","browser","name","textReceiver","TextReceiver","receive","parse","onclose","onerror","onopen","state","getRemoteStreams","isNodejs","process","versions","node","version","toString","replace","webkitGetUserMedia","mozGetUserMedia","isMobileDevice","test","isEdge","msSaveOrOpenBlob","msSaveBlob","isOpera","opera","isFirefox","InstallTrigger","isSafari","isChrome","chrome","isIE","documentMode","getBrowserInfo","nVer","appVersion","nAgt","browserName","appName","fullVersion","parseFloat","majorVersion","parseInt","nameOffset","verOffset","ix","split","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","isPrivateBrowsing","retry","isDone","next","currentTrial","maxRetry","interval","isTimeout","id","setInterval","clearInterval","isIE10OrLater","ua","match","exec","detectPrivateMode","isPrivate","webkitRequestFileSystem","TEMPORARY","indexedDB","db","open","readyState","result","localStorage","setItem","removeItem","isMobile","Android","BlackBerry","iOS","Opera","Windows","any","getOsName","osName","detectDesktopOS","unknown","os","clientStrings","s","r","i","cs","osVersion","getAndroidVersion","osInfo","isCanvasSupportsStreamCapturing","isVideoSupportsStreamCapturing","item","regexIpv4Local","regexIpv4","regexIpv6","DetectLocalIPAddress","isWebRTCSupported","isPublic","isIpv4","getIPs","ip","getElementById","ipDuplicates","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","iframe","win","contentWindow","peerConfig","optional","RtpDataChannels","servers","iceServers","urls","pc","addStream","addTrack","getTracks","handleCandidate","ipAddress","undefined","onicecandidate","isPromisesSupported","createOffer","then","setLocalDescription","afterCreateOffer","lines","localDescription","line","MediaDevices","audioInputDevices","audioOutputDevices","videoInputDevices","mediaDevices","enumerateDevices","catch","canEnumerate","MediaStreamTrack","hasMicrophone","hasSpeakers","hasWebcam","isWebsiteHasMicrophonePermissions","isWebsiteHasWebcamPermissions","checkDeviceSupport","getSources","bind","alreadyUsedDevices","devices","_device","device","d","deviceId","label","isCustomLabel","domain","isNodeWebkit","isORTCSupported","RTCIceGatherer","isScreenCapturingSupported","isNonLocalHost","webAudio","isSupported","isCreateMediaStreamSourceSupported","prototype","isAudioContextSupported","isRtpDataChannelsSupported","isSCTPSupportd","isSctpDataChannelsSupported","isGetUserMediaSupported","displayResolution","getAspectRatio","w","h","gcd","a","b","displayAspectRatio","toFixed","isWebSocketsSupported","WebSocket","CLOSING","isWebSocketsBlocked","checkWebSocketsSupport","starttime","websocket","Date","getTime","onmessage","WebsocketLatency","close","load","isSetSinkIdSupported","isRTPSenderReplaceTracksSupported","isRemoteStreamProcessingSupported","isApplyConstraintsSupported","isMultiMonitorScreenCapturingSupported","MediaStream","webkitMediaStream","Object","keys","module","exports","define","amd","cordova","fireEvent","args","CustomEvent","eventDetail","__exposedProps__","dispatchEvent","setHarkEvents","streamEvent","onspeaking","onsilence","hark","onvolumechange","volume","threshold","merge","setMuteHandlers","muteType","onmute","unmuteType","onunmute","getRandomString","crypto","getRandomValues","Uint32Array","token","l","Math","random","getRMCMediaElement","autoCreateMediaElement","isAudioOnly","mediaElement","srcObject","setAttribute","streamEndedEvent","currentUserMediaRequest","remove","idInstance","StreamsHandler","onSyncNeeded","aStream","idx","newStreamsArray","parentNode","removeChild","played","cbFired","el","eventHandler","attachEvent","listenEventHandler","attachEventListener","listener","useCapture","removeNullEntries","array","newArray","isString","stop","isAudioPlusTab","audioPlusTab","getAudioScreenConstraints","screen_constraints","chromeMediaSource","chromeMediaSourceId","iOSDefaultAudioOutputDevice","filter","t","isUnifiedPlanSupportedDefault","canAddTransceiver","RTCRtpTransceiver","tempPc","addTransceiver","isUnifiedPlanSuppored","isUnifiedPlanSupported","sdpSemantics","config","getConfiguration","setCordovaAPIs","plugins","iosrtc","RTCSessionDescription","RTCIceCandidate","enable","selectAudioOutput","registerGlobals","defaults","setSdpConstraints","mozRTCSessionDescription","mozRTCIceCandidate","removeStream","allRemoteStreams","localStreams","iceTransports","candidates","turn","relay","stun","reflexive","host","params","iceTransportPolicy","iceCandidatePoolSize","bundlePolicy","rtcpMuxPolicy","optionalArgument","getReceivers","receiver","getLocalStreams","trickleIce","sdpMid","sdpMLineIndex","beforeAddingStream","oniceconnectionstatechange","onsignalingstatechange","iceGatheringState","signalingState","Array","streamObject","dontDuplicate","ontrack","onended","onremovestream","streamToShare","onremovetrack","removeTrack","remoteCandidate","addIceCandidate","oldAddRemoteSdp","processSdp","setRemoteDescription","isOfferer","setChannelEvents","ondatachannel","enableDisableVideoEncoding","rtcp","getParameters","encodings","active","setParameters","createOfferOrAnswer","binaryType","internalSend","oldCreateOfferOrAnswer","_method","onSettingLocalDescription","nativeClose","CodecsHandler","preferCodec","codecName","splitLines","videoCodecNumbers","vp8LineNumber","vp9LineNumber","h264LineNumber","preferCodecHelper","codec","ignore","preferCodecNumber","newLine","videoCodecNumbersOriginal","newOrder","codecNumber","join","trim","removeVPX","disableNACK","prioritize","codecMimeType","codecs","mimeType","unshift","splice","removeNonG722","setBAS","bandwidth","findLine","sdpLines","prefix","findLineInRange","startLine","endLine","realEndLine","getCodecPayloadType","sdpLine","pattern","RegExp","setVideoBitrates","xgoogle_min_bitrate","min","xgoogle_max_bitrate","max","vp8Index","vp8Payload","rtxIndex","rtxPayload","rtxFmtpLineIndex","appendrtxNext","concat","setOpusAttributes","opusIndex","opusPayload","opusFmtpLineIndex","appendOpusNext","stereo","maxaveragebitrate","maxplaybackrate","cbr","useinbandfec","usedtx","maxptime","forceStereoAudio","fmtpLineIndex","extractSdp","payload","setApplicationSpecificBandwidth","preferVP9","BandwidthHandler","icePair","iceRestrictions","iceProtocols","udp","tcp","IceServersHandler","getIceServers","setStreamType","mozMediaSource","mediaSource","mutex","queueRequests","options","currentUserMediaRequestOptions","getUserMediaHandler","localMediaConstraints","streaming","returnBack","shift","isBlackBerry","getUserMediaSuccess","getUserMediaFailure","getUserMediaStream","getUserMediaError","hints","successCB","failureCB","getDisplayMedia","Error","handleType","setHandlers","syncAction","mute","isSyncAction","enabled","isAudioMuted","unmute","graduallyIncreaseVolume","looper","times","afterEach","setTimeoutInteval","numberOfTimes","startedTimes","content","last","isobject","receivingTime","latency","sendingTime","autoTranslateText","original","Translator","TranslateText","translatedText","initialText","packetSize","textToTransfer","sendText","textMessage","packets","slice","chunkInterval","FileProgressBarHandler","handle","progressHelper","div","title","innerHTML","filesContainer","body","documentElement","insertBefore","firstChild","progress","querySelector","maxChunks","helper","value","currentPosition","updateLabel","url","position","TranslationHandler","language","googKey","newScript","sourceText","encodeURIComponent","randomNumber","response","translations","source","src","getElementsByTagName","appendChild","getListOfLanguages","xhr","XMLHttpRequest","onreadystatechange","DONE","responseText","languages","useDefaultDevices","preventDuplicateOnStreamEvents","setStreamEndHandler","muted","onstream","messageToDeliver","connectSocket","socketAutoReConnect","FirebaseConnection","PubNubConnection","openOrJoin","checkPresence","isRoomExist","beforeJoin","joinRoom","openRoom","captureUserMedia","eventObject","onleave","rejoin","onReConnecting","mediaConstraints","getStreamInfoForAdmin","password","isRoomJoined","publicRoomIdentifier","identifier","isRoomOpened","selectAll","map","tracks","dontCaptureUserMedia","invokeGetUserMedia","sessionForced","nonScreenSession","onbeforeunload","arg1","dontCloseSocket","closeBeforeUnload","closeSocket","ignoreBeforeUnload","changeUserId","newUserId","facingMode","lastAudioDevice","lastVideoDevice","sourceId","VoiceActivityDetection","DtlsSrtpKeyAgreement","googImprovedWifiBwe","googScreencastMinBitrate","googIPv6","googDscp","googCpuUnderuseThreshold","googCpuOveruseThreshold","googSuspendBelowMinBitrate","googCpuOveruseDetection","disconnect","closeEntireSession","videosContainer","user","streamCallback","videoConstraints","applyConstraints","alert","resetTrack","remoteUsersIds","isRemote","alreadySetEndHandler","participantId","acceptParticipationRequest","invokeSelectFileDialog","selector","FileSelector","accept","selectSingleFile","paused","poster","snapshot","getSocket","skipStreams","local","remote","key","setCustomSocketEvent","customEvent","getNumberOfBroadcastViewers","broadcastId","numberOfBroadcastViewers","dontWriteLogs","setCustomSocketHandler","customSocketHandler","SSEConnection","_roomid","dontAttachStream","updateExtraData","beforeRemovingStream","isChromeExtensionAvailable","checkIfChromeExtensionAvailable","isFirefoxExtensionAvailable","getChromeExtensionStatus","modifyScreenConstraints","isOnline","isLowBandwidth","opt","getExtraData","autoOpenOrJoin","resetScreen","setPassword","errors","ROOM_NOT_AVAILABLE","INVALID_PASSWORD","USERID_NOT_AVAILABLE","ROOM_PERMISSION_DENIED","ROOM_FULL","DID_NOT_JOIN_ANY_ROOM","INVALID_SOCKET","PUBLIC_IDENTIFIER_MISSING","INVALID_ADMIN_CREDENTIAL"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\n// Last time updated: 2019-06-15 4:26:11 PM UTC\r\n\r\n// _________________________\r\n// RTCMultiConnection v3.6.9\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RTCMultiConnection\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nvar RTCMultiConnection = function(roomid, forceOptions) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.debug === 'undefined') {\r\n            global.console.debug = global.console.info = global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {};\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    }\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            document.addEventListener = document.removeEventListener = that.addEventListener = that.removeEventListener = function() {};\r\n\r\n            that.HTMLVideoElement = that.HTMLMediaElement = function() {};\r\n        }\r\n\r\n        if (typeof io === 'undefined') {\r\n            that.io = function() {\r\n                return {\r\n                    on: function(eventName, callback) {\r\n                        callback = callback || function() {};\r\n\r\n                        if (eventName === 'connect') {\r\n                            callback();\r\n                        }\r\n                    },\r\n                    emit: function(eventName, data, callback) {\r\n                        callback = callback || function() {};\r\n                        if (eventName === 'open-room' || eventName === 'join-room') {\r\n                            callback(true, data.sessionid, null);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: '',\r\n                origin: 'self'\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    function SocketConnection(connection, connectCallback) {\r\n        function isData(session) {\r\n            return !session.audio && !session.video && !session.screen && session.data;\r\n        }\r\n\r\n        var parameters = '';\r\n\r\n        parameters += '?userid=' + connection.userid;\r\n        parameters += '&sessionid=' + connection.sessionid;\r\n        parameters += '&msgEvent=' + connection.socketMessageEvent;\r\n        parameters += '&socketCustomEvent=' + connection.socketCustomEvent;\r\n        parameters += '&autoCloseEntireSession=' + !!connection.autoCloseEntireSession;\r\n\r\n        if (connection.session.broadcast === true) {\r\n            parameters += '&oneToMany=true';\r\n        }\r\n\r\n        parameters += '&maxParticipantsAllowed=' + connection.maxParticipantsAllowed;\r\n\r\n        if (connection.enableScalableBroadcast) {\r\n            parameters += '&enableScalableBroadcast=true';\r\n            parameters += '&maxRelayLimitPerUser=' + (connection.maxRelayLimitPerUser || 2);\r\n        }\r\n\r\n        parameters += '&extra=' + JSON.stringify(connection.extra || {});\r\n\r\n        if (connection.socketCustomParameters) {\r\n            parameters += connection.socketCustomParameters;\r\n        }\r\n\r\n        try {\r\n            io.sockets = {};\r\n        } catch (e) {};\r\n\r\n        if (!connection.socketURL) {\r\n            connection.socketURL = '/';\r\n        }\r\n\r\n        if (connection.socketURL.substr(connection.socketURL.length - 1, 1) != '/') {\r\n            // connection.socketURL = 'https://domain.com:9001/';\r\n            throw '\"socketURL\" MUST end with a slash.';\r\n        }\r\n\r\n        if (connection.enableLogs) {\r\n            if (connection.socketURL == '/') {\r\n                console.info('socket.io url is: ', location.origin + '/');\r\n            } else {\r\n                console.info('socket.io url is: ', connection.socketURL);\r\n            }\r\n        }\r\n\r\n        try {\r\n            connection.socket = io(connection.socketURL + parameters);\r\n        } catch (e) {\r\n            connection.socket = io.connect(connection.socketURL + parameters, connection.socketOptions);\r\n        }\r\n\r\n        var mPeer = connection.multiPeersHandler;\r\n\r\n        connection.socket.on('extra-data-updated', function(remoteUserId, extra) {\r\n            if (!connection.peers[remoteUserId]) return;\r\n            connection.peers[remoteUserId].extra = extra;\r\n\r\n            connection.onExtraDataUpdated({\r\n                userid: remoteUserId,\r\n                extra: extra\r\n            });\r\n\r\n            updateExtraBackup(remoteUserId, extra);\r\n        });\r\n\r\n        function updateExtraBackup(remoteUserId, extra) {\r\n            if (!connection.peersBackup[remoteUserId]) {\r\n                connection.peersBackup[remoteUserId] = {\r\n                    userid: remoteUserId,\r\n                    extra: {}\r\n                };\r\n            }\r\n\r\n            connection.peersBackup[remoteUserId].extra = extra;\r\n        }\r\n\r\n        function onMessageEvent(message) {\r\n            if (message.remoteUserId != connection.userid) return;\r\n\r\n            if (connection.peers[message.sender] && connection.peers[message.sender].extra != message.message.extra) {\r\n                connection.peers[message.sender].extra = message.extra;\r\n                connection.onExtraDataUpdated({\r\n                    userid: message.sender,\r\n                    extra: message.extra\r\n                });\r\n\r\n                updateExtraBackup(message.sender, message.extra);\r\n            }\r\n\r\n            if (message.message.streamSyncNeeded && connection.peers[message.sender]) {\r\n                var stream = connection.streamEvents[message.message.streamid];\r\n                if (!stream || !stream.stream) {\r\n                    return;\r\n                }\r\n\r\n                var action = message.message.action;\r\n\r\n                if (action === 'ended' || action === 'inactive' || action === 'stream-removed') {\r\n                    if (connection.peersBackup[stream.userid]) {\r\n                        stream.extra = connection.peersBackup[stream.userid].extra;\r\n                    }\r\n                    connection.onstreamended(stream);\r\n                    return;\r\n                }\r\n\r\n                var type = message.message.type != 'both' ? message.message.type : null;\r\n\r\n                if (typeof stream.stream[action] == 'function') {\r\n                    stream.stream[action](type);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.message === 'dropPeerConnection') {\r\n                connection.deletePeer(message.sender);\r\n                return;\r\n            }\r\n\r\n            if (message.message.allParticipants) {\r\n                if (message.message.allParticipants.indexOf(message.sender) === -1) {\r\n                    message.message.allParticipants.push(message.sender);\r\n                }\r\n\r\n                message.message.allParticipants.forEach(function(participant) {\r\n                    mPeer[!connection.peers[participant] ? 'createNewPeer' : 'renegotiatePeer'](participant, {\r\n                        localPeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        remotePeerSdpConstraints: {\r\n                            OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                            OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                        },\r\n                        isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                        isDataOnly: isData(connection.session)\r\n                    });\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.newParticipant) {\r\n                if (message.message.newParticipant == connection.userid) return;\r\n                if (!!connection.peers[message.message.newParticipant]) return;\r\n\r\n                mPeer.createNewPeer(message.message.newParticipant, message.message.userPreferences || {\r\n                    localPeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: isData(connection.session)\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (message.message.readyForOffer) {\r\n                if (connection.attachStreams.length) {\r\n                    connection.waitingForLocalMedia = false;\r\n                }\r\n\r\n                if (connection.waitingForLocalMedia) {\r\n                    // if someone is waiting to join you\r\n                    // make sure that we've local media before making a handshake\r\n                    setTimeout(function() {\r\n                        onMessageEvent(message);\r\n                    }, 1);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (message.message.newParticipationRequest && message.sender !== connection.userid) {\r\n                if (connection.peers[message.sender]) {\r\n                    connection.deletePeer(message.sender);\r\n                }\r\n\r\n                var userPreferences = {\r\n                    extra: message.extra || {},\r\n                    localPeerSdpConstraints: message.message.remotePeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    remotePeerSdpConstraints: message.message.localPeerSdpConstraints || {\r\n                        OfferToReceiveAudio: connection.session.oneway ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.session.oneway ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    },\r\n                    isOneWay: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    isDataOnly: typeof message.message.isDataOnly !== 'undefined' ? message.message.isDataOnly : isData(connection.session),\r\n                    dontGetRemoteStream: typeof message.message.isOneWay !== 'undefined' ? message.message.isOneWay : !!connection.session.oneway || connection.direction === 'one-way',\r\n                    dontAttachLocalStream: !!message.message.dontGetRemoteStream,\r\n                    connectionDescription: message,\r\n                    successCallback: function() {}\r\n                };\r\n\r\n                connection.onNewParticipant(message.sender, userPreferences);\r\n                return;\r\n            }\r\n\r\n            if (message.message.changedUUID) {\r\n                if (connection.peers[message.message.oldUUID]) {\r\n                    connection.peers[message.message.newUUID] = connection.peers[message.message.oldUUID];\r\n                    delete connection.peers[message.message.oldUUID];\r\n                }\r\n            }\r\n\r\n            if (message.message.userLeft) {\r\n                mPeer.onUserLeft(message.sender);\r\n\r\n                if (!!message.message.autoCloseEntireSession) {\r\n                    connection.leave();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            mPeer.addNegotiatedMessage(message.message, message.sender);\r\n        }\r\n\r\n        connection.socket.on(connection.socketMessageEvent, onMessageEvent);\r\n\r\n        var alreadyConnected = false;\r\n\r\n        connection.socket.resetProps = function() {\r\n            alreadyConnected = false;\r\n        };\r\n\r\n        connection.socket.on('connect', function() {\r\n            if (alreadyConnected) {\r\n                return;\r\n            }\r\n            alreadyConnected = true;\r\n\r\n            if (connection.enableLogs) {\r\n                console.info('socket.io connection is opened.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                connection.socket.emit('extra-data-updated', connection.extra);\r\n            }, 1000);\r\n\r\n            if (connectCallback) {\r\n                connectCallback(connection.socket);\r\n            }\r\n        });\r\n\r\n        connection.socket.on('disconnect', function(event) {\r\n            connection.onSocketDisconnect(event);\r\n        });\r\n\r\n        connection.socket.on('error', function(event) {\r\n            connection.onSocketError(event);\r\n        });\r\n\r\n        connection.socket.on('user-disconnected', function(remoteUserId) {\r\n            if (remoteUserId === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: remoteUserId,\r\n                status: 'offline',\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra || {} : {}\r\n            });\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        });\r\n\r\n        connection.socket.on('user-connected', function(userid) {\r\n            if (userid === connection.userid) {\r\n                return;\r\n            }\r\n\r\n            connection.onUserStatusChanged({\r\n                userid: userid,\r\n                status: 'online',\r\n                extra: connection.peers[userid] ? connection.peers[userid].extra || {} : {}\r\n            });\r\n        });\r\n\r\n        connection.socket.on('closed-entire-session', function(sessionid, extra) {\r\n            connection.leave();\r\n            connection.onEntireSessionClosed({\r\n                sessionid: sessionid,\r\n                userid: sessionid,\r\n                extra: extra\r\n            });\r\n        });\r\n\r\n        connection.socket.on('userid-already-taken', function(useridAlreadyTaken, yourNewUserId) {\r\n            connection.onUserIdAlreadyTaken(useridAlreadyTaken, yourNewUserId);\r\n        });\r\n\r\n        connection.socket.on('logs', function(log) {\r\n            if (!connection.enableLogs) return;\r\n            console.debug('server-logs', log);\r\n        });\r\n\r\n        connection.socket.on('number-of-broadcast-viewers-updated', function(data) {\r\n            connection.onNumberOfBroadcastViewersUpdated(data);\r\n        });\r\n\r\n        connection.socket.on('set-isInitiator-true', function(sessionid) {\r\n            if (sessionid != connection.sessionid) return;\r\n            connection.isInitiator = true;\r\n        });\r\n    }\r\n\r\n    function MultiPeers(connection) {\r\n        var self = this;\r\n\r\n        var skipPeers = ['getAllParticipants', 'getLength', 'selectFirst', 'streams', 'send', 'forEach'];\r\n        connection.peers = {\r\n            getLength: function() {\r\n                var numberOfPeers = 0;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        numberOfPeers++;\r\n                    }\r\n                }\r\n                return numberOfPeers;\r\n            },\r\n            selectFirst: function() {\r\n                var firstPeer;\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1) {\r\n                        firstPeer = this[peer];\r\n                    }\r\n                }\r\n                return firstPeer;\r\n            },\r\n            getAllParticipants: function(sender) {\r\n                var allPeers = [];\r\n                for (var peer in this) {\r\n                    if (skipPeers.indexOf(peer) == -1 && peer != sender) {\r\n                        allPeers.push(peer);\r\n                    }\r\n                }\r\n                return allPeers;\r\n            },\r\n            forEach: function(callbcak) {\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    callbcak(connection.peers[participant]);\r\n                });\r\n            },\r\n            send: function(data, remoteUserId) {\r\n                var that = this;\r\n\r\n                if (!isNull(data.size) && !isNull(data.type)) {\r\n                    if (connection.enableFileSharing) {\r\n                        self.shareFile(data, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (typeof data !== 'string') {\r\n                        data = JSON.stringify(data);\r\n                    }\r\n                }\r\n\r\n                if (data.type !== 'text' && !(data instanceof ArrayBuffer) && !(data instanceof DataView)) {\r\n                    TextSender.send({\r\n                        text: data,\r\n                        channel: this,\r\n                        connection: connection,\r\n                        remoteUserId: remoteUserId\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                if (data.type === 'text') {\r\n                    data = JSON.stringify(data);\r\n                }\r\n\r\n                if (remoteUserId) {\r\n                    var remoteUser = connection.peers[remoteUserId];\r\n                    if (remoteUser) {\r\n                        if (!remoteUser.channels.length) {\r\n                            connection.peers[remoteUserId].createDataChannel();\r\n                            connection.renegotiate(remoteUserId);\r\n                            setTimeout(function() {\r\n                                that.send(data, remoteUserId);\r\n                            }, 3000);\r\n                            return;\r\n                        }\r\n\r\n                        remoteUser.channels.forEach(function(channel) {\r\n                            channel.send(data);\r\n                        });\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.getAllParticipants().forEach(function(participant) {\r\n                    if (!that[participant].channels.length) {\r\n                        connection.peers[participant].createDataChannel();\r\n                        connection.renegotiate(participant);\r\n                        setTimeout(function() {\r\n                            that[participant].channels.forEach(function(channel) {\r\n                                channel.send(data);\r\n                            });\r\n                        }, 3000);\r\n                        return;\r\n                    }\r\n\r\n                    that[participant].channels.forEach(function(channel) {\r\n                        channel.send(data);\r\n                    });\r\n                });\r\n            }\r\n        };\r\n\r\n        this.uuid = connection.userid;\r\n\r\n        this.getLocalConfig = function(remoteSdp, remoteUserId, userPreferences) {\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            return {\r\n                streamsToShare: userPreferences.streamsToShare || {},\r\n                rtcMultiConnection: connection,\r\n                connectionDescription: userPreferences.connectionDescription,\r\n                userid: remoteUserId,\r\n                localPeerSdpConstraints: userPreferences.localPeerSdpConstraints,\r\n                remotePeerSdpConstraints: userPreferences.remotePeerSdpConstraints,\r\n                dontGetRemoteStream: !!userPreferences.dontGetRemoteStream,\r\n                dontAttachLocalStream: !!userPreferences.dontAttachLocalStream,\r\n                renegotiatingPeer: !!userPreferences.renegotiatingPeer,\r\n                peerRef: userPreferences.peerRef,\r\n                channels: userPreferences.channels || [],\r\n                onLocalSdp: function(localSdp) {\r\n                    self.onNegotiationNeeded(localSdp, remoteUserId);\r\n                },\r\n                onLocalCandidate: function(localCandidate) {\r\n                    localCandidate = OnIceCandidateHandler.processCandidates(connection, localCandidate)\r\n                    if (localCandidate) {\r\n                        self.onNegotiationNeeded(localCandidate, remoteUserId);\r\n                    }\r\n                },\r\n                remoteSdp: remoteSdp,\r\n                onDataChannelMessage: function(message) {\r\n                    if (!connection.fbr && connection.enableFileSharing) initFileBufferReader();\r\n\r\n                    if (typeof message == 'string' || !connection.enableFileSharing) {\r\n                        self.onDataChannelMessage(message, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    var that = this;\r\n\r\n                    if (message instanceof ArrayBuffer || message instanceof DataView) {\r\n                        connection.fbr.convertToObject(message, function(object) {\r\n                            that.onDataChannelMessage(object);\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if (message.readyForNextChunk) {\r\n                        connection.fbr.getNextChunk(message, function(nextChunk, isLastChunk) {\r\n                            connection.peers[remoteUserId].channels.forEach(function(channel) {\r\n                                channel.send(nextChunk);\r\n                            });\r\n                        }, remoteUserId);\r\n                        return;\r\n                    }\r\n\r\n                    if (message.chunkMissing) {\r\n                        connection.fbr.chunkMissing(message);\r\n                        return;\r\n                    }\r\n\r\n                    connection.fbr.addChunk(message, function(promptNextChunk) {\r\n                        connection.peers[remoteUserId].peer.channel.send(promptNextChunk);\r\n                    });\r\n                },\r\n                onDataChannelError: function(error) {\r\n                    self.onDataChannelError(error, remoteUserId);\r\n                },\r\n                onDataChannelOpened: function(channel) {\r\n                    self.onDataChannelOpened(channel, remoteUserId);\r\n                },\r\n                onDataChannelClosed: function(event) {\r\n                    self.onDataChannelClosed(event, remoteUserId);\r\n                },\r\n                onRemoteStream: function(stream) {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].streams.push(stream);\r\n                    }\r\n\r\n                    self.onGettingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onRemoteStreamRemoved: function(stream) {\r\n                    self.onRemovingRemoteMedia(stream, remoteUserId);\r\n                },\r\n                onPeerStateChanged: function(states) {\r\n                    self.onPeerStateChanged(states);\r\n\r\n                    if (states.iceConnectionState === 'new') {\r\n                        self.onNegotiationStarted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState === 'connected') {\r\n                        self.onNegotiationCompleted(remoteUserId, states);\r\n                    }\r\n\r\n                    if (states.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                        self.onUserLeft(remoteUserId);\r\n                        self.disconnectWith(remoteUserId);\r\n                    }\r\n                }\r\n            };\r\n        };\r\n\r\n        this.createNewPeer = function(remoteUserId, userPreferences) {\r\n            if (connection.maxParticipantsAllowed <= connection.getAllParticipants().length) {\r\n                return;\r\n            }\r\n\r\n            userPreferences = userPreferences || {};\r\n\r\n            if (connection.isInitiator && !!connection.session.audio && connection.session.audio === 'two-way' && !userPreferences.streamsToShare) {\r\n                userPreferences.isOneWay = false;\r\n                userPreferences.isDataOnly = false;\r\n                userPreferences.session = connection.session;\r\n            }\r\n\r\n            if (!userPreferences.isOneWay && !userPreferences.isDataOnly) {\r\n                userPreferences.isOneWay = true;\r\n                this.onNegotiationNeeded({\r\n                    enableMedia: true,\r\n                    userPreferences: userPreferences\r\n                }, remoteUserId);\r\n                return;\r\n            }\r\n\r\n            userPreferences = connection.setUserPreferences(userPreferences, remoteUserId);\r\n            var localConfig = this.getLocalConfig(null, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.createAnsweringPeer = function(remoteSdp, remoteUserId, userPreferences) {\r\n            userPreferences = connection.setUserPreferences(userPreferences || {}, remoteUserId);\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.renegotiatePeer = function(remoteUserId, userPreferences, remoteSdp) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.enableLogs) {\r\n                    console.error('Peer (' + remoteUserId + ') does not exist. Renegotiation skipped.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!userPreferences) {\r\n                userPreferences = {};\r\n            }\r\n\r\n            userPreferences.renegotiatingPeer = true;\r\n            userPreferences.peerRef = connection.peers[remoteUserId].peer;\r\n            userPreferences.channels = connection.peers[remoteUserId].channels;\r\n\r\n            var localConfig = this.getLocalConfig(remoteSdp, remoteUserId, userPreferences);\r\n\r\n            connection.peers[remoteUserId] = new PeerInitiator(localConfig);\r\n        };\r\n\r\n        this.replaceTrack = function(track, remoteUserId, isVideoTrack) {\r\n            if (!connection.peers[remoteUserId]) {\r\n                throw 'This peer (' + remoteUserId + ') does not exist.';\r\n            }\r\n\r\n            var peer = connection.peers[remoteUserId].peer;\r\n\r\n            if (!!peer.getSenders && typeof peer.getSenders === 'function' && peer.getSenders().length) {\r\n                peer.getSenders().forEach(function(rtpSender) {\r\n                    if (isVideoTrack && rtpSender.track.kind === 'video') {\r\n                        connection.peers[remoteUserId].peer.lastVideoTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n\r\n                    if (!isVideoTrack && rtpSender.track.kind === 'audio') {\r\n                        connection.peers[remoteUserId].peer.lastAudioTrack = rtpSender.track;\r\n                        rtpSender.replaceTrack(track);\r\n                    }\r\n                });\r\n                return;\r\n            }\r\n\r\n            console.warn('RTPSender.replaceTrack is NOT supported.');\r\n            this.renegotiatePeer(remoteUserId);\r\n        };\r\n\r\n        this.onNegotiationNeeded = function(message, remoteUserId) {};\r\n        this.addNegotiatedMessage = function(message, remoteUserId) {\r\n            if (message.type && message.sdp) {\r\n                if (message.type == 'answer') {\r\n                    if (connection.peers[remoteUserId]) {\r\n                        connection.peers[remoteUserId].addRemoteSdp(message);\r\n                    }\r\n                }\r\n\r\n                if (message.type == 'offer') {\r\n                    if (message.renegotiatingPeer) {\r\n                        this.renegotiatePeer(remoteUserId, null, message);\r\n                    } else {\r\n                        this.createAnsweringPeer(message, remoteUserId);\r\n                    }\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s sdp:', message.sdp);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.candidate) {\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].addRemoteCandidate(message);\r\n                }\r\n\r\n                if (connection.enableLogs) {\r\n                    console.log('Remote peer\\'s candidate pairs:', message.candidate);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (message.enableMedia) {\r\n                connection.session = message.userPreferences.session || connection.session;\r\n\r\n                if (connection.session.oneway && connection.attachStreams.length) {\r\n                    connection.attachStreams = [];\r\n                }\r\n\r\n                if (message.userPreferences.isDataOnly && connection.attachStreams.length) {\r\n                    connection.attachStreams.length = [];\r\n                }\r\n\r\n                var streamsToShare = {};\r\n                connection.attachStreams.forEach(function(stream) {\r\n                    streamsToShare[stream.streamid] = {\r\n                        isAudio: !!stream.isAudio,\r\n                        isVideo: !!stream.isVideo,\r\n                        isScreen: !!stream.isScreen\r\n                    };\r\n                });\r\n                message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n                self.onNegotiationNeeded({\r\n                    readyForOffer: true,\r\n                    userPreferences: message.userPreferences\r\n                }, remoteUserId);\r\n            }\r\n\r\n            if (message.readyForOffer) {\r\n                connection.onReadyForOffer(remoteUserId, message.userPreferences);\r\n            }\r\n\r\n            function cb(stream) {\r\n                gumCallback(stream, message, remoteUserId);\r\n            }\r\n        };\r\n\r\n        function gumCallback(stream, message, remoteUserId) {\r\n            var streamsToShare = {};\r\n            connection.attachStreams.forEach(function(stream) {\r\n                streamsToShare[stream.streamid] = {\r\n                    isAudio: !!stream.isAudio,\r\n                    isVideo: !!stream.isVideo,\r\n                    isScreen: !!stream.isScreen\r\n                };\r\n            });\r\n            message.userPreferences.streamsToShare = streamsToShare;\r\n\r\n            self.onNegotiationNeeded({\r\n                readyForOffer: true,\r\n                userPreferences: message.userPreferences\r\n            }, remoteUserId);\r\n        }\r\n\r\n        this.onGettingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onRemovingRemoteMedia = function(stream, remoteUserId) {};\r\n        this.onGettingLocalMedia = function(localStream) {};\r\n        this.onLocalMediaError = function(error, constraints) {\r\n            connection.onMediaError(error, constraints);\r\n        };\r\n\r\n        function initFileBufferReader() {\r\n            connection.fbr = new FileBufferReader();\r\n            connection.fbr.onProgress = function(chunk) {\r\n                connection.onFileProgress(chunk);\r\n            };\r\n            connection.fbr.onBegin = function(file) {\r\n                connection.onFileStart(file);\r\n            };\r\n            connection.fbr.onEnd = function(file) {\r\n                connection.onFileEnd(file);\r\n            };\r\n        }\r\n\r\n        this.shareFile = function(file, remoteUserId) {\r\n            initFileBufferReader();\r\n\r\n            connection.fbr.readAsArrayBuffer(file, function(uuid) {\r\n                var arrayOfUsers = connection.getAllParticipants();\r\n\r\n                if (remoteUserId) {\r\n                    arrayOfUsers = [remoteUserId];\r\n                }\r\n\r\n                arrayOfUsers.forEach(function(participant) {\r\n                    connection.fbr.getNextChunk(uuid, function(nextChunk) {\r\n                        connection.peers[participant].channels.forEach(function(channel) {\r\n                            channel.send(nextChunk);\r\n                        });\r\n                    }, participant);\r\n                });\r\n            }, {\r\n                userid: connection.userid,\r\n                // extra: connection.extra,\r\n                chunkSize: DetectRTC.browser.name === 'Firefox' ? 15 * 1000 : connection.chunkSize || 0\r\n            });\r\n        };\r\n\r\n        if (typeof 'TextReceiver' !== 'undefined') {\r\n            var textReceiver = new TextReceiver(connection);\r\n        }\r\n\r\n        this.onDataChannelMessage = function(message, remoteUserId) {\r\n            textReceiver.receive(JSON.parse(message), remoteUserId, connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {});\r\n        };\r\n\r\n        this.onDataChannelClosed = function(event, remoteUserId) {\r\n            event.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onclose(event);\r\n        };\r\n\r\n        this.onDataChannelError = function(error, remoteUserId) {\r\n            error.userid = remoteUserId;\r\n            event.extra = connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {};\r\n            connection.onerror(error);\r\n        };\r\n\r\n        this.onDataChannelOpened = function(channel, remoteUserId) {\r\n            // keep last channel only; we are not expecting parallel/channels channels\r\n            if (connection.peers[remoteUserId].channels.length) {\r\n                connection.peers[remoteUserId].channels = [channel];\r\n                return;\r\n            }\r\n\r\n            connection.peers[remoteUserId].channels.push(channel);\r\n            connection.onopen({\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                channel: channel\r\n            });\r\n        };\r\n\r\n        this.onPeerStateChanged = function(state) {\r\n            connection.onPeerStateChanged(state);\r\n        };\r\n\r\n        this.onNegotiationStarted = function(remoteUserId, states) {};\r\n        this.onNegotiationCompleted = function(remoteUserId, states) {};\r\n\r\n        this.getRemoteStreams = function(remoteUserId) {\r\n            remoteUserId = remoteUserId || connection.peers.getAllParticipants()[0];\r\n            return connection.peers[remoteUserId] ? connection.peers[remoteUserId].streams : [];\r\n        };\r\n    }\r\n\r\n    'use strict';\r\n\r\n    // Last Updated On: 2019-01-10 5:32:55 AM UTC\r\n\r\n    // ________________\r\n    // DetectRTC v1.3.9\r\n\r\n    // Open-Sourced: https://github.com/muaz-khan/DetectRTC\r\n\r\n    // --------------------------------------------------\r\n    // Muaz Khan     - www.MuazKhan.com\r\n    // MIT License   - www.WebRTC-Experiment.com/licence\r\n    // --------------------------------------------------\r\n\r\n    (function() {\r\n\r\n        var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node && /*node-process*/ !process.browser;\r\n        if (isNodejs) {\r\n            var version = process.versions.node.toString().replace('v', '');\r\n            browserFakeUserAgent = 'Nodejs/' + version + ' (NodeOS) AppleWebKit/' + version + ' (KHTML, like Gecko) Nodejs/' + version + ' Nodejs/' + version\r\n        }\r\n\r\n        (function(that) {\r\n            if (typeof window !== 'undefined') {\r\n                return;\r\n            }\r\n\r\n            if (typeof window === 'undefined' && typeof global !== 'undefined') {\r\n                global.navigator = {\r\n                    userAgent: browserFakeUserAgent,\r\n                    getUserMedia: function() {}\r\n                };\r\n\r\n                /*global window:true */\r\n                that.window = global;\r\n            } else if (typeof window === 'undefined') {\r\n                // window = this;\r\n            }\r\n\r\n            if (typeof location === 'undefined') {\r\n                /*global location:true */\r\n                that.location = {\r\n                    protocol: 'file:',\r\n                    href: '',\r\n                    hash: ''\r\n                };\r\n            }\r\n\r\n            if (typeof screen === 'undefined') {\r\n                /*global screen:true */\r\n                that.screen = {\r\n                    width: 0,\r\n                    height: 0\r\n                };\r\n            }\r\n        })(typeof global !== 'undefined' ? global : window);\r\n\r\n        /*global navigator:true */\r\n        var navigator = window.navigator;\r\n\r\n        if (typeof navigator !== 'undefined') {\r\n            if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n            }\r\n\r\n            if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n                navigator.getUserMedia = navigator.mozGetUserMedia;\r\n            }\r\n        } else {\r\n            navigator = {\r\n                getUserMedia: function() {},\r\n                userAgent: browserFakeUserAgent\r\n            };\r\n        }\r\n\r\n        var isMobileDevice = !!(/Android|webOS|iPhone|iPad|iPod|BB10|BlackBerry|IEMobile|Opera Mini|Mobile|mobile/i.test(navigator.userAgent || ''));\r\n\r\n        var isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveOrOpenBlob || !!navigator.msSaveBlob);\r\n\r\n        var isOpera = !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\r\n        var isFirefox = typeof window.InstallTrigger !== 'undefined';\r\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n        var isChrome = !!window.chrome && !isOpera;\r\n        var isIE = typeof document !== 'undefined' && !!document.documentMode && !isEdge;\r\n\r\n        // this one can also be used:\r\n        // https://www.websocket.org/js/stuff.js (DetectBrowser.js)\r\n\r\n        function getBrowserInfo() {\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n            var browserName = navigator.appName;\r\n            var fullVersion = '' + parseFloat(navigator.appVersion);\r\n            var majorVersion = parseInt(navigator.appVersion, 10);\r\n            var nameOffset, verOffset, ix;\r\n\r\n            // both and safri and chrome has same userAgent\r\n            if (isSafari && !isChrome && nAgt.indexOf('CriOS') !== -1) {\r\n                isSafari = false;\r\n                isChrome = true;\r\n            }\r\n\r\n            // In Opera, the true version is after 'Opera' or after 'Version'\r\n            if (isOpera) {\r\n                browserName = 'Opera';\r\n                try {\r\n                    fullVersion = navigator.userAgent.split('OPR/')[1].split(' ')[0];\r\n                    majorVersion = fullVersion.split('.')[0];\r\n                } catch (e) {\r\n                    fullVersion = '0.0.0.0';\r\n                    majorVersion = 0;\r\n                }\r\n            }\r\n            // In MSIE version <=10, the true version is after 'MSIE' in userAgent\r\n            // In IE 11, look for the string after 'rv:'\r\n            else if (isIE) {\r\n                verOffset = nAgt.indexOf('rv:');\r\n                if (verOffset > 0) { //IE 11\r\n                    fullVersion = nAgt.substring(verOffset + 3);\r\n                } else { //IE 10 or earlier\r\n                    verOffset = nAgt.indexOf('MSIE');\r\n                    fullVersion = nAgt.substring(verOffset + 5);\r\n                }\r\n                browserName = 'IE';\r\n            }\r\n            // In Chrome, the true version is after 'Chrome' \r\n            else if (isChrome) {\r\n                verOffset = nAgt.indexOf('Chrome');\r\n                browserName = 'Chrome';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n            }\r\n            // In Safari, the true version is after 'Safari' or after 'Version' \r\n            else if (isSafari) {\r\n                verOffset = nAgt.indexOf('Safari');\r\n\r\n                browserName = 'Safari';\r\n                fullVersion = nAgt.substring(verOffset + 7);\r\n\r\n                if ((verOffset = nAgt.indexOf('Version')) !== -1) {\r\n                    fullVersion = nAgt.substring(verOffset + 8);\r\n                }\r\n\r\n                if (navigator.userAgent.indexOf('Version/') !== -1) {\r\n                    fullVersion = navigator.userAgent.split('Version/')[1].split(' ')[0];\r\n                }\r\n            }\r\n            // In Firefox, the true version is after 'Firefox' \r\n            else if (isFirefox) {\r\n                verOffset = nAgt.indexOf('Firefox');\r\n                browserName = 'Firefox';\r\n                fullVersion = nAgt.substring(verOffset + 8);\r\n            }\r\n\r\n            // In most other browsers, 'name/version' is at the end of userAgent \r\n            else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) < (verOffset = nAgt.lastIndexOf('/'))) {\r\n                browserName = nAgt.substring(nameOffset, verOffset);\r\n                fullVersion = nAgt.substring(verOffset + 1);\r\n\r\n                if (browserName.toLowerCase() === browserName.toUpperCase()) {\r\n                    browserName = navigator.appName;\r\n                }\r\n            }\r\n\r\n            if (isEdge) {\r\n                browserName = 'Edge';\r\n                fullVersion = navigator.userAgent.split('Edge/')[1];\r\n                // fullVersion = parseInt(navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)[2], 10).toString();\r\n            }\r\n\r\n            // trim the fullVersion string at semicolon/space/bracket if present\r\n            if ((ix = fullVersion.search(/[; \\)]/)) !== -1) {\r\n                fullVersion = fullVersion.substring(0, ix);\r\n            }\r\n\r\n            majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n            if (isNaN(majorVersion)) {\r\n                fullVersion = '' + parseFloat(navigator.appVersion);\r\n                majorVersion = parseInt(navigator.appVersion, 10);\r\n            }\r\n\r\n            return {\r\n                fullVersion: fullVersion,\r\n                version: majorVersion,\r\n                name: browserName,\r\n                isPrivateBrowsing: false\r\n            };\r\n        }\r\n\r\n        // via: https://gist.github.com/cou929/7973956\r\n\r\n        function retry(isDone, next) {\r\n            var currentTrial = 0,\r\n                maxRetry = 50,\r\n                interval = 10,\r\n                isTimeout = false;\r\n            var id = window.setInterval(\r\n                function() {\r\n                    if (isDone()) {\r\n                        window.clearInterval(id);\r\n                        next(isTimeout);\r\n                    }\r\n                    if (currentTrial++ > maxRetry) {\r\n                        window.clearInterval(id);\r\n                        isTimeout = true;\r\n                        next(isTimeout);\r\n                    }\r\n                },\r\n                10\r\n            );\r\n        }\r\n\r\n        function isIE10OrLater(userAgent) {\r\n            var ua = userAgent.toLowerCase();\r\n            if (ua.indexOf('msie') === 0 && ua.indexOf('trident') === 0) {\r\n                return false;\r\n            }\r\n            var match = /(?:msie|rv:)\\s?([\\d\\.]+)/.exec(ua);\r\n            if (match && parseInt(match[1], 10) >= 10) {\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        function detectPrivateMode(callback) {\r\n            var isPrivate;\r\n\r\n            try {\r\n\r\n                if (window.webkitRequestFileSystem) {\r\n                    window.webkitRequestFileSystem(\r\n                        window.TEMPORARY, 1,\r\n                        function() {\r\n                            isPrivate = false;\r\n                        },\r\n                        function(e) {\r\n                            isPrivate = true;\r\n                        }\r\n                    );\r\n                } else if (window.indexedDB && /Firefox/.test(window.navigator.userAgent)) {\r\n                    var db;\r\n                    try {\r\n                        db = window.indexedDB.open('test');\r\n                        db.onerror = function() {\r\n                            return true;\r\n                        };\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        retry(\r\n                            function isDone() {\r\n                                return db.readyState === 'done' ? true : false;\r\n                            },\r\n                            function next(isTimeout) {\r\n                                if (!isTimeout) {\r\n                                    isPrivate = db.result ? false : true;\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                } else if (isIE10OrLater(window.navigator.userAgent)) {\r\n                    isPrivate = false;\r\n                    try {\r\n                        if (!window.indexedDB) {\r\n                            isPrivate = true;\r\n                        }\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n                } else if (window.localStorage && /Safari/.test(window.navigator.userAgent)) {\r\n                    try {\r\n                        window.localStorage.setItem('test', 1);\r\n                    } catch (e) {\r\n                        isPrivate = true;\r\n                    }\r\n\r\n                    if (typeof isPrivate === 'undefined') {\r\n                        isPrivate = false;\r\n                        window.localStorage.removeItem('test');\r\n                    }\r\n                }\r\n\r\n            } catch (e) {\r\n                isPrivate = false;\r\n            }\r\n\r\n            retry(\r\n                function isDone() {\r\n                    return typeof isPrivate !== 'undefined' ? true : false;\r\n                },\r\n                function next(isTimeout) {\r\n                    callback(isPrivate);\r\n                }\r\n            );\r\n        }\r\n\r\n        var isMobile = {\r\n            Android: function() {\r\n                return navigator.userAgent.match(/Android/i);\r\n            },\r\n            BlackBerry: function() {\r\n                return navigator.userAgent.match(/BlackBerry|BB10/i);\r\n            },\r\n            iOS: function() {\r\n                return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n            },\r\n            Opera: function() {\r\n                return navigator.userAgent.match(/Opera Mini/i);\r\n            },\r\n            Windows: function() {\r\n                return navigator.userAgent.match(/IEMobile/i);\r\n            },\r\n            any: function() {\r\n                return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\r\n            },\r\n            getOsName: function() {\r\n                var osName = 'Unknown OS';\r\n                if (isMobile.Android()) {\r\n                    osName = 'Android';\r\n                }\r\n\r\n                if (isMobile.BlackBerry()) {\r\n                    osName = 'BlackBerry';\r\n                }\r\n\r\n                if (isMobile.iOS()) {\r\n                    osName = 'iOS';\r\n                }\r\n\r\n                if (isMobile.Opera()) {\r\n                    osName = 'Opera Mini';\r\n                }\r\n\r\n                if (isMobile.Windows()) {\r\n                    osName = 'Windows';\r\n                }\r\n\r\n                return osName;\r\n            }\r\n        };\r\n\r\n        // via: http://jsfiddle.net/ChristianL/AVyND/\r\n        function detectDesktopOS() {\r\n            var unknown = '-';\r\n\r\n            var nVer = navigator.appVersion;\r\n            var nAgt = navigator.userAgent;\r\n\r\n            var os = unknown;\r\n            var clientStrings = [{\r\n                s: 'Windows 10',\r\n                r: /(Windows 10.0|Windows NT 10.0)/\r\n            }, {\r\n                s: 'Windows 8.1',\r\n                r: /(Windows 8.1|Windows NT 6.3)/\r\n            }, {\r\n                s: 'Windows 8',\r\n                r: /(Windows 8|Windows NT 6.2)/\r\n            }, {\r\n                s: 'Windows 7',\r\n                r: /(Windows 7|Windows NT 6.1)/\r\n            }, {\r\n                s: 'Windows Vista',\r\n                r: /Windows NT 6.0/\r\n            }, {\r\n                s: 'Windows Server 2003',\r\n                r: /Windows NT 5.2/\r\n            }, {\r\n                s: 'Windows XP',\r\n                r: /(Windows NT 5.1|Windows XP)/\r\n            }, {\r\n                s: 'Windows 2000',\r\n                r: /(Windows NT 5.0|Windows 2000)/\r\n            }, {\r\n                s: 'Windows ME',\r\n                r: /(Win 9x 4.90|Windows ME)/\r\n            }, {\r\n                s: 'Windows 98',\r\n                r: /(Windows 98|Win98)/\r\n            }, {\r\n                s: 'Windows 95',\r\n                r: /(Windows 95|Win95|Windows_95)/\r\n            }, {\r\n                s: 'Windows NT 4.0',\r\n                r: /(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/\r\n            }, {\r\n                s: 'Windows CE',\r\n                r: /Windows CE/\r\n            }, {\r\n                s: 'Windows 3.11',\r\n                r: /Win16/\r\n            }, {\r\n                s: 'Android',\r\n                r: /Android/\r\n            }, {\r\n                s: 'Open BSD',\r\n                r: /OpenBSD/\r\n            }, {\r\n                s: 'Sun OS',\r\n                r: /SunOS/\r\n            }, {\r\n                s: 'Linux',\r\n                r: /(Linux|X11)/\r\n            }, {\r\n                s: 'iOS',\r\n                r: /(iPhone|iPad|iPod)/\r\n            }, {\r\n                s: 'Mac OS X',\r\n                r: /Mac OS X/\r\n            }, {\r\n                s: 'Mac OS',\r\n                r: /(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/\r\n            }, {\r\n                s: 'QNX',\r\n                r: /QNX/\r\n            }, {\r\n                s: 'UNIX',\r\n                r: /UNIX/\r\n            }, {\r\n                s: 'BeOS',\r\n                r: /BeOS/\r\n            }, {\r\n                s: 'OS/2',\r\n                r: /OS\\/2/\r\n            }, {\r\n                s: 'Search Bot',\r\n                r: /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\\/Teoma|ia_archiver)/\r\n            }];\r\n            for (var i = 0, cs; cs = clientStrings[i]; i++) {\r\n                if (cs.r.test(nAgt)) {\r\n                    os = cs.s;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var osVersion = unknown;\r\n\r\n            if (/Windows/.test(os)) {\r\n                if (/Windows (.*)/.test(os)) {\r\n                    osVersion = /Windows (.*)/.exec(os)[1];\r\n                }\r\n                os = 'Windows';\r\n            }\r\n\r\n            switch (os) {\r\n                case 'Mac OS X':\r\n                    if (/Mac OS X (10[\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Mac OS X (10[\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'Android':\r\n                    if (/Android ([\\.\\_\\d]+)/.test(nAgt)) {\r\n                        osVersion = /Android ([\\.\\_\\d]+)/.exec(nAgt)[1];\r\n                    }\r\n                    break;\r\n                case 'iOS':\r\n                    if (/OS (\\d+)_(\\d+)_?(\\d+)?/.test(nAgt)) {\r\n                        osVersion = /OS (\\d+)_(\\d+)_?(\\d+)?/.exec(nVer);\r\n                        osVersion = osVersion[1] + '.' + osVersion[2] + '.' + (osVersion[3] | 0);\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return {\r\n                osName: os,\r\n                osVersion: osVersion\r\n            };\r\n        }\r\n\r\n        var osName = 'Unknown OS';\r\n        var osVersion = 'Unknown OS Version';\r\n\r\n        function getAndroidVersion(ua) {\r\n            ua = (ua || navigator.userAgent).toLowerCase();\r\n            var match = ua.match(/android\\s([0-9\\.]*)/);\r\n            return match ? match[1] : false;\r\n        }\r\n\r\n        var osInfo = detectDesktopOS();\r\n\r\n        if (osInfo && osInfo.osName && osInfo.osName != '-') {\r\n            osName = osInfo.osName;\r\n            osVersion = osInfo.osVersion;\r\n        } else if (isMobile.any()) {\r\n            osName = isMobile.getOsName();\r\n\r\n            if (osName == 'Android') {\r\n                osVersion = getAndroidVersion();\r\n            }\r\n        }\r\n\r\n        var isNodejs = typeof process === 'object' && typeof process.versions === 'object' && process.versions.node;\r\n\r\n        if (osName === 'Unknown OS' && isNodejs) {\r\n            osName = 'Nodejs';\r\n            osVersion = process.versions.node.toString().replace('v', '');\r\n        }\r\n\r\n        var isCanvasSupportsStreamCapturing = false;\r\n        var isVideoSupportsStreamCapturing = false;\r\n        ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n            if (typeof document === 'undefined' || typeof document.createElement !== 'function') {\r\n                return;\r\n            }\r\n\r\n            if (!isCanvasSupportsStreamCapturing && item in document.createElement('canvas')) {\r\n                isCanvasSupportsStreamCapturing = true;\r\n            }\r\n\r\n            if (!isVideoSupportsStreamCapturing && item in document.createElement('video')) {\r\n                isVideoSupportsStreamCapturing = true;\r\n            }\r\n        });\r\n\r\n        var regexIpv4Local = /^(192\\.168\\.|169\\.254\\.|10\\.|172\\.(1[6-9]|2\\d|3[01]))/,\r\n            regexIpv4 = /([0-9]{1,3}(\\.[0-9]{1,3}){3})/,\r\n            regexIpv6 = /[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}/;\r\n\r\n        // via: https://github.com/diafygi/webrtc-ips\r\n        function DetectLocalIPAddress(callback, stream) {\r\n            if (!DetectRTC.isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            var isPublic = true,\r\n                isIpv4 = true;\r\n            getIPs(function(ip) {\r\n                if (!ip) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                } else if (ip.match(regexIpv4Local)) {\r\n                    isPublic = false;\r\n                    callback('Local: ' + ip, isPublic, isIpv4);\r\n                } else if (ip.match(regexIpv6)) { //via https://ourcodeworld.com/articles/read/257/how-to-get-the-client-ip-address-with-javascript-only\r\n                    isIpv4 = false;\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                } else {\r\n                    callback('Public: ' + ip, isPublic, isIpv4);\r\n                }\r\n            }, stream);\r\n        }\r\n\r\n        function getIPs(callback, stream) {\r\n            if (typeof document === 'undefined' || typeof document.getElementById !== 'function') {\r\n                return;\r\n            }\r\n\r\n            var ipDuplicates = {};\r\n\r\n            var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n            if (!RTCPeerConnection) {\r\n                var iframe = document.getElementById('iframe');\r\n                if (!iframe) {\r\n                    return;\r\n                }\r\n                var win = iframe.contentWindow;\r\n                RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection;\r\n            }\r\n\r\n            if (!RTCPeerConnection) {\r\n                return;\r\n            }\r\n\r\n            var peerConfig = null;\r\n\r\n            if (DetectRTC.browser === 'Chrome' && DetectRTC.browser.version < 58) {\r\n                // todo: add support for older Opera\r\n                peerConfig = {\r\n                    optional: [{\r\n                        RtpDataChannels: true\r\n                    }]\r\n                };\r\n            }\r\n\r\n            var servers = {\r\n                iceServers: [{\r\n                    urls: 'stun:stun.l.google.com:19302'\r\n                }]\r\n            };\r\n\r\n            var pc = new RTCPeerConnection(servers, peerConfig);\r\n\r\n            if (stream) {\r\n                if (pc.addStream) {\r\n                    pc.addStream(stream);\r\n                } else if (pc.addTrack && stream.getTracks()[0]) {\r\n                    pc.addTrack(stream.getTracks()[0], stream);\r\n                }\r\n            }\r\n\r\n            function handleCandidate(candidate) {\r\n                if (!candidate) {\r\n                    callback(); // Pass nothing to tell that ICE-gathering-ended\r\n                    return;\r\n                }\r\n\r\n                var match = regexIpv4.exec(candidate);\r\n                if (!match) {\r\n                    return;\r\n                }\r\n                var ipAddress = match[1];\r\n                var isPublic = (candidate.match(regexIpv4Local)),\r\n                    isIpv4 = true;\r\n\r\n                if (ipDuplicates[ipAddress] === undefined) {\r\n                    callback(ipAddress, isPublic, isIpv4);\r\n                }\r\n\r\n                ipDuplicates[ipAddress] = true;\r\n            }\r\n\r\n            // listen for candidate events\r\n            pc.onicecandidate = function(event) {\r\n                if (event.candidate && event.candidate.candidate) {\r\n                    handleCandidate(event.candidate.candidate);\r\n                } else {\r\n                    handleCandidate(); // Pass nothing to tell that ICE-gathering-ended\r\n                }\r\n            };\r\n\r\n            // create data channel\r\n            if (!stream) {\r\n                try {\r\n                    pc.createDataChannel('sctp', {});\r\n                } catch (e) {}\r\n            }\r\n\r\n            // create an offer sdp\r\n            if (DetectRTC.isPromisesSupported) {\r\n                pc.createOffer().then(function(result) {\r\n                    pc.setLocalDescription(result).then(afterCreateOffer);\r\n                });\r\n            } else {\r\n                pc.createOffer(function(result) {\r\n                    pc.setLocalDescription(result, afterCreateOffer, function() {});\r\n                }, function() {});\r\n            }\r\n\r\n            function afterCreateOffer() {\r\n                var lines = pc.localDescription.sdp.split('\\n');\r\n\r\n                lines.forEach(function(line) {\r\n                    if (line && line.indexOf('a=candidate:') === 0) {\r\n                        handleCandidate(line);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var MediaDevices = [];\r\n\r\n        var audioInputDevices = [];\r\n        var audioOutputDevices = [];\r\n        var videoInputDevices = [];\r\n\r\n        if (navigator.mediaDevices && navigator.mediaDevices.enumerateDevices) {\r\n            // Firefox 38+ seems having support of enumerateDevices\r\n            // Thanks @xdumaine/enumerateDevices\r\n            navigator.enumerateDevices = function(callback) {\r\n                var enumerateDevices = navigator.mediaDevices.enumerateDevices();\r\n                if (enumerateDevices && enumerateDevices.then) {\r\n                    navigator.mediaDevices.enumerateDevices().then(callback).catch(function() {\r\n                        callback([]);\r\n                    });\r\n                } else {\r\n                    callback([]);\r\n                }\r\n            };\r\n        }\r\n\r\n        // Media Devices detection\r\n        var canEnumerate = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'getSources' in MediaStreamTrack) {\r\n            canEnumerate = true;\r\n        } else if (navigator.mediaDevices && !!navigator.mediaDevices.enumerateDevices) {\r\n            canEnumerate = true;\r\n        }\r\n\r\n        var hasMicrophone = false;\r\n        var hasSpeakers = false;\r\n        var hasWebcam = false;\r\n\r\n        var isWebsiteHasMicrophonePermissions = false;\r\n        var isWebsiteHasWebcamPermissions = false;\r\n\r\n        // http://dev.w3.org/2011/webrtc/editor/getusermedia.html#mediadevices\r\n        function checkDeviceSupport(callback) {\r\n            if (!canEnumerate) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && window.MediaStreamTrack && window.MediaStreamTrack.getSources) {\r\n                navigator.enumerateDevices = window.MediaStreamTrack.getSources.bind(window.MediaStreamTrack);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices && navigator.enumerateDevices) {\r\n                navigator.enumerateDevices = navigator.enumerateDevices.bind(navigator);\r\n            }\r\n\r\n            if (!navigator.enumerateDevices) {\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n                return;\r\n            }\r\n\r\n            MediaDevices = [];\r\n\r\n            audioInputDevices = [];\r\n            audioOutputDevices = [];\r\n            videoInputDevices = [];\r\n\r\n            hasMicrophone = false;\r\n            hasSpeakers = false;\r\n            hasWebcam = false;\r\n\r\n            isWebsiteHasMicrophonePermissions = false;\r\n            isWebsiteHasWebcamPermissions = false;\r\n\r\n            // to prevent duplication\r\n            var alreadyUsedDevices = {};\r\n\r\n            navigator.enumerateDevices(function(devices) {\r\n                devices.forEach(function(_device) {\r\n                    var device = {};\r\n                    for (var d in _device) {\r\n                        try {\r\n                            if (typeof _device[d] !== 'function') {\r\n                                device[d] = _device[d];\r\n                            }\r\n                        } catch (e) {}\r\n                    }\r\n\r\n                    if (alreadyUsedDevices[device.deviceId + device.label + device.kind]) {\r\n                        return;\r\n                    }\r\n\r\n                    // if it is MediaStreamTrack.getSources\r\n                    if (device.kind === 'audio') {\r\n                        device.kind = 'audioinput';\r\n                    }\r\n\r\n                    if (device.kind === 'video') {\r\n                        device.kind = 'videoinput';\r\n                    }\r\n\r\n                    if (!device.deviceId) {\r\n                        device.deviceId = device.id;\r\n                    }\r\n\r\n                    if (!device.id) {\r\n                        device.id = device.deviceId;\r\n                    }\r\n\r\n                    if (!device.label) {\r\n                        device.isCustomLabel = true;\r\n\r\n                        if (device.kind === 'videoinput') {\r\n                            device.label = 'Camera ' + (videoInputDevices.length + 1);\r\n                        } else if (device.kind === 'audioinput') {\r\n                            device.label = 'Microphone ' + (audioInputDevices.length + 1);\r\n                        } else if (device.kind === 'audiooutput') {\r\n                            device.label = 'Speaker ' + (audioOutputDevices.length + 1);\r\n                        } else {\r\n                            device.label = 'Please invoke getUserMedia once.';\r\n                        }\r\n\r\n                        if (typeof DetectRTC !== 'undefined' && DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n                            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                                device.label = 'HTTPs is required to get label of this ' + device.kind + ' device.';\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // Firefox on Android still returns empty label\r\n                        if (device.kind === 'videoinput' && !isWebsiteHasWebcamPermissions) {\r\n                            isWebsiteHasWebcamPermissions = true;\r\n                        }\r\n\r\n                        if (device.kind === 'audioinput' && !isWebsiteHasMicrophonePermissions) {\r\n                            isWebsiteHasMicrophonePermissions = true;\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audioinput') {\r\n                        hasMicrophone = true;\r\n\r\n                        if (audioInputDevices.indexOf(device) === -1) {\r\n                            audioInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'audiooutput') {\r\n                        hasSpeakers = true;\r\n\r\n                        if (audioOutputDevices.indexOf(device) === -1) {\r\n                            audioOutputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput') {\r\n                        hasWebcam = true;\r\n\r\n                        if (videoInputDevices.indexOf(device) === -1) {\r\n                            videoInputDevices.push(device);\r\n                        }\r\n                    }\r\n\r\n                    // there is no 'videoouput' in the spec.\r\n                    MediaDevices.push(device);\r\n\r\n                    alreadyUsedDevices[device.deviceId + device.label + device.kind] = device;\r\n                });\r\n\r\n                if (typeof DetectRTC !== 'undefined') {\r\n                    // to sync latest outputs\r\n                    DetectRTC.MediaDevices = MediaDevices;\r\n                    DetectRTC.hasMicrophone = hasMicrophone;\r\n                    DetectRTC.hasSpeakers = hasSpeakers;\r\n                    DetectRTC.hasWebcam = hasWebcam;\r\n\r\n                    DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n                    DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n                    DetectRTC.audioInputDevices = audioInputDevices;\r\n                    DetectRTC.audioOutputDevices = audioOutputDevices;\r\n                    DetectRTC.videoInputDevices = videoInputDevices;\r\n                }\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            });\r\n        }\r\n\r\n        var DetectRTC = window.DetectRTC || {};\r\n\r\n        // ----------\r\n        // DetectRTC.browser.name || DetectRTC.browser.version || DetectRTC.browser.fullVersion\r\n        DetectRTC.browser = getBrowserInfo();\r\n\r\n        detectPrivateMode(function(isPrivateBrowsing) {\r\n            DetectRTC.browser.isPrivateBrowsing = !!isPrivateBrowsing;\r\n        });\r\n\r\n        // DetectRTC.isChrome || DetectRTC.isFirefox || DetectRTC.isEdge\r\n        DetectRTC.browser['is' + DetectRTC.browser.name] = true;\r\n\r\n        // -----------\r\n        DetectRTC.osName = osName;\r\n        DetectRTC.osVersion = osVersion;\r\n\r\n        var isNodeWebkit = typeof process === 'object' && typeof process.versions === 'object' && process.versions['node-webkit'];\r\n\r\n        // --------- Detect if system supports WebRTC 1.0 or WebRTC 1.1.\r\n        var isWebRTCSupported = false;\r\n        ['RTCPeerConnection', 'webkitRTCPeerConnection', 'mozRTCPeerConnection', 'RTCIceGatherer'].forEach(function(item) {\r\n            if (isWebRTCSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                isWebRTCSupported = true;\r\n            }\r\n        });\r\n        DetectRTC.isWebRTCSupported = isWebRTCSupported;\r\n\r\n        //-------\r\n        DetectRTC.isORTCSupported = typeof RTCIceGatherer !== 'undefined';\r\n\r\n        // --------- Detect if system supports screen capturing API\r\n        var isScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 35) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 34) {\r\n            isScreenCapturingSupported = true;\r\n        } else if (DetectRTC.browser.isEdge && DetectRTC.browser.version >= 17) {\r\n            isScreenCapturingSupported = true; // navigator.getDisplayMedia\r\n        } else if (DetectRTC.osName === 'Android' && DetectRTC.browser.isChrome) {\r\n            isScreenCapturingSupported = true;\r\n        }\r\n\r\n        if (!/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            var isNonLocalHost = typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1;\r\n            if (isNonLocalHost && (DetectRTC.browser.isChrome || DetectRTC.browser.isEdge || DetectRTC.browser.isOpera)) {\r\n                isScreenCapturingSupported = false;\r\n            } else if (DetectRTC.browser.isFirefox) {\r\n                isScreenCapturingSupported = false;\r\n            }\r\n        }\r\n        DetectRTC.isScreenCapturingSupported = isScreenCapturingSupported;\r\n\r\n        // --------- Detect if WebAudio API are supported\r\n        var webAudio = {\r\n            isSupported: false,\r\n            isCreateMediaStreamSourceSupported: false\r\n        };\r\n\r\n        ['AudioContext', 'webkitAudioContext', 'mozAudioContext', 'msAudioContext'].forEach(function(item) {\r\n            if (webAudio.isSupported) {\r\n                return;\r\n            }\r\n\r\n            if (item in window) {\r\n                webAudio.isSupported = true;\r\n\r\n                if (window[item] && 'createMediaStreamSource' in window[item].prototype) {\r\n                    webAudio.isCreateMediaStreamSourceSupported = true;\r\n                }\r\n            }\r\n        });\r\n        DetectRTC.isAudioContextSupported = webAudio.isSupported;\r\n        DetectRTC.isCreateMediaStreamSourceSupported = webAudio.isCreateMediaStreamSourceSupported;\r\n\r\n        // ---------- Detect if SCTP/RTP channels are supported.\r\n\r\n        var isRtpDataChannelsSupported = false;\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 31) {\r\n            isRtpDataChannelsSupported = true;\r\n        }\r\n        DetectRTC.isRtpDataChannelsSupported = isRtpDataChannelsSupported;\r\n\r\n        var isSCTPSupportd = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 28) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isChrome && DetectRTC.browser.version > 25) {\r\n            isSCTPSupportd = true;\r\n        } else if (DetectRTC.browser.isOpera && DetectRTC.browser.version >= 11) {\r\n            isSCTPSupportd = true;\r\n        }\r\n        DetectRTC.isSctpDataChannelsSupported = isSCTPSupportd;\r\n\r\n        // ---------\r\n\r\n        DetectRTC.isMobileDevice = isMobileDevice; // \"isMobileDevice\" boolean is defined in \"getBrowserInfo.js\"\r\n\r\n        // ------\r\n        var isGetUserMediaSupported = false;\r\n        if (navigator.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        } else if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            isGetUserMediaSupported = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.isChrome && DetectRTC.browser.version >= 46 && !/^(https:|chrome-extension:)$/g.test(location.protocol || '')) {\r\n            if (typeof document !== 'undefined' && typeof document.domain === 'string' && document.domain.search && document.domain.search(/localhost|127.0./g) === -1) {\r\n                isGetUserMediaSupported = 'Requires HTTPs';\r\n            }\r\n        }\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            isGetUserMediaSupported = false;\r\n        }\r\n        DetectRTC.isGetUserMediaSupported = isGetUserMediaSupported;\r\n\r\n        var displayResolution = '';\r\n        if (screen.width) {\r\n            var width = (screen.width) ? screen.width : '';\r\n            var height = (screen.height) ? screen.height : '';\r\n            displayResolution += '' + width + ' x ' + height;\r\n        }\r\n        DetectRTC.displayResolution = displayResolution;\r\n\r\n        function getAspectRatio(w, h) {\r\n            function gcd(a, b) {\r\n                return (b == 0) ? a : gcd(b, a % b);\r\n            }\r\n            var r = gcd(w, h);\r\n            return (w / r) / (h / r);\r\n        }\r\n\r\n        DetectRTC.displayAspectRatio = getAspectRatio(screen.width, screen.height).toFixed(2);\r\n\r\n        // ----------\r\n        DetectRTC.isCanvasSupportsStreamCapturing = isCanvasSupportsStreamCapturing;\r\n        DetectRTC.isVideoSupportsStreamCapturing = isVideoSupportsStreamCapturing;\r\n\r\n        if (DetectRTC.browser.name == 'Chrome' && DetectRTC.browser.version >= 53) {\r\n            if (!DetectRTC.isCanvasSupportsStreamCapturing) {\r\n                DetectRTC.isCanvasSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n\r\n            if (!DetectRTC.isVideoSupportsStreamCapturing) {\r\n                DetectRTC.isVideoSupportsStreamCapturing = 'Requires chrome flag: enable-experimental-web-platform-features';\r\n            }\r\n        }\r\n\r\n        // ------\r\n        DetectRTC.DetectLocalIPAddress = DetectLocalIPAddress;\r\n\r\n        DetectRTC.isWebSocketsSupported = 'WebSocket' in window && 2 === window.WebSocket.CLOSING;\r\n        DetectRTC.isWebSocketsBlocked = !DetectRTC.isWebSocketsSupported;\r\n\r\n        if (DetectRTC.osName === 'Nodejs') {\r\n            DetectRTC.isWebSocketsSupported = true;\r\n            DetectRTC.isWebSocketsBlocked = false;\r\n        }\r\n\r\n        DetectRTC.checkWebSocketsSupport = function(callback) {\r\n            callback = callback || function() {};\r\n            try {\r\n                var starttime;\r\n                var websocket = new WebSocket('wss://echo.websocket.org:443/');\r\n                websocket.onopen = function() {\r\n                    DetectRTC.isWebSocketsBlocked = false;\r\n                    starttime = (new Date).getTime();\r\n                    websocket.send('ping');\r\n                };\r\n                websocket.onmessage = function() {\r\n                    DetectRTC.WebsocketLatency = (new Date).getTime() - starttime + 'ms';\r\n                    callback();\r\n                    websocket.close();\r\n                    websocket = null;\r\n                };\r\n                websocket.onerror = function() {\r\n                    DetectRTC.isWebSocketsBlocked = true;\r\n                    callback();\r\n                };\r\n            } catch (e) {\r\n                DetectRTC.isWebSocketsBlocked = true;\r\n                callback();\r\n            }\r\n        };\r\n\r\n        // -------\r\n        DetectRTC.load = function(callback) {\r\n            callback = callback || function() {};\r\n            checkDeviceSupport(callback);\r\n        };\r\n\r\n        // check for microphone/camera support!\r\n        if (typeof checkDeviceSupport === 'function') {\r\n            // checkDeviceSupport();\r\n        }\r\n\r\n        if (typeof MediaDevices !== 'undefined') {\r\n            DetectRTC.MediaDevices = MediaDevices;\r\n        } else {\r\n            DetectRTC.MediaDevices = [];\r\n        }\r\n\r\n        DetectRTC.hasMicrophone = hasMicrophone;\r\n        DetectRTC.hasSpeakers = hasSpeakers;\r\n        DetectRTC.hasWebcam = hasWebcam;\r\n\r\n        DetectRTC.isWebsiteHasWebcamPermissions = isWebsiteHasWebcamPermissions;\r\n        DetectRTC.isWebsiteHasMicrophonePermissions = isWebsiteHasMicrophonePermissions;\r\n\r\n        DetectRTC.audioInputDevices = audioInputDevices;\r\n        DetectRTC.audioOutputDevices = audioOutputDevices;\r\n        DetectRTC.videoInputDevices = videoInputDevices;\r\n\r\n        // ------\r\n        var isSetSinkIdSupported = false;\r\n        if (typeof document !== 'undefined' && typeof document.createElement === 'function' && 'setSinkId' in document.createElement('video')) {\r\n            isSetSinkIdSupported = true;\r\n        }\r\n        DetectRTC.isSetSinkIdSupported = isSetSinkIdSupported;\r\n\r\n        // -----\r\n        var isRTPSenderReplaceTracksSupported = false;\r\n        if (DetectRTC.browser.isFirefox && typeof mozRTCPeerConnection !== 'undefined' /*&& DetectRTC.browser.version > 39*/ ) {\r\n            /*global mozRTCPeerConnection:true */\r\n            if ('getSenders' in mozRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        } else if (DetectRTC.browser.isChrome && typeof webkitRTCPeerConnection !== 'undefined') {\r\n            /*global webkitRTCPeerConnection:true */\r\n            if ('getSenders' in webkitRTCPeerConnection.prototype) {\r\n                isRTPSenderReplaceTracksSupported = true;\r\n            }\r\n        }\r\n        DetectRTC.isRTPSenderReplaceTracksSupported = isRTPSenderReplaceTracksSupported;\r\n\r\n        //------\r\n        var isRemoteStreamProcessingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version > 38) {\r\n            isRemoteStreamProcessingSupported = true;\r\n        }\r\n        DetectRTC.isRemoteStreamProcessingSupported = isRemoteStreamProcessingSupported;\r\n\r\n        //-------\r\n        var isApplyConstraintsSupported = false;\r\n\r\n        /*global MediaStreamTrack:true */\r\n        if (typeof MediaStreamTrack !== 'undefined' && 'applyConstraints' in MediaStreamTrack.prototype) {\r\n            isApplyConstraintsSupported = true;\r\n        }\r\n        DetectRTC.isApplyConstraintsSupported = isApplyConstraintsSupported;\r\n\r\n        //-------\r\n        var isMultiMonitorScreenCapturingSupported = false;\r\n        if (DetectRTC.browser.isFirefox && DetectRTC.browser.version >= 43) {\r\n            // version 43 merely supports platforms for multi-monitors\r\n            // version 44 will support exact multi-monitor selection i.e. you can select any monitor for screen capturing.\r\n            isMultiMonitorScreenCapturingSupported = true;\r\n        }\r\n        DetectRTC.isMultiMonitorScreenCapturingSupported = isMultiMonitorScreenCapturingSupported;\r\n\r\n        DetectRTC.isPromisesSupported = !!('Promise' in window);\r\n\r\n        // version is generated by \"grunt\"\r\n        DetectRTC.version = '1.3.9';\r\n\r\n        if (typeof DetectRTC === 'undefined') {\r\n            window.DetectRTC = {};\r\n        }\r\n\r\n        var MediaStream = window.MediaStream;\r\n\r\n        if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n            MediaStream = webkitMediaStream;\r\n        }\r\n\r\n        if (typeof MediaStream !== 'undefined' && typeof MediaStream === 'function') {\r\n            DetectRTC.MediaStream = Object.keys(MediaStream.prototype);\r\n        } else DetectRTC.MediaStream = false;\r\n\r\n        if (typeof MediaStreamTrack !== 'undefined') {\r\n            DetectRTC.MediaStreamTrack = Object.keys(MediaStreamTrack.prototype);\r\n        } else DetectRTC.MediaStreamTrack = false;\r\n\r\n        var RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection;\r\n\r\n        if (typeof RTCPeerConnection !== 'undefined') {\r\n            DetectRTC.RTCPeerConnection = Object.keys(RTCPeerConnection.prototype);\r\n        } else DetectRTC.RTCPeerConnection = false;\r\n\r\n        window.DetectRTC = DetectRTC;\r\n\r\n        if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n            module.exports = DetectRTC;\r\n        }\r\n\r\n        if (typeof define === 'function' && define.amd) {\r\n            define('DetectRTC', [], function() {\r\n                return DetectRTC;\r\n            });\r\n        }\r\n    })();\r\n\r\n    // globals.js\r\n\r\n    if (typeof cordova !== 'undefined') {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    if (navigator && navigator.userAgent && navigator.userAgent.indexOf('Crosswalk') !== -1) {\r\n        DetectRTC.isMobileDevice = true;\r\n        DetectRTC.browser.name = 'Chrome';\r\n    }\r\n\r\n    function fireEvent(obj, eventName, args) {\r\n        if (typeof CustomEvent === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        var eventDetail = {\r\n            arguments: args,\r\n            __exposedProps__: args\r\n        };\r\n\r\n        var event = new CustomEvent(eventName, eventDetail);\r\n        obj.dispatchEvent(event);\r\n    }\r\n\r\n    function setHarkEvents(connection, streamEvent) {\r\n        if (!streamEvent.stream || !getTracks(streamEvent.stream, 'audio').length) return;\r\n\r\n        if (!connection || !streamEvent) {\r\n            throw 'Both arguments are required.';\r\n        }\r\n\r\n        if (!connection.onspeaking || !connection.onsilence) {\r\n            return;\r\n        }\r\n\r\n        if (typeof hark === 'undefined') {\r\n            throw 'hark.js not found.';\r\n        }\r\n\r\n        hark(streamEvent.stream, {\r\n            onspeaking: function() {\r\n                connection.onspeaking(streamEvent);\r\n            },\r\n            onsilence: function() {\r\n                connection.onsilence(streamEvent);\r\n            },\r\n            onvolumechange: function(volume, threshold) {\r\n                if (!connection.onvolumechange) {\r\n                    return;\r\n                }\r\n                connection.onvolumechange(merge({\r\n                    volume: volume,\r\n                    threshold: threshold\r\n                }, streamEvent));\r\n            }\r\n        });\r\n    }\r\n\r\n    function setMuteHandlers(connection, streamEvent) {\r\n        if (!streamEvent.stream || !streamEvent.stream || !streamEvent.stream.addEventListener) return;\r\n\r\n        streamEvent.stream.addEventListener('mute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.muteType === 'audio',\r\n                video: event.muteType === 'video'\r\n            };\r\n\r\n            connection.onmute(event);\r\n        }, false);\r\n\r\n        streamEvent.stream.addEventListener('unmute', function(event) {\r\n            event = connection.streamEvents[streamEvent.streamid];\r\n\r\n            event.session = {\r\n                audio: event.unmuteType === 'audio',\r\n                video: event.unmuteType === 'video'\r\n            };\r\n\r\n            connection.onunmute(event);\r\n        }, false);\r\n    }\r\n\r\n    function getRandomString() {\r\n        if (window.crypto && window.crypto.getRandomValues && navigator.userAgent.indexOf('Safari') === -1) {\r\n            var a = window.crypto.getRandomValues(new Uint32Array(3)),\r\n                token = '';\r\n            for (var i = 0, l = a.length; i < l; i++) {\r\n                token += a[i].toString(36);\r\n            }\r\n            return token;\r\n        } else {\r\n            return (Math.random() * new Date().getTime()).toString(36).replace(/\\./g, '');\r\n        }\r\n    }\r\n\r\n    // Get HTMLAudioElement/HTMLVideoElement accordingly\r\n    // todo: add API documentation for connection.autoCreateMediaElement\r\n\r\n    function getRMCMediaElement(stream, callback, connection) {\r\n        if (!connection.autoCreateMediaElement) {\r\n            callback({});\r\n            return;\r\n        }\r\n\r\n        var isAudioOnly = false;\r\n        if (!getTracks(stream, 'video').length && !stream.isVideo && !stream.isScreen) {\r\n            isAudioOnly = true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            if (connection.session.video || connection.session.screen) {\r\n                isAudioOnly = false;\r\n            }\r\n        }\r\n\r\n        var mediaElement = document.createElement(isAudioOnly ? 'audio' : 'video');\r\n\r\n        mediaElement.srcObject = stream;\r\n\r\n        mediaElement.setAttribute('autoplay', true);\r\n        mediaElement.setAttribute('playsinline', true);\r\n        mediaElement.setAttribute('controls', true);\r\n        mediaElement.setAttribute('muted', false);\r\n        mediaElement.setAttribute('volume', 1);\r\n\r\n        // http://goo.gl/WZ5nFl\r\n        // Firefox don't yet support onended for any stream (remote/local)\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in mediaElement) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            mediaElement.addEventListener(streamEndedEvent, function() {\r\n                // fireEvent(stream, streamEndedEvent, stream);\r\n                currentUserMediaRequest.remove(stream.idInstance);\r\n\r\n                if (stream.type === 'local') {\r\n                    streamEndedEvent = 'ended';\r\n\r\n                    if ('oninactive' in stream) {\r\n                        streamEndedEvent = 'inactive';\r\n                    }\r\n\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, streamEndedEvent);\r\n\r\n                    connection.attachStreams.forEach(function(aStream, idx) {\r\n                        if (stream.streamid === aStream.streamid) {\r\n                            delete connection.attachStreams[idx];\r\n                        }\r\n                    });\r\n\r\n                    var newStreamsArray = [];\r\n                    connection.attachStreams.forEach(function(aStream) {\r\n                        if (aStream) {\r\n                            newStreamsArray.push(aStream);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = newStreamsArray;\r\n\r\n                    var streamEvent = connection.streamEvents[stream.streamid];\r\n\r\n                    if (streamEvent) {\r\n                        connection.onstreamended(streamEvent);\r\n                        return;\r\n                    }\r\n                    if (this.parentNode) {\r\n                        this.parentNode.removeChild(this);\r\n                    }\r\n                }\r\n            }, false);\r\n        }\r\n\r\n        var played = mediaElement.play();\r\n        if (typeof played !== 'undefined') {\r\n            var cbFired = false;\r\n            setTimeout(function() {\r\n                if (!cbFired) {\r\n                    cbFired = true;\r\n                    callback(mediaElement);\r\n                }\r\n            }, 1000);\r\n            played.then(function() {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            }).catch(function(error) {\r\n                if (cbFired) return;\r\n                cbFired = true;\r\n                callback(mediaElement);\r\n            });\r\n        } else {\r\n            callback(mediaElement);\r\n        }\r\n    }\r\n\r\n    // if IE\r\n    if (!window.addEventListener) {\r\n        window.addEventListener = function(el, eventName, eventHandler) {\r\n            if (!el.attachEvent) {\r\n                return;\r\n            }\r\n            el.attachEvent('on' + eventName, eventHandler);\r\n        };\r\n    }\r\n\r\n    function listenEventHandler(eventName, eventHandler) {\r\n        window.removeEventListener(eventName, eventHandler);\r\n        window.addEventListener(eventName, eventHandler, false);\r\n    }\r\n\r\n    window.attachEventListener = function(video, type, listener, useCapture) {\r\n        video.addEventListener(type, listener, useCapture);\r\n    };\r\n\r\n    function removeNullEntries(array) {\r\n        var newArray = [];\r\n        array.forEach(function(item) {\r\n            if (item) {\r\n                newArray.push(item);\r\n            }\r\n        });\r\n        return newArray;\r\n    }\r\n\r\n\r\n    function isData(session) {\r\n        return !session.audio && !session.video && !session.screen && session.data;\r\n    }\r\n\r\n    function isNull(obj) {\r\n        return typeof obj === 'undefined';\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        if (!('stop' in MediaStream.prototype)) {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    function isAudioPlusTab(connection, audioPlusTab) {\r\n        if (connection.session.audio && connection.session.audio === 'two-way') {\r\n            return false;\r\n        }\r\n\r\n        if (DetectRTC.browser.name === 'Firefox' && audioPlusTab !== false) {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome' || DetectRTC.browser.version < 50) return false;\r\n\r\n        if (typeof audioPlusTab === true) {\r\n            return true;\r\n        }\r\n\r\n        if (typeof audioPlusTab === 'undefined' && connection.session.audio && connection.session.screen && !connection.session.video) {\r\n            audioPlusTab = true;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    function getAudioScreenConstraints(screen_constraints) {\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            return true;\r\n        }\r\n\r\n        if (DetectRTC.browser.name !== 'Chrome') return false;\r\n\r\n        return {\r\n            mandatory: {\r\n                chromeMediaSource: screen_constraints.mandatory.chromeMediaSource,\r\n                chromeMediaSourceId: screen_constraints.mandatory.chromeMediaSourceId\r\n            }\r\n        };\r\n    }\r\n\r\n    window.iOSDefaultAudioOutputDevice = window.iOSDefaultAudioOutputDevice || 'speaker'; // earpiece or speaker\r\n\r\n    function getTracks(stream, kind) {\r\n        if (!stream || !stream.getTracks) {\r\n            return [];\r\n        }\r\n\r\n        return stream.getTracks().filter(function(t) {\r\n            return t.kind === (kind || 'audio');\r\n        });\r\n    }\r\n\r\n    function isUnifiedPlanSupportedDefault() {\r\n        var canAddTransceiver = false;\r\n\r\n        try {\r\n            if (typeof RTCRtpTransceiver === 'undefined') return false;\r\n            if (!('currentDirection' in RTCRtpTransceiver.prototype)) return false;\r\n\r\n            var tempPc = new RTCPeerConnection();\r\n\r\n            try {\r\n                tempPc.addTransceiver('audio');\r\n                canAddTransceiver = true;\r\n            } catch (e) {}\r\n\r\n            tempPc.close();\r\n        } catch (e) {\r\n            canAddTransceiver = false;\r\n        }\r\n\r\n        return canAddTransceiver && isUnifiedPlanSuppored();\r\n    }\r\n\r\n    function isUnifiedPlanSuppored() {\r\n        var isUnifiedPlanSupported = false;\r\n\r\n        try {\r\n            var pc = new RTCPeerConnection({\r\n                sdpSemantics: 'unified-plan'\r\n            });\r\n\r\n            try {\r\n                var config = pc.getConfiguration();\r\n                if (config.sdpSemantics == 'unified-plan')\r\n                    isUnifiedPlanSupported = true;\r\n                else if (config.sdpSemantics == 'plan-b')\r\n                    isUnifiedPlanSupported = false;\r\n                else\r\n                    isUnifiedPlanSupported = false;\r\n            } catch (e) {\r\n                isUnifiedPlanSupported = false;\r\n            }\r\n        } catch (e) {\r\n            isUnifiedPlanSupported = false;\r\n        }\r\n\r\n        return isUnifiedPlanSupported;\r\n    }\r\n\r\n    // ios-hacks.js\r\n\r\n    function setCordovaAPIs() {\r\n        // if (DetectRTC.osName !== 'iOS') return;\r\n        if (typeof cordova === 'undefined' || typeof cordova.plugins === 'undefined' || typeof cordova.plugins.iosrtc === 'undefined') return;\r\n\r\n        var iosrtc = cordova.plugins.iosrtc;\r\n        window.webkitRTCPeerConnection = iosrtc.RTCPeerConnection;\r\n        window.RTCSessionDescription = iosrtc.RTCSessionDescription;\r\n        window.RTCIceCandidate = iosrtc.RTCIceCandidate;\r\n        window.MediaStream = iosrtc.MediaStream;\r\n        window.MediaStreamTrack = iosrtc.MediaStreamTrack;\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia = iosrtc.getUserMedia;\r\n\r\n        iosrtc.debug.enable('iosrtc*');\r\n        if (typeof iosrtc.selectAudioOutput == 'function') {\r\n            iosrtc.selectAudioOutput(window.iOSDefaultAudioOutputDevice || 'speaker'); // earpiece or speaker\r\n        }\r\n        iosrtc.registerGlobals();\r\n    }\r\n\r\n    document.addEventListener('deviceready', setCordovaAPIs, false);\r\n    setCordovaAPIs();\r\n\r\n    // RTCPeerConnection.js\r\n\r\n    var defaults = {};\r\n\r\n    function setSdpConstraints(config) {\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!config.OfferToReceiveAudio,\r\n            OfferToReceiveVideo: !!config.OfferToReceiveVideo\r\n        };\r\n\r\n        return sdpConstraints;\r\n    }\r\n\r\n    var RTCPeerConnection;\r\n    if (typeof window.RTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = window.RTCPeerConnection;\r\n    } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = mozRTCPeerConnection;\r\n    } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n        RTCPeerConnection = webkitRTCPeerConnection;\r\n    }\r\n\r\n    var RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n    var RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n    var MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n    function PeerInitiator(config) {\r\n        if (typeof window.RTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = window.RTCPeerConnection;\r\n        } else if (typeof mozRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = mozRTCPeerConnection;\r\n        } else if (typeof webkitRTCPeerConnection !== 'undefined') {\r\n            RTCPeerConnection = webkitRTCPeerConnection;\r\n        }\r\n\r\n        RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription;\r\n        RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate;\r\n        MediaStreamTrack = window.MediaStreamTrack;\r\n\r\n        if (!RTCPeerConnection) {\r\n            throw 'WebRTC 1.0 (RTCPeerConnection) API are NOT available in this browser.';\r\n        }\r\n\r\n        var connection = config.rtcMultiConnection;\r\n\r\n        this.extra = config.remoteSdp ? config.remoteSdp.extra : connection.extra;\r\n        this.userid = config.userid;\r\n        this.streams = [];\r\n        this.channels = config.channels || [];\r\n        this.connectionDescription = config.connectionDescription;\r\n\r\n        this.addStream = function(session) {\r\n            connection.addStream(session, self.userid);\r\n        };\r\n\r\n        this.removeStream = function(streamid) {\r\n            connection.removeStream(streamid, self.userid);\r\n        };\r\n\r\n        var self = this;\r\n\r\n        if (config.remoteSdp) {\r\n            this.connectionDescription = config.remoteSdp.connectionDescription;\r\n        }\r\n\r\n        var allRemoteStreams = {};\r\n\r\n        defaults.sdpConstraints = setSdpConstraints({\r\n            OfferToReceiveAudio: true,\r\n            OfferToReceiveVideo: true\r\n        });\r\n\r\n        var peer;\r\n\r\n        var renegotiatingPeer = !!config.renegotiatingPeer;\r\n        if (config.remoteSdp) {\r\n            renegotiatingPeer = !!config.remoteSdp.renegotiatingPeer;\r\n        }\r\n\r\n        var localStreams = [];\r\n        connection.attachStreams.forEach(function(stream) {\r\n            if (!!stream) {\r\n                localStreams.push(stream);\r\n            }\r\n        });\r\n\r\n        if (!renegotiatingPeer) {\r\n            var iceTransports = 'all';\r\n            if (connection.candidates.turn || connection.candidates.relay) {\r\n                if (!connection.candidates.stun && !connection.candidates.reflexive && !connection.candidates.host) {\r\n                    iceTransports = 'relay';\r\n                }\r\n            }\r\n\r\n            try {\r\n                // ref: developer.mozilla.org/en-US/docs/Web/API/RTCConfiguration\r\n                var params = {\r\n                    iceServers: connection.iceServers,\r\n                    iceTransportPolicy: connection.iceTransportPolicy || iceTransports\r\n                };\r\n\r\n                if (typeof connection.iceCandidatePoolSize !== 'undefined') {\r\n                    params.iceCandidatePoolSize = connection.iceCandidatePoolSize;\r\n                }\r\n\r\n                if (typeof connection.bundlePolicy !== 'undefined') {\r\n                    params.bundlePolicy = connection.bundlePolicy;\r\n                }\r\n\r\n                if (typeof connection.rtcpMuxPolicy !== 'undefined') {\r\n                    params.rtcpMuxPolicy = connection.rtcpMuxPolicy;\r\n                }\r\n\r\n                if (!!connection.sdpSemantics) {\r\n                    params.sdpSemantics = connection.sdpSemantics || 'unified-plan';\r\n                }\r\n\r\n                if (!connection.iceServers || !connection.iceServers.length) {\r\n                    params = null;\r\n                    connection.optionalArgument = null;\r\n                }\r\n\r\n                peer = new RTCPeerConnection(params, connection.optionalArgument);\r\n            } catch (e) {\r\n                try {\r\n                    var params = {\r\n                        iceServers: connection.iceServers\r\n                    };\r\n\r\n                    peer = new RTCPeerConnection(params);\r\n                } catch (e) {\r\n                    peer = new RTCPeerConnection();\r\n                }\r\n            }\r\n        } else {\r\n            peer = config.peerRef;\r\n        }\r\n\r\n        if (!peer.getRemoteStreams && peer.getReceivers) {\r\n            peer.getRemoteStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getReceivers().forEach(function(receiver) {\r\n                    stream.addTrack(receiver.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        if (!peer.getLocalStreams && peer.getSenders) {\r\n            peer.getLocalStreams = function() {\r\n                var stream = new MediaStream();\r\n                peer.getSenders().forEach(function(sender) {\r\n                    stream.addTrack(sender.track);\r\n                });\r\n                return [stream];\r\n            };\r\n        }\r\n\r\n        peer.onicecandidate = function(event) {\r\n            if (!event.candidate) {\r\n                if (!connection.trickleIce) {\r\n                    var localSdp = peer.localDescription;\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!connection.trickleIce) return;\r\n            config.onLocalCandidate({\r\n                candidate: event.candidate.candidate,\r\n                sdpMid: event.candidate.sdpMid,\r\n                sdpMLineIndex: event.candidate.sdpMLineIndex\r\n            });\r\n        };\r\n\r\n        localStreams.forEach(function(localStream) {\r\n            if (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.dontGetRemoteStream) {\r\n                return;\r\n            }\r\n\r\n            if (config.dontAttachLocalStream) {\r\n                return;\r\n            }\r\n\r\n            localStream = connection.beforeAddingStream(localStream, self);\r\n\r\n            if (!localStream) return;\r\n\r\n            peer.getLocalStreams().forEach(function(stream) {\r\n                if (localStream && stream.id == localStream.id) {\r\n                    localStream = null;\r\n                }\r\n            });\r\n\r\n            if (localStream && localStream.getTracks) {\r\n                localStream.getTracks().forEach(function(track) {\r\n                    try {\r\n                        // last parameter is redundant for unified-plan\r\n                        // starting from chrome version 72\r\n                        peer.addTrack(track, localStream);\r\n                    } catch (e) {}\r\n                });\r\n            }\r\n        });\r\n\r\n        peer.oniceconnectionstatechange = peer.onsignalingstatechange = function() {\r\n            var extra = self.extra;\r\n            if (connection.peers[self.userid]) {\r\n                extra = connection.peers[self.userid].extra || extra;\r\n            }\r\n\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            config.onPeerStateChanged({\r\n                iceConnectionState: peer.iceConnectionState,\r\n                iceGatheringState: peer.iceGatheringState,\r\n                signalingState: peer.signalingState,\r\n                extra: extra,\r\n                userid: self.userid\r\n            });\r\n\r\n            if (peer && peer.iceConnectionState && peer.iceConnectionState.search(/closed|failed/gi) !== -1 && self.streams instanceof Array) {\r\n                self.streams.forEach(function(stream) {\r\n                    var streamEvent = connection.streamEvents[stream.id] || {\r\n                        streamid: stream.id,\r\n                        stream: stream,\r\n                        type: 'remote'\r\n                    };\r\n\r\n                    connection.onstreamended(streamEvent);\r\n                });\r\n            }\r\n        };\r\n\r\n        var sdpConstraints = {\r\n            OfferToReceiveAudio: !!localStreams.length,\r\n            OfferToReceiveVideo: !!localStreams.length\r\n        };\r\n\r\n        if (config.localPeerSdpConstraints) sdpConstraints = config.localPeerSdpConstraints;\r\n\r\n        defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n\r\n        var streamObject;\r\n        var dontDuplicate = {};\r\n\r\n        peer.ontrack = function(event) {\r\n            if (!event || event.type !== 'track') return;\r\n\r\n            event.stream = event.streams[event.streams.length - 1];\r\n\r\n            if (!event.stream.id) {\r\n                event.stream.id = event.track.id;\r\n            }\r\n\r\n            if (dontDuplicate[event.stream.id] && DetectRTC.browser.name !== 'Safari') {\r\n                if (event.track) {\r\n                    event.track.onended = function() { // event.track.onmute = \r\n                        peer && peer.onremovestream(event);\r\n                    };\r\n                }\r\n                return;\r\n            }\r\n\r\n            dontDuplicate[event.stream.id] = event.stream.id;\r\n\r\n            var streamsToShare = {};\r\n            if (config.remoteSdp && config.remoteSdp.streamsToShare) {\r\n                streamsToShare = config.remoteSdp.streamsToShare;\r\n            } else if (config.streamsToShare) {\r\n                streamsToShare = config.streamsToShare;\r\n            }\r\n\r\n            var streamToShare = streamsToShare[event.stream.id];\r\n            if (streamToShare) {\r\n                event.stream.isAudio = streamToShare.isAudio;\r\n                event.stream.isVideo = streamToShare.isVideo;\r\n                event.stream.isScreen = streamToShare.isScreen;\r\n            } else {\r\n                event.stream.isVideo = !!getTracks(event.stream, 'video').length;\r\n                event.stream.isAudio = !event.stream.isVideo;\r\n                event.stream.isScreen = false;\r\n            }\r\n\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            allRemoteStreams[event.stream.id] = event.stream;\r\n            config.onRemoteStream(event.stream);\r\n\r\n            event.stream.getTracks().forEach(function(track) {\r\n                track.onended = function() { // track.onmute = \r\n                    peer && peer.onremovestream(event);\r\n                };\r\n            });\r\n\r\n            event.stream.onremovetrack = function() {\r\n                peer && peer.onremovestream(event);\r\n            };\r\n        };\r\n\r\n        peer.onremovestream = function(event) {\r\n            // this event doesn't works anymore\r\n            event.stream.streamid = event.stream.id;\r\n\r\n            if (allRemoteStreams[event.stream.id]) {\r\n                delete allRemoteStreams[event.stream.id];\r\n            }\r\n\r\n            config.onRemoteStreamRemoved(event.stream);\r\n        };\r\n\r\n        if (typeof peer.removeStream !== 'function') {\r\n            // removeStream backward compatibility\r\n            peer.removeStream = function(stream) {\r\n                stream.getTracks().forEach(function(track) {\r\n                    peer.removeTrack(track, stream);\r\n                });\r\n            };\r\n        }\r\n\r\n        this.addRemoteCandidate = function(remoteCandidate) {\r\n            peer.addIceCandidate(new RTCIceCandidate(remoteCandidate));\r\n        };\r\n\r\n        function oldAddRemoteSdp(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp), cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        }\r\n\r\n        this.addRemoteSdp = function(remoteSdp, cb) {\r\n            cb = cb || function() {};\r\n\r\n            if (DetectRTC.browser.name !== 'Safari') {\r\n                remoteSdp.sdp = connection.processSdp(remoteSdp.sdp);\r\n            }\r\n\r\n            peer.setRemoteDescription(new RTCSessionDescription(remoteSdp)).then(cb, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            }).catch(function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('setRemoteDescription failed', '\\n', error, '\\n', remoteSdp.sdp);\r\n                }\r\n\r\n                cb();\r\n            });\r\n        };\r\n\r\n        var isOfferer = true;\r\n\r\n        if (config.remoteSdp) {\r\n            isOfferer = false;\r\n        }\r\n\r\n        this.createDataChannel = function() {\r\n            var channel = peer.createDataChannel('sctp', {});\r\n            setChannelEvents(channel);\r\n        };\r\n\r\n        if (connection.session.data === true && !renegotiatingPeer) {\r\n            if (!isOfferer) {\r\n                peer.ondatachannel = function(event) {\r\n                    var channel = event.channel;\r\n                    setChannelEvents(channel);\r\n                };\r\n            } else {\r\n                this.createDataChannel();\r\n            }\r\n        }\r\n\r\n        this.enableDisableVideoEncoding = function(enable) {\r\n            var rtcp;\r\n            peer.getSenders().forEach(function(sender) {\r\n                if (!rtcp && sender.track.kind === 'video') {\r\n                    rtcp = sender;\r\n                }\r\n            });\r\n\r\n            if (!rtcp || !rtcp.getParameters) return;\r\n\r\n            var parameters = rtcp.getParameters();\r\n            parameters.encodings[1] && (parameters.encodings[1].active = !!enable);\r\n            parameters.encodings[2] && (parameters.encodings[2].active = !!enable);\r\n            rtcp.setParameters(parameters);\r\n        };\r\n\r\n        if (config.remoteSdp) {\r\n            if (config.remoteSdp.remotePeerSdpConstraints) {\r\n                sdpConstraints = config.remoteSdp.remotePeerSdpConstraints;\r\n            }\r\n            defaults.sdpConstraints = setSdpConstraints(sdpConstraints);\r\n            this.addRemoteSdp(config.remoteSdp, function() {\r\n                createOfferOrAnswer('createAnswer');\r\n            });\r\n        }\r\n\r\n        function setChannelEvents(channel) {\r\n            // force ArrayBuffer in Firefox; which uses \"Blob\" by default.\r\n            channel.binaryType = 'arraybuffer';\r\n\r\n            channel.onmessage = function(event) {\r\n                config.onDataChannelMessage(event.data);\r\n            };\r\n\r\n            channel.onopen = function() {\r\n                config.onDataChannelOpened(channel);\r\n            };\r\n\r\n            channel.onerror = function(error) {\r\n                config.onDataChannelError(error);\r\n            };\r\n\r\n            channel.onclose = function(event) {\r\n                config.onDataChannelClosed(event);\r\n            };\r\n\r\n            channel.internalSend = channel.send;\r\n            channel.send = function(data) {\r\n                if (channel.readyState !== 'open') {\r\n                    return;\r\n                }\r\n\r\n                channel.internalSend(data);\r\n            };\r\n\r\n            peer.channel = channel;\r\n        }\r\n\r\n        if (connection.session.audio == 'two-way' || connection.session.video == 'two-way' || connection.session.screen == 'two-way') {\r\n            defaults.sdpConstraints = setSdpConstraints({\r\n                OfferToReceiveAudio: connection.session.audio == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio),\r\n                OfferToReceiveVideo: connection.session.video == 'two-way' || connection.session.screen == 'two-way' || (config.remoteSdp && config.remoteSdp.remotePeerSdpConstraints && config.remoteSdp.remotePeerSdpConstraints.OfferToReceiveAudio)\r\n            });\r\n        }\r\n\r\n        var streamsToShare = {};\r\n        peer.getLocalStreams().forEach(function(stream) {\r\n            streamsToShare[stream.streamid] = {\r\n                isAudio: !!stream.isAudio,\r\n                isVideo: !!stream.isVideo,\r\n                isScreen: !!stream.isScreen\r\n            };\r\n        });\r\n\r\n        function oldCreateOfferOrAnswer(_method) {\r\n            peer[_method](function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp, function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!!connection.enableLogs) {\r\n                        console.error('setLocalDescription-error', error);\r\n                    }\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-' + _method + '-error', error);\r\n                }\r\n            }, defaults.sdpConstraints);\r\n        }\r\n\r\n        function createOfferOrAnswer(_method) {\r\n            peer[_method](defaults.sdpConstraints).then(function(localSdp) {\r\n                if (DetectRTC.browser.name !== 'Safari') {\r\n                    localSdp.sdp = connection.processSdp(localSdp.sdp);\r\n                }\r\n                peer.setLocalDescription(localSdp).then(function() {\r\n                    if (!connection.trickleIce) return;\r\n\r\n                    config.onLocalSdp({\r\n                        type: localSdp.type,\r\n                        sdp: localSdp.sdp,\r\n                        remotePeerSdpConstraints: config.remotePeerSdpConstraints || false,\r\n                        renegotiatingPeer: !!config.renegotiatingPeer || false,\r\n                        connectionDescription: self.connectionDescription,\r\n                        dontGetRemoteStream: !!config.dontGetRemoteStream,\r\n                        extra: connection ? connection.extra : {},\r\n                        streamsToShare: streamsToShare\r\n                    });\r\n\r\n                    connection.onSettingLocalDescription(self);\r\n                }, function(error) {\r\n                    if (!connection.enableLogs) return;\r\n                    console.error('setLocalDescription error', error);\r\n                });\r\n            }, function(error) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('sdp-error', error);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (isOfferer) {\r\n            createOfferOrAnswer('createOffer');\r\n        }\r\n\r\n        peer.nativeClose = peer.close;\r\n        peer.close = function() {\r\n            if (!peer) {\r\n                return;\r\n            }\r\n\r\n            try {\r\n                if (peer.nativeClose !== peer.close) {\r\n                    peer.nativeClose();\r\n                }\r\n            } catch (e) {}\r\n\r\n            peer = null;\r\n            self.peer = null;\r\n        };\r\n\r\n        this.peer = peer;\r\n    }\r\n\r\n    // CodecsHandler.js\r\n\r\n    var CodecsHandler = (function() {\r\n        function preferCodec(sdp, codecName) {\r\n            var info = splitLines(sdp);\r\n\r\n            if (!info.videoCodecNumbers) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp8' && info.vp8LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'vp9' && info.vp9LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            if (codecName === 'h264' && info.h264LineNumber === info.videoCodecNumbers[0]) {\r\n                return sdp;\r\n            }\r\n\r\n            sdp = preferCodecHelper(sdp, codecName, info);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function preferCodecHelper(sdp, codec, info, ignore) {\r\n            var preferCodecNumber = '';\r\n\r\n            if (codec === 'vp8') {\r\n                if (!info.vp8LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp8LineNumber;\r\n            }\r\n\r\n            if (codec === 'vp9') {\r\n                if (!info.vp9LineNumber) {\r\n                    return sdp;\r\n                }\r\n                preferCodecNumber = info.vp9LineNumber;\r\n            }\r\n\r\n            if (codec === 'h264') {\r\n                if (!info.h264LineNumber) {\r\n                    return sdp;\r\n                }\r\n\r\n                preferCodecNumber = info.h264LineNumber;\r\n            }\r\n\r\n            var newLine = info.videoCodecNumbersOriginal.split('SAVPF')[0] + 'SAVPF ';\r\n\r\n            var newOrder = [preferCodecNumber];\r\n\r\n            if (ignore) {\r\n                newOrder = [];\r\n            }\r\n\r\n            info.videoCodecNumbers.forEach(function(codecNumber) {\r\n                if (codecNumber === preferCodecNumber) return;\r\n                newOrder.push(codecNumber);\r\n            });\r\n\r\n            newLine += newOrder.join(' ');\r\n\r\n            sdp = sdp.replace(info.videoCodecNumbersOriginal, newLine);\r\n            return sdp;\r\n        }\r\n\r\n        function splitLines(sdp) {\r\n            var info = {};\r\n            sdp.split('\\n').forEach(function(line) {\r\n                if (line.indexOf('m=video') === 0) {\r\n                    info.videoCodecNumbers = [];\r\n                    line.split('SAVPF')[1].split(' ').forEach(function(codecNumber) {\r\n                        codecNumber = codecNumber.trim();\r\n                        if (!codecNumber || !codecNumber.length) return;\r\n                        info.videoCodecNumbers.push(codecNumber);\r\n                        info.videoCodecNumbersOriginal = line;\r\n                    });\r\n                }\r\n\r\n                if (line.indexOf('VP8/90000') !== -1 && !info.vp8LineNumber) {\r\n                    info.vp8LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('VP9/90000') !== -1 && !info.vp9LineNumber) {\r\n                    info.vp9LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n\r\n                if (line.indexOf('H264/90000') !== -1 && !info.h264LineNumber) {\r\n                    info.h264LineNumber = line.replace('a=rtpmap:', '').split(' ')[0];\r\n                }\r\n            });\r\n\r\n            return info;\r\n        }\r\n\r\n        function removeVPX(sdp) {\r\n            var info = splitLines(sdp);\r\n\r\n            // last parameter below means: ignore these codecs\r\n            sdp = preferCodecHelper(sdp, 'vp9', info, true);\r\n            sdp = preferCodecHelper(sdp, 'vp8', info, true);\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function disableNACK(sdp) {\r\n            if (!sdp || typeof sdp !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:126 nack pli\\r\\n', 'a=rtcp-fb:126 pli\\r\\n');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack\\r\\n', '');\r\n            sdp = sdp.replace('a=rtcp-fb:97 nack pli\\r\\n', 'a=rtcp-fb:97 pli\\r\\n');\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function prioritize(codecMimeType, peer) {\r\n            if (!peer || !peer.getSenders || !peer.getSenders().length) {\r\n                return;\r\n            }\r\n\r\n            if (!codecMimeType || typeof codecMimeType !== 'string') {\r\n                throw 'Invalid arguments.';\r\n            }\r\n\r\n            peer.getSenders().forEach(function(sender) {\r\n                var params = sender.getParameters();\r\n                for (var i = 0; i < params.codecs.length; i++) {\r\n                    if (params.codecs[i].mimeType == codecMimeType) {\r\n                        params.codecs.unshift(params.codecs.splice(i, 1));\r\n                        break;\r\n                    }\r\n                }\r\n                sender.setParameters(params);\r\n            });\r\n        }\r\n\r\n        function removeNonG722(sdp) {\r\n            return sdp.replace(/m=audio ([0-9]+) RTP\\/SAVPF ([0-9 ]*)/g, 'm=audio $1 RTP\\/SAVPF 9');\r\n        }\r\n\r\n        function setBAS(sdp, bandwidth, isScreen) {\r\n            if (!bandwidth) {\r\n                return sdp;\r\n            }\r\n\r\n            if (typeof isFirefox !== 'undefined' && isFirefox) {\r\n                return sdp;\r\n            }\r\n\r\n            if (isScreen) {\r\n                if (!bandwidth.screen) {\r\n                    console.warn('It seems that you are not using bandwidth for screen. Screen sharing is expected to fail.');\r\n                } else if (bandwidth.screen < 300) {\r\n                    console.warn('It seems that you are using wrong bandwidth value for screen. Screen sharing is expected to fail.');\r\n                }\r\n            }\r\n\r\n            // if screen; must use at least 300kbs\r\n            if (bandwidth.screen && isScreen) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            }\r\n\r\n            // remove existing bandwidth lines\r\n            if (bandwidth.audio || bandwidth.video) {\r\n                sdp = sdp.replace(/b=AS([^\\r\\n]+\\r\\n)/g, '');\r\n            }\r\n\r\n            if (bandwidth.audio) {\r\n                sdp = sdp.replace(/a=mid:audio\\r\\n/g, 'a=mid:audio\\r\\nb=AS:' + bandwidth.audio + '\\r\\n');\r\n            }\r\n\r\n            if (bandwidth.screen) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.screen + '\\r\\n');\r\n            } else if (bandwidth.video) {\r\n                sdp = sdp.replace(/a=mid:video\\r\\n/g, 'a=mid:video\\r\\nb=AS:' + bandwidth.video + '\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        // Find the line in sdpLines that starts with |prefix|, and, if specified,\r\n        // contains |substr| (case-insensitive search).\r\n        function findLine(sdpLines, prefix, substr) {\r\n            return findLineInRange(sdpLines, 0, -1, prefix, substr);\r\n        }\r\n\r\n        // Find the line in sdpLines[startLine...endLine - 1] that starts with |prefix|\r\n        // and, if specified, contains |substr| (case-insensitive search).\r\n        function findLineInRange(sdpLines, startLine, endLine, prefix, substr) {\r\n            var realEndLine = endLine !== -1 ? endLine : sdpLines.length;\r\n            for (var i = startLine; i < realEndLine; ++i) {\r\n                if (sdpLines[i].indexOf(prefix) === 0) {\r\n                    if (!substr ||\r\n                        sdpLines[i].toLowerCase().indexOf(substr.toLowerCase()) !== -1) {\r\n                        return i;\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Gets the codec payload type from an a=rtpmap:X line.\r\n        function getCodecPayloadType(sdpLine) {\r\n            var pattern = new RegExp('a=rtpmap:(\\\\d+) \\\\w+\\\\/\\\\d+');\r\n            var result = sdpLine.match(pattern);\r\n            return (result && result.length === 2) ? result[1] : null;\r\n        }\r\n\r\n        function setVideoBitrates(sdp, params) {\r\n            params = params || {};\r\n            var xgoogle_min_bitrate = params.min;\r\n            var xgoogle_max_bitrate = params.max;\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // VP8\r\n            var vp8Index = findLine(sdpLines, 'a=rtpmap', 'VP8/90000');\r\n            var vp8Payload;\r\n            if (vp8Index) {\r\n                vp8Payload = getCodecPayloadType(sdpLines[vp8Index]);\r\n            }\r\n\r\n            if (!vp8Payload) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxIndex = findLine(sdpLines, 'a=rtpmap', 'rtx/90000');\r\n            var rtxPayload;\r\n            if (rtxIndex) {\r\n                rtxPayload = getCodecPayloadType(sdpLines[rtxIndex]);\r\n            }\r\n\r\n            if (!rtxIndex) {\r\n                return sdp;\r\n            }\r\n\r\n            var rtxFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + rtxPayload.toString());\r\n            if (rtxFmtpLineIndex !== null) {\r\n                var appendrtxNext = '\\r\\n';\r\n                appendrtxNext += 'a=fmtp:' + vp8Payload + ' x-google-min-bitrate=' + (xgoogle_min_bitrate || '228') + '; x-google-max-bitrate=' + (xgoogle_max_bitrate || '228');\r\n                sdpLines[rtxFmtpLineIndex] = sdpLines[rtxFmtpLineIndex].concat(appendrtxNext);\r\n                sdp = sdpLines.join('\\r\\n');\r\n            }\r\n\r\n            return sdp;\r\n        }\r\n\r\n        function setOpusAttributes(sdp, params) {\r\n            params = params || {};\r\n\r\n            var sdpLines = sdp.split('\\r\\n');\r\n\r\n            // Opus\r\n            var opusIndex = findLine(sdpLines, 'a=rtpmap', 'opus/48000');\r\n            var opusPayload;\r\n            if (opusIndex) {\r\n                opusPayload = getCodecPayloadType(sdpLines[opusIndex]);\r\n            }\r\n\r\n            if (!opusPayload) {\r\n                return sdp;\r\n            }\r\n\r\n            var opusFmtpLineIndex = findLine(sdpLines, 'a=fmtp:' + opusPayload.toString());\r\n            if (opusFmtpLineIndex === null) {\r\n                return sdp;\r\n            }\r\n\r\n            var appendOpusNext = '';\r\n            appendOpusNext += '; stereo=' + (typeof params.stereo != 'undefined' ? params.stereo : '1');\r\n            appendOpusNext += '; sprop-stereo=' + (typeof params['sprop-stereo'] != 'undefined' ? params['sprop-stereo'] : '1');\r\n\r\n            if (typeof params.maxaveragebitrate != 'undefined') {\r\n                appendOpusNext += '; maxaveragebitrate=' + (params.maxaveragebitrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.maxplaybackrate != 'undefined') {\r\n                appendOpusNext += '; maxplaybackrate=' + (params.maxplaybackrate || 128 * 1024 * 8);\r\n            }\r\n\r\n            if (typeof params.cbr != 'undefined') {\r\n                appendOpusNext += '; cbr=' + (typeof params.cbr != 'undefined' ? params.cbr : '1');\r\n            }\r\n\r\n            if (typeof params.useinbandfec != 'undefined') {\r\n                appendOpusNext += '; useinbandfec=' + params.useinbandfec;\r\n            }\r\n\r\n            if (typeof params.usedtx != 'undefined') {\r\n                appendOpusNext += '; usedtx=' + params.usedtx;\r\n            }\r\n\r\n            if (typeof params.maxptime != 'undefined') {\r\n                appendOpusNext += '\\r\\na=maxptime:' + params.maxptime;\r\n            }\r\n\r\n            sdpLines[opusFmtpLineIndex] = sdpLines[opusFmtpLineIndex].concat(appendOpusNext);\r\n\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        // forceStereoAudio => via webrtcexample.com\r\n        // requires getUserMedia => echoCancellation:false\r\n        function forceStereoAudio(sdp) {\r\n            var sdpLines = sdp.split('\\r\\n');\r\n            var fmtpLineIndex = null;\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('opus/48000') !== -1) {\r\n                    var opusPayload = extractSdp(sdpLines[i], /:(\\d+) opus\\/48000/i);\r\n                    break;\r\n                }\r\n            }\r\n            for (var i = 0; i < sdpLines.length; i++) {\r\n                if (sdpLines[i].search('a=fmtp') !== -1) {\r\n                    var payload = extractSdp(sdpLines[i], /a=fmtp:(\\d+)/);\r\n                    if (payload === opusPayload) {\r\n                        fmtpLineIndex = i;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (fmtpLineIndex === null) return sdp;\r\n            sdpLines[fmtpLineIndex] = sdpLines[fmtpLineIndex].concat('; stereo=1; sprop-stereo=1');\r\n            sdp = sdpLines.join('\\r\\n');\r\n            return sdp;\r\n        }\r\n\r\n        return {\r\n            removeVPX: removeVPX,\r\n            disableNACK: disableNACK,\r\n            prioritize: prioritize,\r\n            removeNonG722: removeNonG722,\r\n            setApplicationSpecificBandwidth: function(sdp, bandwidth, isScreen) {\r\n                return setBAS(sdp, bandwidth, isScreen);\r\n            },\r\n            setVideoBitrates: function(sdp, params) {\r\n                return setVideoBitrates(sdp, params);\r\n            },\r\n            setOpusAttributes: function(sdp, params) {\r\n                return setOpusAttributes(sdp, params);\r\n            },\r\n            preferVP9: function(sdp) {\r\n                return preferCodec(sdp, 'vp9');\r\n            },\r\n            preferCodec: preferCodec,\r\n            forceStereoAudio: forceStereoAudio\r\n        };\r\n    })();\r\n\r\n    // backward compatibility\r\n    window.BandwidthHandler = CodecsHandler;\r\n\r\n    // OnIceCandidateHandler.js\r\n\r\n    var OnIceCandidateHandler = (function() {\r\n        function processCandidates(connection, icePair) {\r\n            var candidate = icePair.candidate;\r\n\r\n            var iceRestrictions = connection.candidates;\r\n            var stun = iceRestrictions.stun;\r\n            var turn = iceRestrictions.turn;\r\n\r\n            if (!isNull(iceRestrictions.reflexive)) {\r\n                stun = iceRestrictions.reflexive;\r\n            }\r\n\r\n            if (!isNull(iceRestrictions.relay)) {\r\n                turn = iceRestrictions.relay;\r\n            }\r\n\r\n            if (!iceRestrictions.host && !!candidate.match(/typ host/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!turn && !!candidate.match(/typ relay/g)) {\r\n                return;\r\n            }\r\n\r\n            if (!stun && !!candidate.match(/typ srflx/g)) {\r\n                return;\r\n            }\r\n\r\n            var protocol = connection.iceProtocols;\r\n\r\n            if (!protocol.udp && !!candidate.match(/ udp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (!protocol.tcp && !!candidate.match(/ tcp /g)) {\r\n                return;\r\n            }\r\n\r\n            if (connection.enableLogs) {\r\n                console.debug('Your candidate pairs:', candidate);\r\n            }\r\n\r\n            return {\r\n                candidate: candidate,\r\n                sdpMid: icePair.sdpMid,\r\n                sdpMLineIndex: icePair.sdpMLineIndex\r\n            };\r\n        }\r\n\r\n        return {\r\n            processCandidates: processCandidates\r\n        };\r\n    })();\r\n\r\n    // IceServersHandler.js\r\n\r\n    var IceServersHandler = (function() {\r\n        function getIceServers(connection) {\r\n            // resiprocate: 3344+4433\r\n            // pions: 7575\r\n            var iceServers = [{\r\n                'urls': [\r\n                    'stun:stun.l.google.com:19302',\r\n                    'stun:stun1.l.google.com:19302',\r\n                    'stun:stun2.l.google.com:19302',\r\n                    'stun:stun.l.google.com:19302?transport=udp',\r\n                ]\r\n            }];\r\n\r\n            return iceServers;\r\n        }\r\n\r\n        return {\r\n            getIceServers: getIceServers\r\n        };\r\n    })();\r\n\r\n    // getUserMediaHandler.js\r\n\r\n    function setStreamType(constraints, stream) {\r\n        if (constraints.mandatory && constraints.mandatory.chromeMediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.mozMediaSource || constraints.mediaSource) {\r\n            stream.isScreen = true;\r\n        } else if (constraints.video) {\r\n            stream.isVideo = true;\r\n        } else if (constraints.audio) {\r\n            stream.isAudio = true;\r\n        }\r\n    }\r\n\r\n    // allow users to manage this object (to support re-capturing of screen/etc.)\r\n    window.currentUserMediaRequest = {\r\n        streams: [],\r\n        mutex: false,\r\n        queueRequests: [],\r\n        remove: function(idInstance) {\r\n            this.mutex = false;\r\n\r\n            var stream = this.streams[idInstance];\r\n            if (!stream) {\r\n                return;\r\n            }\r\n\r\n            stream = stream.stream;\r\n\r\n            var options = stream.currentUserMediaRequestOptions;\r\n\r\n            if (this.queueRequests.indexOf(options)) {\r\n                delete this.queueRequests[this.queueRequests.indexOf(options)];\r\n                this.queueRequests = removeNullEntries(this.queueRequests);\r\n            }\r\n\r\n            this.streams[idInstance].stream = null;\r\n            delete this.streams[idInstance];\r\n        }\r\n    };\r\n\r\n    function getUserMediaHandler(options) {\r\n        if (currentUserMediaRequest.mutex === true) {\r\n            currentUserMediaRequest.queueRequests.push(options);\r\n            return;\r\n        }\r\n        currentUserMediaRequest.mutex = true;\r\n\r\n        // easy way to match\r\n        var idInstance = JSON.stringify(options.localMediaConstraints);\r\n\r\n        function streaming(stream, returnBack) {\r\n            setStreamType(options.localMediaConstraints, stream);\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                delete currentUserMediaRequest.streams[idInstance];\r\n\r\n                currentUserMediaRequest.mutex = false;\r\n                if (currentUserMediaRequest.queueRequests.indexOf(options)) {\r\n                    delete currentUserMediaRequest.queueRequests[currentUserMediaRequest.queueRequests.indexOf(options)];\r\n                    currentUserMediaRequest.queueRequests = removeNullEntries(currentUserMediaRequest.queueRequests);\r\n                }\r\n            }, false);\r\n\r\n            currentUserMediaRequest.streams[idInstance] = {\r\n                stream: stream\r\n            };\r\n            currentUserMediaRequest.mutex = false;\r\n\r\n            if (currentUserMediaRequest.queueRequests.length) {\r\n                getUserMediaHandler(currentUserMediaRequest.queueRequests.shift());\r\n            }\r\n\r\n            // callback\r\n            options.onGettingLocalMedia(stream, returnBack);\r\n        }\r\n\r\n        if (currentUserMediaRequest.streams[idInstance]) {\r\n            streaming(currentUserMediaRequest.streams[idInstance].stream, true);\r\n        } else {\r\n            var isBlackBerry = !!(/BB10|BlackBerry/i.test(navigator.userAgent || ''));\r\n            if (isBlackBerry || typeof navigator.mediaDevices === 'undefined' || typeof navigator.mediaDevices.getUserMedia !== 'function') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                navigator.getUserMedia(options.localMediaConstraints, function(stream) {\r\n                    stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                    stream.idInstance = idInstance;\r\n                    streaming(stream);\r\n                }, function(error) {\r\n                    options.onLocalMediaError(error, options.localMediaConstraints);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (typeof navigator.mediaDevices === 'undefined') {\r\n                navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\r\n                var getUserMediaSuccess = function() {};\r\n                var getUserMediaFailure = function() {};\r\n\r\n                var getUserMediaStream, getUserMediaError;\r\n                navigator.mediaDevices = {\r\n                    getUserMedia: function(hints) {\r\n                        navigator.getUserMedia(hints, function(getUserMediaSuccess) {\r\n                            getUserMediaSuccess(stream);\r\n                            getUserMediaStream = stream;\r\n                        }, function(error) {\r\n                            getUserMediaFailure(error);\r\n                            getUserMediaError = error;\r\n                        });\r\n\r\n                        return {\r\n                            then: function(successCB) {\r\n                                if (getUserMediaStream) {\r\n                                    successCB(getUserMediaStream);\r\n                                    return;\r\n                                }\r\n\r\n                                getUserMediaSuccess = successCB;\r\n\r\n                                return {\r\n                                    then: function(failureCB) {\r\n                                        if (getUserMediaError) {\r\n                                            failureCB(getUserMediaError);\r\n                                            return;\r\n                                        }\r\n\r\n                                        getUserMediaFailure = failureCB;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            if (options.localMediaConstraints.isScreen === true) {\r\n                if (navigator.mediaDevices.getDisplayMedia) {\r\n                    navigator.mediaDevices.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else if (navigator.getDisplayMedia) {\r\n                    navigator.getDisplayMedia(options.localMediaConstraints).then(function(stream) {\r\n                        stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                        stream.idInstance = idInstance;\r\n\r\n                        streaming(stream);\r\n                    }).catch(function(error) {\r\n                        options.onLocalMediaError(error, options.localMediaConstraints);\r\n                    });\r\n                } else {\r\n                    throw new Error('getDisplayMedia API is not availabe in this browser.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            navigator.mediaDevices.getUserMedia(options.localMediaConstraints).then(function(stream) {\r\n                stream.streamid = stream.streamid || stream.id || getRandomString();\r\n                stream.idInstance = idInstance;\r\n\r\n                streaming(stream);\r\n            }).catch(function(error) {\r\n                options.onLocalMediaError(error, options.localMediaConstraints);\r\n            });\r\n        }\r\n    }\r\n\r\n    // StreamsHandler.js\r\n\r\n    var StreamsHandler = (function() {\r\n        function handleType(type) {\r\n            if (!type) {\r\n                return;\r\n            }\r\n\r\n            if (typeof type === 'string' || typeof type === 'undefined') {\r\n                return type;\r\n            }\r\n\r\n            if (type.audio && type.video) {\r\n                return null;\r\n            }\r\n\r\n            if (type.audio) {\r\n                return 'audio';\r\n            }\r\n\r\n            if (type.video) {\r\n                return 'video';\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        function setHandlers(stream, syncAction, connection) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                var streamEndedEvent = 'ended';\r\n\r\n                if ('oninactive' in stream) {\r\n                    streamEndedEvent = 'inactive';\r\n                }\r\n\r\n                stream.addEventListener(streamEndedEvent, function() {\r\n                    StreamsHandler.onSyncNeeded(this.streamid, streamEndedEvent);\r\n                }, false);\r\n            }\r\n\r\n            stream.mute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = false;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = true;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'mute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].muteType = type || 'both';\r\n\r\n                fireEvent(stream, 'mute', type);\r\n            };\r\n\r\n            stream.unmute = function(type, isSyncAction) {\r\n                type = handleType(type);\r\n\r\n                if (typeof isSyncAction !== 'undefined') {\r\n                    syncAction = isSyncAction;\r\n                }\r\n\r\n                graduallyIncreaseVolume();\r\n\r\n                if (typeof type == 'undefined' || type == 'audio') {\r\n                    getTracks(stream, 'audio').forEach(function(track) {\r\n                        track.enabled = true;\r\n                        connection.streamEvents[stream.streamid].isAudioMuted = false;\r\n                    });\r\n                }\r\n\r\n                if (typeof type == 'undefined' || type == 'video') {\r\n                    getTracks(stream, 'video').forEach(function(track) {\r\n                        track.enabled = true;\r\n                    });\r\n\r\n                    // make sure that video unmute doesn't affects audio\r\n                    if (typeof type !== 'undefined' && type == 'video' && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                        (function looper(times) {\r\n                            if (!times) {\r\n                                times = 0;\r\n                            }\r\n\r\n                            times++;\r\n\r\n                            // check until five-seconds\r\n                            if (times < 100 && connection.streamEvents[stream.streamid].isAudioMuted) {\r\n                                stream.mute('audio');\r\n\r\n                                setTimeout(function() {\r\n                                    looper(times);\r\n                                }, 50);\r\n                            }\r\n                        })();\r\n                    }\r\n                }\r\n\r\n                if (typeof syncAction == 'undefined' || syncAction == true) {\r\n                    StreamsHandler.onSyncNeeded(stream.streamid, 'unmute', type);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid].unmuteType = type || 'both';\r\n\r\n                fireEvent(stream, 'unmute', type);\r\n            };\r\n\r\n            function graduallyIncreaseVolume() {\r\n                if (!connection.streamEvents[stream.streamid].mediaElement) {\r\n                    return;\r\n                }\r\n\r\n                var mediaElement = connection.streamEvents[stream.streamid].mediaElement;\r\n                mediaElement.volume = 0;\r\n                afterEach(200, 5, function() {\r\n                    try {\r\n                        mediaElement.volume += .20;\r\n                    } catch (e) {\r\n                        mediaElement.volume = 1;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        function afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes) {\r\n            startedTimes = (startedTimes || 0) + 1;\r\n            if (startedTimes >= numberOfTimes) return;\r\n\r\n            setTimeout(function() {\r\n                callback();\r\n                afterEach(setTimeoutInteval, numberOfTimes, callback, startedTimes);\r\n            }, setTimeoutInteval);\r\n        }\r\n\r\n        return {\r\n            setHandlers: setHandlers,\r\n            onSyncNeeded: function(streamid, action, type) {}\r\n        };\r\n    })();\r\n\r\n    // TextReceiver.js & TextSender.js\r\n\r\n    function TextReceiver(connection) {\r\n        var content = {};\r\n\r\n        function receive(data, userid, extra) {\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = data.uuid;\r\n            if (!content[uuid]) {\r\n                content[uuid] = [];\r\n            }\r\n\r\n            content[uuid].push(data.message);\r\n\r\n            if (data.last) {\r\n                var message = content[uuid].join('');\r\n                if (data.isobject) {\r\n                    message = JSON.parse(message);\r\n                }\r\n\r\n                // latency detection\r\n                var receivingTime = new Date().getTime();\r\n                var latency = receivingTime - data.sendingTime;\r\n\r\n                var e = {\r\n                    data: message,\r\n                    userid: userid,\r\n                    extra: extra,\r\n                    latency: latency\r\n                };\r\n\r\n                if (connection.autoTranslateText) {\r\n                    e.original = e.data;\r\n                    connection.Translator.TranslateText(e.data, function(translatedText) {\r\n                        e.data = translatedText;\r\n                        connection.onmessage(e);\r\n                    });\r\n                } else {\r\n                    connection.onmessage(e);\r\n                }\r\n\r\n                delete content[uuid];\r\n            }\r\n        }\r\n\r\n        return {\r\n            receive: receive\r\n        };\r\n    }\r\n\r\n    // TextSender.js\r\n    var TextSender = {\r\n        send: function(config) {\r\n            var connection = config.connection;\r\n\r\n            var channel = config.channel,\r\n                remoteUserId = config.remoteUserId,\r\n                initialText = config.text,\r\n                packetSize = connection.chunkSize || 1000,\r\n                textToTransfer = '',\r\n                isobject = false;\r\n\r\n            if (!isString(initialText)) {\r\n                isobject = true;\r\n                initialText = JSON.stringify(initialText);\r\n            }\r\n\r\n            // uuid is used to uniquely identify sending instance\r\n            var uuid = getRandomString();\r\n            var sendingTime = new Date().getTime();\r\n\r\n            sendText(initialText);\r\n\r\n            function sendText(textMessage, text) {\r\n                var data = {\r\n                    type: 'text',\r\n                    uuid: uuid,\r\n                    sendingTime: sendingTime\r\n                };\r\n\r\n                if (textMessage) {\r\n                    text = textMessage;\r\n                    data.packets = parseInt(text.length / packetSize);\r\n                }\r\n\r\n                if (text.length > packetSize) {\r\n                    data.message = text.slice(0, packetSize);\r\n                } else {\r\n                    data.message = text;\r\n                    data.last = true;\r\n                    data.isobject = isobject;\r\n                }\r\n\r\n                channel.send(data, remoteUserId);\r\n\r\n                textToTransfer = text.slice(data.message.length);\r\n\r\n                if (textToTransfer.length) {\r\n                    setTimeout(function() {\r\n                        sendText(null, textToTransfer);\r\n                    }, connection.chunkInterval || 100);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // FileProgressBarHandler.js\r\n\r\n    var FileProgressBarHandler = (function() {\r\n        function handle(connection) {\r\n            var progressHelper = {};\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileStart/\r\n            connection.onFileStart = function(file) {\r\n                var div = document.createElement('div');\r\n                div.title = file.name;\r\n                div.innerHTML = '<label>0%</label> <progress></progress>';\r\n\r\n                if (file.remoteUserId) {\r\n                    div.innerHTML += ' (Sharing with:' + file.remoteUserId + ')';\r\n                }\r\n\r\n                if (!connection.filesContainer) {\r\n                    connection.filesContainer = document.body || document.documentElement;\r\n                }\r\n\r\n                connection.filesContainer.insertBefore(div, connection.filesContainer.firstChild);\r\n\r\n                if (!file.remoteUserId) {\r\n                    progressHelper[file.uuid] = {\r\n                        div: div,\r\n                        progress: div.querySelector('progress'),\r\n                        label: div.querySelector('label')\r\n                    };\r\n                    progressHelper[file.uuid].progress.max = file.maxChunks;\r\n                    return;\r\n                }\r\n\r\n                if (!progressHelper[file.uuid]) {\r\n                    progressHelper[file.uuid] = {};\r\n                }\r\n\r\n                progressHelper[file.uuid][file.remoteUserId] = {\r\n                    div: div,\r\n                    progress: div.querySelector('progress'),\r\n                    label: div.querySelector('label')\r\n                };\r\n                progressHelper[file.uuid][file.remoteUserId].progress.max = file.maxChunks;\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileProgress/\r\n            connection.onFileProgress = function(chunk) {\r\n                var helper = progressHelper[chunk.uuid];\r\n                if (!helper) {\r\n                    return;\r\n                }\r\n                if (chunk.remoteUserId) {\r\n                    helper = progressHelper[chunk.uuid][chunk.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                helper.progress.value = chunk.currentPosition || chunk.maxChunks || helper.progress.max;\r\n                updateLabel(helper.progress, helper.label);\r\n            };\r\n\r\n            // www.RTCMultiConnection.org/docs/onFileEnd/\r\n            connection.onFileEnd = function(file) {\r\n                var helper = progressHelper[file.uuid];\r\n                if (!helper) {\r\n                    console.error('No such progress-helper element exist.', file);\r\n                    return;\r\n                }\r\n\r\n                if (file.remoteUserId) {\r\n                    helper = progressHelper[file.uuid][file.remoteUserId];\r\n                    if (!helper) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                var div = helper.div;\r\n                if (file.type.indexOf('image') != -1) {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><img src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"max-width: 80%;\">';\r\n                } else {\r\n                    div.innerHTML = '<a href=\"' + file.url + '\" download=\"' + file.name + '\">Download <strong style=\"color:red;\">' + file.name + '</strong> </a><br /><iframe src=\"' + file.url + '\" title=\"' + file.name + '\" style=\"width: 80%;border: 0;height: inherit;margin-top:1em;\"></iframe>';\r\n                }\r\n            };\r\n\r\n            function updateLabel(progress, label) {\r\n                if (progress.position === -1) {\r\n                    return;\r\n                }\r\n\r\n                var position = +progress.position.toFixed(2).split('.')[1] || 100;\r\n                label.innerHTML = position + '%';\r\n            }\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // TranslationHandler.js\r\n\r\n    var TranslationHandler = (function() {\r\n        function handle(connection) {\r\n            connection.autoTranslateText = false;\r\n            connection.language = 'en';\r\n            connection.googKey = 'AIzaSyCgB5hmFY74WYB-EoWkhr9cAGr6TiTHrEE';\r\n\r\n            // www.RTCMultiConnection.org/docs/Translator/\r\n            connection.Translator = {\r\n                TranslateText: function(text, callback) {\r\n                    // if(location.protocol === 'https:') return callback(text);\r\n\r\n                    var newScript = document.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n\r\n                    var sourceText = encodeURIComponent(text); // escape\r\n\r\n                    var randomNumber = 'method' + connection.token();\r\n                    window[randomNumber] = function(response) {\r\n                        if (response.data && response.data.translations[0] && callback) {\r\n                            callback(response.data.translations[0].translatedText);\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                            console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                            return;\r\n                        }\r\n\r\n                        if (response.error) {\r\n                            console.error(response.error.message);\r\n                            return;\r\n                        }\r\n\r\n                        console.error(response);\r\n                    };\r\n\r\n                    var source = 'https://www.googleapis.com/language/translate/v2?key=' + connection.googKey + '&target=' + (connection.language || 'en-US') + '&callback=window.' + randomNumber + '&q=' + sourceText;\r\n                    newScript.src = source;\r\n                    document.getElementsByTagName('head')[0].appendChild(newScript);\r\n                },\r\n                getListOfLanguages: function(callback) {\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.onreadystatechange = function() {\r\n                        if (xhr.readyState == XMLHttpRequest.DONE) {\r\n                            var response = JSON.parse(xhr.responseText);\r\n\r\n                            if (response && response.data && response.data.languages) {\r\n                                callback(response.data.languages);\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error && response.error.message === 'Daily Limit Exceeded') {\r\n                                console.error('Text translation failed. Error message: \"Daily Limit Exceeded.\"');\r\n                                return;\r\n                            }\r\n\r\n                            if (response.error) {\r\n                                console.error(response.error.message);\r\n                                return;\r\n                            }\r\n\r\n                            console.error(response);\r\n                        }\r\n                    }\r\n                    var url = 'https://www.googleapis.com/language/translate/v2/languages?key=' + connection.googKey + '&target=en';\r\n                    xhr.open('GET', url, true);\r\n                    xhr.send(null);\r\n                }\r\n            };\r\n        }\r\n\r\n        return {\r\n            handle: handle\r\n        };\r\n    })();\r\n\r\n    // _____________________\r\n    // RTCMultiConnection.js\r\n\r\n    (function(connection) {\r\n        forceOptions = forceOptions || {\r\n            useDefaultDevices: true\r\n        };\r\n\r\n        connection.channel = connection.sessionid = (roomid || location.href.replace(/\\/|:|#|\\?|\\$|\\^|%|\\.|`|~|!|\\+|@|\\[|\\||]|\\|*. /g, '').split('\\n').join('').split('\\r').join('')) + '';\r\n\r\n        var mPeer = new MultiPeers(connection);\r\n\r\n        var preventDuplicateOnStreamEvents = {};\r\n        mPeer.onGettingLocalMedia = function(stream, callback) {\r\n            callback = callback || function() {};\r\n\r\n            if (preventDuplicateOnStreamEvents[stream.streamid]) {\r\n                callback();\r\n                return;\r\n            }\r\n            preventDuplicateOnStreamEvents[stream.streamid] = true;\r\n\r\n            try {\r\n                stream.type = 'local';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream);\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n                mediaElement.muted = true;\r\n                mediaElement.volume = 0;\r\n\r\n                if (connection.attachStreams.indexOf(stream) === -1) {\r\n                    connection.attachStreams.push(stream);\r\n                }\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, true, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'local',\r\n                    mediaElement: mediaElement,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra,\r\n                    streamid: stream.streamid,\r\n                    isAudioMuted: true\r\n                };\r\n\r\n                try {\r\n                    setHarkEvents(connection, connection.streamEvents[stream.streamid]);\r\n                    setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                    connection.onstream(connection.streamEvents[stream.streamid]);\r\n                } catch (e) {\r\n                    //\r\n                }\r\n\r\n                callback();\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onGettingRemoteMedia = function(stream, remoteUserId) {\r\n            try {\r\n                stream.type = 'remote';\r\n            } catch (e) {}\r\n\r\n            connection.setStreamEndHandler(stream, 'remote-stream');\r\n\r\n            getRMCMediaElement(stream, function(mediaElement) {\r\n                mediaElement.id = stream.streamid;\r\n\r\n                if (typeof StreamsHandler !== 'undefined') {\r\n                    StreamsHandler.setHandlers(stream, false, connection);\r\n                }\r\n\r\n                connection.streamEvents[stream.streamid] = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    mediaElement: mediaElement,\r\n                    streamid: stream.streamid\r\n                };\r\n\r\n                setMuteHandlers(connection, connection.streamEvents[stream.streamid]);\r\n\r\n                connection.onstream(connection.streamEvents[stream.streamid]);\r\n            }, connection);\r\n        };\r\n\r\n        mPeer.onRemovingRemoteMedia = function(stream, remoteUserId) {\r\n            var streamEvent = connection.streamEvents[stream.streamid];\r\n            if (!streamEvent) {\r\n                streamEvent = {\r\n                    stream: stream,\r\n                    type: 'remote',\r\n                    userid: remoteUserId,\r\n                    extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {},\r\n                    streamid: stream.streamid,\r\n                    mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                };\r\n            }\r\n\r\n            if (connection.peersBackup[streamEvent.userid]) {\r\n                streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n            }\r\n\r\n            connection.onstreamended(streamEvent);\r\n\r\n            delete connection.streamEvents[stream.streamid];\r\n        };\r\n\r\n        mPeer.onNegotiationNeeded = function(message, remoteUserId, callback) {\r\n            callback = callback || function() {};\r\n\r\n            remoteUserId = remoteUserId || message.remoteUserId;\r\n            message = message || '';\r\n\r\n            // usually a message looks like this\r\n            var messageToDeliver = {\r\n                remoteUserId: remoteUserId,\r\n                message: message,\r\n                sender: connection.userid\r\n            };\r\n\r\n            if (message.remoteUserId && message.message && message.sender) {\r\n                // if a code is manually passing required data\r\n                messageToDeliver = message;\r\n            }\r\n\r\n            connectSocket(function() {\r\n                connection.socket.emit(connection.socketMessageEvent, messageToDeliver, callback);\r\n            });\r\n        };\r\n\r\n        function onUserLeft(remoteUserId) {\r\n            connection.deletePeer(remoteUserId);\r\n        }\r\n\r\n        mPeer.onUserLeft = onUserLeft;\r\n        mPeer.disconnectWith = function(remoteUserId, callback) {\r\n            if (connection.socket) {\r\n                connection.socket.emit('disconnect-with', remoteUserId, callback || function() {});\r\n            }\r\n\r\n            connection.deletePeer(remoteUserId);\r\n        };\r\n\r\n        connection.socketOptions = {\r\n            // 'force new connection': true, // For SocketIO version < 1.0\r\n            // 'forceNew': true, // For SocketIO version >= 1.0\r\n            'transport': 'polling' // fixing transport:unknown issues\r\n        };\r\n\r\n        function connectSocket(connectCallback) {\r\n            connection.socketAutoReConnect = true;\r\n\r\n            if (connection.socket) { // todo: check here readySate/etc. to make sure socket is still opened\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (typeof SocketConnection === 'undefined') {\r\n                if (typeof FirebaseConnection !== 'undefined') {\r\n                    window.SocketConnection = FirebaseConnection;\r\n                } else if (typeof PubNubConnection !== 'undefined') {\r\n                    window.SocketConnection = PubNubConnection;\r\n                } else {\r\n                    throw 'SocketConnection.js seems missed.';\r\n                }\r\n            }\r\n\r\n            new SocketConnection(connection, function(s) {\r\n                if (connectCallback) {\r\n                    connectCallback(connection.socket);\r\n                }\r\n            });\r\n        }\r\n\r\n        // 1st paramter is roomid\r\n        // 2rd paramter is a callback function\r\n        connection.openOrJoin = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.checkPresence(roomid, function(isRoomExist, roomid) {\r\n                if (isRoomExist) {\r\n                    connection.sessionid = roomid;\r\n\r\n                    var localPeerSdpConstraints = false;\r\n                    var remotePeerSdpConstraints = false;\r\n                    var isOneWay = !!connection.session.oneway;\r\n                    var isDataOnly = isData(connection.session);\r\n\r\n                    remotePeerSdpConstraints = {\r\n                        OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    localPeerSdpConstraints = {\r\n                        OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                        OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                    }\r\n\r\n                    var connectionDescription = {\r\n                        remoteUserId: connection.sessionid,\r\n                        message: {\r\n                            newParticipationRequest: true,\r\n                            isOneWay: isOneWay,\r\n                            isDataOnly: isDataOnly,\r\n                            localPeerSdpConstraints: localPeerSdpConstraints,\r\n                            remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                        },\r\n                        sender: connection.userid\r\n                    };\r\n\r\n                    beforeJoin(connectionDescription.message, function() {\r\n                        joinRoom(connectionDescription, callback);\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                connection.waitingForLocalMedia = true;\r\n                connection.isInitiator = true;\r\n\r\n                connection.sessionid = roomid || connection.sessionid;\r\n\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // don't allow someone to join this person until he has the media\r\n        connection.waitingForLocalMedia = false;\r\n\r\n        connection.open = function(roomid, callback) {\r\n            callback = callback || function() {};\r\n\r\n            connection.waitingForLocalMedia = true;\r\n            connection.isInitiator = true;\r\n\r\n            connection.sessionid = roomid || connection.sessionid;\r\n\r\n            connectSocket(function() {\r\n                if (isData(connection.session)) {\r\n                    openRoom(callback);\r\n                    return;\r\n                }\r\n\r\n                connection.captureUserMedia(function() {\r\n                    openRoom(callback);\r\n                });\r\n            });\r\n        };\r\n\r\n        // this object keeps extra-data records for all connected users\r\n        // this object is never cleared so you can always access extra-data even if a user left\r\n        connection.peersBackup = {};\r\n\r\n        connection.deletePeer = function(remoteUserId) {\r\n            if (!remoteUserId || !connection.peers[remoteUserId]) {\r\n                return;\r\n            }\r\n\r\n            var eventObject = {\r\n                userid: remoteUserId,\r\n                extra: connection.peers[remoteUserId] ? connection.peers[remoteUserId].extra : {}\r\n            };\r\n\r\n            if (connection.peersBackup[eventObject.userid]) {\r\n                eventObject.extra = connection.peersBackup[eventObject.userid].extra;\r\n            }\r\n\r\n            connection.onleave(eventObject);\r\n\r\n            if (!!connection.peers[remoteUserId]) {\r\n                connection.peers[remoteUserId].streams.forEach(function(stream) {\r\n                    stream.stop();\r\n                });\r\n\r\n                var peer = connection.peers[remoteUserId].peer;\r\n                if (peer && peer.iceConnectionState !== 'closed') {\r\n                    try {\r\n                        peer.close();\r\n                    } catch (e) {}\r\n                }\r\n\r\n                if (connection.peers[remoteUserId]) {\r\n                    connection.peers[remoteUserId].peer = null;\r\n                    delete connection.peers[remoteUserId];\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.rejoin = function(connectionDescription) {\r\n            if (connection.isInitiator || !connectionDescription || !Object.keys(connectionDescription).length) {\r\n                return;\r\n            }\r\n\r\n            var extra = {};\r\n\r\n            if (connection.peers[connectionDescription.remoteUserId]) {\r\n                extra = connection.peers[connectionDescription.remoteUserId].extra;\r\n                connection.deletePeer(connectionDescription.remoteUserId);\r\n            }\r\n\r\n            if (connectionDescription && connectionDescription.remoteUserId) {\r\n                connection.join(connectionDescription.remoteUserId);\r\n\r\n                connection.onReConnecting({\r\n                    userid: connectionDescription.remoteUserId,\r\n                    extra: extra\r\n                });\r\n            }\r\n        };\r\n\r\n        connection.join = function(remoteUserId, options) {\r\n            connection.sessionid = (remoteUserId ? remoteUserId.sessionid || remoteUserId.remoteUserId || remoteUserId : false) || connection.sessionid;\r\n            connection.sessionid += '';\r\n\r\n            var localPeerSdpConstraints = false;\r\n            var remotePeerSdpConstraints = false;\r\n            var isOneWay = false;\r\n            var isDataOnly = false;\r\n\r\n            if ((remoteUserId && remoteUserId.session) || !remoteUserId || typeof remoteUserId === 'string') {\r\n                var session = remoteUserId ? remoteUserId.session || connection.session : connection.session;\r\n\r\n                isOneWay = !!session.oneway;\r\n                isDataOnly = isData(session);\r\n\r\n                remotePeerSdpConstraints = {\r\n                    OfferToReceiveAudio: connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n\r\n                localPeerSdpConstraints = {\r\n                    OfferToReceiveAudio: isOneWay ? !!connection.session.audio : connection.sdpConstraints.mandatory.OfferToReceiveAudio,\r\n                    OfferToReceiveVideo: isOneWay ? !!connection.session.video || !!connection.session.screen : connection.sdpConstraints.mandatory.OfferToReceiveVideo\r\n                };\r\n            }\r\n\r\n            options = options || {};\r\n\r\n            var cb = function() {};\r\n            if (typeof options === 'function') {\r\n                cb = options;\r\n                options = {};\r\n            }\r\n\r\n            if (typeof options.localPeerSdpConstraints !== 'undefined') {\r\n                localPeerSdpConstraints = options.localPeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.remotePeerSdpConstraints !== 'undefined') {\r\n                remotePeerSdpConstraints = options.remotePeerSdpConstraints;\r\n            }\r\n\r\n            if (typeof options.isOneWay !== 'undefined') {\r\n                isOneWay = options.isOneWay;\r\n            }\r\n\r\n            if (typeof options.isDataOnly !== 'undefined') {\r\n                isDataOnly = options.isDataOnly;\r\n            }\r\n\r\n            var connectionDescription = {\r\n                remoteUserId: connection.sessionid,\r\n                message: {\r\n                    newParticipationRequest: true,\r\n                    isOneWay: isOneWay,\r\n                    isDataOnly: isDataOnly,\r\n                    localPeerSdpConstraints: localPeerSdpConstraints,\r\n                    remotePeerSdpConstraints: remotePeerSdpConstraints\r\n                },\r\n                sender: connection.userid\r\n            };\r\n\r\n            beforeJoin(connectionDescription.message, function() {\r\n                connectSocket(function() {\r\n                    joinRoom(connectionDescription, cb);\r\n                });\r\n            });\r\n            return connectionDescription;\r\n        };\r\n\r\n        function joinRoom(connectionDescription, cb) {\r\n            connection.socket.emit('join-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomJoined, error) {\r\n                if (isRoomJoined === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomJoined: ', isRoomJoined, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    if (!!connection.peers[connection.sessionid]) {\r\n                        // on socket disconnect & reconnect\r\n                        return;\r\n                    }\r\n\r\n                    mPeer.onNegotiationNeeded(connectionDescription);\r\n                }\r\n\r\n                if (isRoomJoined === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomJoined: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    // [disabled] retry after 3 seconds\r\n                    false && setTimeout(function() {\r\n                        joinRoom(connectionDescription, cb);\r\n                    }, 3000);\r\n                }\r\n\r\n                cb(isRoomJoined, connection.sessionid, error);\r\n            });\r\n        }\r\n\r\n        connection.publicRoomIdentifier = '';\r\n\r\n        function openRoom(callback) {\r\n            if (connection.enableLogs) {\r\n                console.log('Sending open-room signal to socket.io');\r\n            }\r\n\r\n            connection.waitingForLocalMedia = false;\r\n            connection.socket.emit('open-room', {\r\n                sessionid: connection.sessionid,\r\n                session: connection.session,\r\n                mediaConstraints: connection.mediaConstraints,\r\n                sdpConstraints: connection.sdpConstraints,\r\n                streams: getStreamInfoForAdmin(),\r\n                extra: connection.extra,\r\n                identifier: connection.publicRoomIdentifier,\r\n                password: typeof connection.password !== 'undefined' && typeof connection.password !== 'object' ? connection.password : ''\r\n            }, function(isRoomOpened, error) {\r\n                if (isRoomOpened === true) {\r\n                    if (connection.enableLogs) {\r\n                        console.log('isRoomOpened: ', isRoomOpened, ' roomid: ', connection.sessionid);\r\n                    }\r\n                    callback(isRoomOpened, connection.sessionid);\r\n                }\r\n\r\n                if (isRoomOpened === false) {\r\n                    if (connection.enableLogs) {\r\n                        console.warn('isRoomOpened: ', error, ' roomid: ', connection.sessionid);\r\n                    }\r\n\r\n                    callback(isRoomOpened, connection.sessionid, error);\r\n                }\r\n            });\r\n        }\r\n\r\n        function getStreamInfoForAdmin() {\r\n            try {\r\n                return connection.streamEvents.selectAll('local').map(function(event) {\r\n                    return {\r\n                        streamid: event.streamid,\r\n                        tracks: event.stream.getTracks().length\r\n                    };\r\n                });\r\n            } catch (e) {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        function beforeJoin(userPreferences, callback) {\r\n            if (connection.dontCaptureUserMedia || userPreferences.isDataOnly) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            var localMediaConstraints = {};\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveAudio) {\r\n                localMediaConstraints.audio = connection.mediaConstraints.audio;\r\n            }\r\n\r\n            if (userPreferences.localPeerSdpConstraints.OfferToReceiveVideo) {\r\n                localMediaConstraints.video = connection.mediaConstraints.video;\r\n            }\r\n\r\n            var session = userPreferences.session || connection.session;\r\n\r\n            if (session.oneway && session.audio !== 'two-way' && session.video !== 'two-way' && session.screen !== 'two-way') {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.oneway && session.audio && session.audio === 'two-way') {\r\n                session = {\r\n                    audio: true\r\n                };\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, callback);\r\n                            } else {\r\n                                callback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, callback) : callback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, callback, session);\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getUserMedia = connection.captureUserMedia = function(callback, sessionForced) {\r\n            callback = callback || function() {};\r\n            var session = sessionForced || connection.session;\r\n\r\n            if (connection.dontCaptureUserMedia || isData(session)) {\r\n                callback();\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(screen);\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                var nonScreenSession = {};\r\n                                for (var s in session) {\r\n                                    if (s !== 'screen') {\r\n                                        nonScreenSession[s] = session[s];\r\n                                    }\r\n                                }\r\n                                connection.invokeGetUserMedia(sessionForced, callback, nonScreenSession);\r\n                                return;\r\n                            }\r\n                            callback(stream);\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(sessionForced, callback, session);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.onbeforeunload = function(arg1, dontCloseSocket) {\r\n            if (!connection.closeBeforeUnload) {\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.onNegotiationNeeded({\r\n                    userLeft: true\r\n                }, participant);\r\n\r\n                if (connection.peers[participant] && connection.peers[participant].peer) {\r\n                    connection.peers[participant].peer.close();\r\n                }\r\n\r\n                delete connection.peers[participant];\r\n            });\r\n\r\n            if (!dontCloseSocket) {\r\n                connection.closeSocket();\r\n            }\r\n\r\n            connection.isInitiator = false;\r\n        };\r\n\r\n        if (!window.ignoreBeforeUnload) {\r\n            // user can implement its own version of window.onbeforeunload\r\n            connection.closeBeforeUnload = true;\r\n            window.addEventListener('beforeunload', connection.onbeforeunload, false);\r\n        } else {\r\n            connection.closeBeforeUnload = false;\r\n        }\r\n\r\n        connection.userid = getRandomString();\r\n        connection.changeUserId = function(newUserId, callback) {\r\n            callback = callback || function() {};\r\n            connection.userid = newUserId || getRandomString();\r\n            connection.socket.emit('changed-uuid', connection.userid, callback);\r\n        };\r\n\r\n        connection.extra = {};\r\n        connection.attachStreams = [];\r\n\r\n        connection.session = {\r\n            audio: true,\r\n            video: true\r\n        };\r\n\r\n        connection.enableFileSharing = false;\r\n\r\n        // all values in kbps\r\n        connection.bandwidth = {\r\n            screen: false,\r\n            audio: false,\r\n            video: false\r\n        };\r\n\r\n        connection.codecs = {\r\n            audio: 'opus',\r\n            video: 'VP9'\r\n        };\r\n\r\n        connection.processSdp = function(sdp) {\r\n            // ignore SDP modification if unified-pan is supported\r\n            if (isUnifiedPlanSupportedDefault()) {\r\n                return sdp;\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Safari') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP8') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp8');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'VP9') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'vp9');\r\n            }\r\n\r\n            if (connection.codecs.video.toUpperCase() === 'H264') {\r\n                sdp = CodecsHandler.preferCodec(sdp, 'h264');\r\n            }\r\n\r\n            if (connection.codecs.audio === 'G722') {\r\n                sdp = CodecsHandler.removeNonG722(sdp);\r\n            }\r\n\r\n            if (DetectRTC.browser.name === 'Firefox') {\r\n                return sdp;\r\n            }\r\n\r\n            if (connection.bandwidth.video || connection.bandwidth.screen) {\r\n                sdp = CodecsHandler.setApplicationSpecificBandwidth(sdp, connection.bandwidth, !!connection.session.screen);\r\n            }\r\n\r\n            if (connection.bandwidth.video) {\r\n                sdp = CodecsHandler.setVideoBitrates(sdp, {\r\n                    min: connection.bandwidth.video * 8 * 1024,\r\n                    max: connection.bandwidth.video * 8 * 1024\r\n                });\r\n            }\r\n\r\n            if (connection.bandwidth.audio) {\r\n                sdp = CodecsHandler.setOpusAttributes(sdp, {\r\n                    maxaveragebitrate: connection.bandwidth.audio * 8 * 1024,\r\n                    maxplaybackrate: connection.bandwidth.audio * 8 * 1024,\r\n                    stereo: 1,\r\n                    maxptime: 3\r\n                });\r\n            }\r\n\r\n            return sdp;\r\n        };\r\n\r\n        if (typeof CodecsHandler !== 'undefined') {\r\n            connection.BandwidthHandler = connection.CodecsHandler = CodecsHandler;\r\n        }\r\n\r\n        connection.mediaConstraints = {\r\n            audio: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.audio ? [{\r\n                    bandwidth: connection.bandwidth.audio * 8 * 1024 || 128 * 8 * 1024\r\n                }] : []\r\n            },\r\n            video: {\r\n                mandatory: {},\r\n                optional: connection.bandwidth.video ? [{\r\n                    bandwidth: connection.bandwidth.video * 8 * 1024 || 128 * 8 * 1024\r\n                }, {\r\n                    facingMode: 'user'\r\n                }] : [{\r\n                    facingMode: 'user'\r\n                }]\r\n            }\r\n        };\r\n\r\n        if (DetectRTC.browser.name === 'Firefox') {\r\n            connection.mediaConstraints = {\r\n                audio: true,\r\n                video: true\r\n            };\r\n        }\r\n\r\n        if (!forceOptions.useDefaultDevices && !DetectRTC.isMobileDevice) {\r\n            DetectRTC.load(function() {\r\n                var lastAudioDevice, lastVideoDevice;\r\n                // it will force RTCMultiConnection to capture last-devices\r\n                // i.e. if external microphone is attached to system, we should prefer it over built-in devices.\r\n                DetectRTC.MediaDevices.forEach(function(device) {\r\n                    if (device.kind === 'audioinput' && connection.mediaConstraints.audio !== false) {\r\n                        lastAudioDevice = device;\r\n                    }\r\n\r\n                    if (device.kind === 'videoinput' && connection.mediaConstraints.video !== false) {\r\n                        lastVideoDevice = device;\r\n                    }\r\n                });\r\n\r\n                if (lastAudioDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.audio !== true) {\r\n                            connection.mediaConstraints.audio.deviceId = lastAudioDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.audio = {\r\n                                deviceId: lastAudioDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.audio == true) {\r\n                        connection.mediaConstraints.audio = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.audio.optional) {\r\n                        connection.mediaConstraints.audio.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastAudioDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.audio.optional = optional.concat(connection.mediaConstraints.audio.optional);\r\n                }\r\n\r\n                if (lastVideoDevice) {\r\n                    if (DetectRTC.browser.name === 'Firefox') {\r\n                        if (connection.mediaConstraints.video !== true) {\r\n                            connection.mediaConstraints.video.deviceId = lastVideoDevice.id;\r\n                        } else {\r\n                            connection.mediaConstraints.video = {\r\n                                deviceId: lastVideoDevice.id\r\n                            }\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    if (connection.mediaConstraints.video == true) {\r\n                        connection.mediaConstraints.video = {\r\n                            mandatory: {},\r\n                            optional: []\r\n                        }\r\n                    }\r\n\r\n                    if (!connection.mediaConstraints.video.optional) {\r\n                        connection.mediaConstraints.video.optional = [];\r\n                    }\r\n\r\n                    var optional = [{\r\n                        sourceId: lastVideoDevice.id\r\n                    }];\r\n\r\n                    connection.mediaConstraints.video.optional = optional.concat(connection.mediaConstraints.video.optional);\r\n                }\r\n            });\r\n        }\r\n\r\n        connection.sdpConstraints = {\r\n            mandatory: {\r\n                OfferToReceiveAudio: true,\r\n                OfferToReceiveVideo: true\r\n            },\r\n            optional: [{\r\n                VoiceActivityDetection: false\r\n            }]\r\n        };\r\n\r\n        connection.sdpSemantics = null; // \"unified-plan\" or \"plan-b\", ref: webrtc.org/web-apis/chrome/unified-plan/\r\n        connection.iceCandidatePoolSize = null; // 0\r\n        connection.bundlePolicy = null; // max-bundle\r\n        connection.rtcpMuxPolicy = null; // \"require\" or \"negotiate\"\r\n        connection.iceTransportPolicy = null; // \"relay\" or \"all\"\r\n        connection.optionalArgument = {\r\n            optional: [{\r\n                DtlsSrtpKeyAgreement: true\r\n            }, {\r\n                googImprovedWifiBwe: true\r\n            }, {\r\n                googScreencastMinBitrate: 300\r\n            }, {\r\n                googIPv6: true\r\n            }, {\r\n                googDscp: true\r\n            }, {\r\n                googCpuUnderuseThreshold: 55\r\n            }, {\r\n                googCpuOveruseThreshold: 85\r\n            }, {\r\n                googSuspendBelowMinBitrate: true\r\n            }, {\r\n                googCpuOveruseDetection: true\r\n            }],\r\n            mandatory: {}\r\n        };\r\n\r\n        connection.iceServers = IceServersHandler.getIceServers(connection);\r\n\r\n        connection.candidates = {\r\n            host: true,\r\n            stun: true,\r\n            turn: true\r\n        };\r\n\r\n        connection.iceProtocols = {\r\n            tcp: true,\r\n            udp: true\r\n        };\r\n\r\n        // EVENTs\r\n        connection.onopen = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.info('Data connection has been opened between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onclose = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.warn('Data connection has been closed between you & ', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.onerror = function(error) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error.userid, 'data-error', error);\r\n            }\r\n        };\r\n\r\n        connection.onmessage = function(event) {\r\n            if (!!connection.enableLogs) {\r\n                console.debug('data-message', event.userid, event.data);\r\n            }\r\n        };\r\n\r\n        connection.send = function(data, remoteUserId) {\r\n            connection.peers.send(data, remoteUserId);\r\n        };\r\n\r\n        connection.close = connection.disconnect = connection.leave = function() {\r\n            connection.onbeforeunload(false, true);\r\n        };\r\n\r\n        connection.closeEntireSession = function(callback) {\r\n            callback = callback || function() {};\r\n            connection.socket.emit('close-entire-session', function looper() {\r\n                if (connection.getAllParticipants().length) {\r\n                    setTimeout(looper, 100);\r\n                    return;\r\n                }\r\n\r\n                connection.onEntireSessionClosed({\r\n                    sessionid: connection.sessionid,\r\n                    userid: connection.userid,\r\n                    extra: connection.extra\r\n                });\r\n\r\n                connection.changeUserId(null, function() {\r\n                    connection.close();\r\n                    callback();\r\n                });\r\n            });\r\n        };\r\n\r\n        connection.onEntireSessionClosed = function(event) {\r\n            if (!connection.enableLogs) return;\r\n            console.info('Entire session is closed: ', event.sessionid, event.extra);\r\n        };\r\n\r\n        connection.onstream = function(e) {\r\n            var parentNode = connection.videosContainer;\r\n            parentNode.insertBefore(e.mediaElement, parentNode.firstChild);\r\n            var played = e.mediaElement.play();\r\n\r\n            if (typeof played !== 'undefined') {\r\n                played.catch(function() {\r\n                    /*** iOS 11 doesn't allow automatic play and rejects ***/\r\n                }).then(function() {\r\n                    setTimeout(function() {\r\n                        e.mediaElement.play();\r\n                    }, 2000);\r\n                });\r\n                return;\r\n            }\r\n\r\n            setTimeout(function() {\r\n                e.mediaElement.play();\r\n            }, 2000);\r\n        };\r\n\r\n        connection.onstreamended = function(e) {\r\n            if (!e.mediaElement) {\r\n                e.mediaElement = document.getElementById(e.streamid);\r\n            }\r\n\r\n            if (!e.mediaElement || !e.mediaElement.parentNode) {\r\n                return;\r\n            }\r\n\r\n            e.mediaElement.parentNode.removeChild(e.mediaElement);\r\n        };\r\n\r\n        connection.direction = 'many-to-many';\r\n\r\n        connection.removeStream = function(streamid, remoteUserId) {\r\n            var stream;\r\n            connection.attachStreams.forEach(function(localStream) {\r\n                if (localStream.id === streamid) {\r\n                    stream = localStream;\r\n                }\r\n            });\r\n\r\n            if (!stream) {\r\n                console.warn('No such stream exist.', streamid);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                if (remoteUserId && participant !== remoteUserId) {\r\n                    return;\r\n                }\r\n\r\n                var user = connection.peers[participant];\r\n                try {\r\n                    user.peer.removeStream(stream);\r\n                } catch (e) {}\r\n            });\r\n\r\n            connection.renegotiate();\r\n        };\r\n\r\n        connection.addStream = function(session, remoteUserId) {\r\n            if (!!session.getTracks) {\r\n                if (connection.attachStreams.indexOf(session) === -1) {\r\n                    if (!session.streamid) {\r\n                        session.streamid = session.id;\r\n                    }\r\n\r\n                    connection.attachStreams.push(session);\r\n                }\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                connection.renegotiate(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, function(stream) {\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, function(stream) {\r\n                                    gumCallback(stream);\r\n                                });\r\n                            } else {\r\n                                gumCallback(stream);\r\n                            }\r\n                        });\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                if (session.streamCallback) {\r\n                    session.streamCallback(stream);\r\n                }\r\n\r\n                connection.renegotiate(remoteUserId);\r\n            }\r\n        };\r\n\r\n        connection.invokeGetUserMedia = function(localMediaConstraints, callback, session) {\r\n            if (!session) {\r\n                session = connection.session;\r\n            }\r\n\r\n            if (!localMediaConstraints) {\r\n                localMediaConstraints = connection.mediaConstraints;\r\n            }\r\n\r\n            getUserMediaHandler({\r\n                onGettingLocalMedia: function(stream) {\r\n                    var videoConstraints = localMediaConstraints.video;\r\n                    if (videoConstraints) {\r\n                        if (videoConstraints.mediaSource || videoConstraints.mozMediaSource) {\r\n                            stream.isScreen = true;\r\n                        } else if (videoConstraints.mandatory && videoConstraints.mandatory.chromeMediaSource) {\r\n                            stream.isScreen = true;\r\n                        }\r\n                    }\r\n\r\n                    if (!stream.isScreen) {\r\n                        stream.isVideo = !!getTracks(stream, 'video').length;\r\n                        stream.isAudio = !stream.isVideo && getTracks(stream, 'audio').length;\r\n                    }\r\n\r\n                    mPeer.onGettingLocalMedia(stream, function() {\r\n                        if (typeof callback === 'function') {\r\n                            callback(stream);\r\n                        }\r\n                    });\r\n                },\r\n                onLocalMediaError: function(error, constraints) {\r\n                    mPeer.onLocalMediaError(error, constraints);\r\n                },\r\n                localMediaConstraints: localMediaConstraints || {\r\n                    audio: session.audio ? localMediaConstraints.audio : false,\r\n                    video: session.video ? localMediaConstraints.video : false\r\n                }\r\n            });\r\n        };\r\n\r\n        function applyConstraints(stream, mediaConstraints) {\r\n            if (!stream) {\r\n                if (!!connection.enableLogs) {\r\n                    console.error('No stream to applyConstraints.');\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (mediaConstraints.audio) {\r\n                getTracks(stream, 'audio').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.audio);\r\n                });\r\n            }\r\n\r\n            if (mediaConstraints.video) {\r\n                getTracks(stream, 'video').forEach(function(track) {\r\n                    track.applyConstraints(mediaConstraints.video);\r\n                });\r\n            }\r\n        }\r\n\r\n        connection.applyConstraints = function(mediaConstraints, streamid) {\r\n            if (!MediaStreamTrack || !MediaStreamTrack.prototype.applyConstraints) {\r\n                alert('track.applyConstraints is NOT supported in your browser.');\r\n                return;\r\n            }\r\n\r\n            if (streamid) {\r\n                var stream;\r\n                if (connection.streamEvents[streamid]) {\r\n                    stream = connection.streamEvents[streamid].stream;\r\n                }\r\n                applyConstraints(stream, mediaConstraints);\r\n                return;\r\n            }\r\n\r\n            connection.attachStreams.forEach(function(stream) {\r\n                applyConstraints(stream, mediaConstraints);\r\n            });\r\n        };\r\n\r\n        function replaceTrack(track, remoteUserId, isVideoTrack) {\r\n            if (remoteUserId) {\r\n                mPeer.replaceTrack(track, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.replaceTrack(track, participant, isVideoTrack);\r\n            });\r\n        }\r\n\r\n        connection.replaceTrack = function(session, remoteUserId, isVideoTrack) {\r\n            session = session || {};\r\n\r\n            if (!RTCPeerConnection.prototype.getSenders) {\r\n                connection.addStream(session);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStreamTrack) {\r\n                replaceTrack(session, remoteUserId, isVideoTrack);\r\n                return;\r\n            }\r\n\r\n            if (session instanceof MediaStream) {\r\n                if (getTracks(session, 'video').length) {\r\n                    replaceTrack(getTracks(session, 'video')[0], remoteUserId, true);\r\n                }\r\n\r\n                if (getTracks(session, 'audio').length) {\r\n                    replaceTrack(getTracks(session, 'audio')[0], remoteUserId, false);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (isData(session)) {\r\n                throw 'connection.replaceTrack requires audio and/or video and/or screen.';\r\n                return;\r\n            }\r\n\r\n            if (session.audio || session.video || session.screen) {\r\n                if (session.screen) {\r\n                    if (DetectRTC.browser.name === 'Edge') {\r\n                        navigator.getDisplayMedia({\r\n                            video: true,\r\n                            audio: isAudioPlusTab(connection)\r\n                        }).then(function(screen) {\r\n                            screen.isScreen = true;\r\n                            mPeer.onGettingLocalMedia(screen);\r\n\r\n                            if ((session.audio || session.video) && !isAudioPlusTab(connection)) {\r\n                                connection.invokeGetUserMedia(null, gumCallback);\r\n                            } else {\r\n                                gumCallback(screen);\r\n                            }\r\n                        }, function(error) {\r\n                            console.error('Unable to capture screen on Edge. HTTPs and version 17+ is required.');\r\n                        });\r\n                    } else {\r\n                        connection.invokeGetUserMedia({\r\n                            audio: isAudioPlusTab(connection),\r\n                            video: true,\r\n                            isScreen: true\r\n                        }, (session.audio || session.video) && !isAudioPlusTab(connection) ? connection.invokeGetUserMedia(null, gumCallback) : gumCallback);\r\n                    }\r\n                } else if (session.audio || session.video) {\r\n                    connection.invokeGetUserMedia(null, gumCallback);\r\n                }\r\n            }\r\n\r\n            function gumCallback(stream) {\r\n                connection.replaceTrack(stream, remoteUserId, isVideoTrack || session.video || session.screen);\r\n            }\r\n        };\r\n\r\n        connection.resetTrack = function(remoteUsersIds, isVideoTrack) {\r\n            if (!remoteUsersIds) {\r\n                remoteUsersIds = connection.getAllParticipants();\r\n            }\r\n\r\n            if (typeof remoteUsersIds == 'string') {\r\n                remoteUsersIds = [remoteUsersIds];\r\n            }\r\n\r\n            remoteUsersIds.forEach(function(participant) {\r\n                var peer = connection.peers[participant].peer;\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === true) && peer.lastVideoTrack) {\r\n                    connection.replaceTrack(peer.lastVideoTrack, participant, true);\r\n                }\r\n\r\n                if ((typeof isVideoTrack === 'undefined' || isVideoTrack === false) && peer.lastAudioTrack) {\r\n                    connection.replaceTrack(peer.lastAudioTrack, participant, false);\r\n                }\r\n            });\r\n        };\r\n\r\n        connection.renegotiate = function(remoteUserId) {\r\n            if (remoteUserId) {\r\n                mPeer.renegotiatePeer(remoteUserId);\r\n                return;\r\n            }\r\n\r\n            connection.peers.getAllParticipants().forEach(function(participant) {\r\n                mPeer.renegotiatePeer(participant);\r\n            });\r\n        };\r\n\r\n        connection.setStreamEndHandler = function(stream, isRemote) {\r\n            if (!stream || !stream.addEventListener) return;\r\n\r\n            isRemote = !!isRemote;\r\n\r\n            if (stream.alreadySetEndHandler) {\r\n                return;\r\n            }\r\n            stream.alreadySetEndHandler = true;\r\n\r\n            var streamEndedEvent = 'ended';\r\n\r\n            if ('oninactive' in stream) {\r\n                streamEndedEvent = 'inactive';\r\n            }\r\n\r\n            stream.addEventListener(streamEndedEvent, function() {\r\n                if (stream.idInstance) {\r\n                    currentUserMediaRequest.remove(stream.idInstance);\r\n                }\r\n\r\n                if (!isRemote) {\r\n                    // reset attachStreams\r\n                    var streams = [];\r\n                    connection.attachStreams.forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.attachStreams = streams;\r\n                }\r\n\r\n                // connection.renegotiate();\r\n\r\n                var streamEvent = connection.streamEvents[stream.streamid];\r\n                if (!streamEvent) {\r\n                    streamEvent = {\r\n                        stream: stream,\r\n                        streamid: stream.streamid,\r\n                        type: isRemote ? 'remote' : 'local',\r\n                        userid: connection.userid,\r\n                        extra: connection.extra,\r\n                        mediaElement: connection.streamEvents[stream.streamid] ? connection.streamEvents[stream.streamid].mediaElement : null\r\n                    };\r\n                }\r\n\r\n                if (isRemote && connection.peers[streamEvent.userid]) {\r\n                    // reset remote \"streams\"\r\n                    var peer = connection.peers[streamEvent.userid].peer;\r\n                    var streams = [];\r\n                    peer.getRemoteStreams().forEach(function(s) {\r\n                        if (s.id != stream.id) {\r\n                            streams.push(s);\r\n                        }\r\n                    });\r\n                    connection.peers[streamEvent.userid].streams = streams;\r\n                }\r\n\r\n                if (streamEvent.userid === connection.userid && streamEvent.type === 'remote') {\r\n                    return;\r\n                }\r\n\r\n                if (connection.peersBackup[streamEvent.userid]) {\r\n                    streamEvent.extra = connection.peersBackup[streamEvent.userid].extra;\r\n                }\r\n\r\n                connection.onstreamended(streamEvent);\r\n\r\n                delete connection.streamEvents[stream.streamid];\r\n            }, false);\r\n        };\r\n\r\n        connection.onMediaError = function(error, constraints) {\r\n            if (!!connection.enableLogs) {\r\n                console.error(error, constraints);\r\n            }\r\n        };\r\n\r\n        connection.autoCloseEntireSession = false;\r\n\r\n        connection.filesContainer = connection.videosContainer = document.body || document.documentElement;\r\n        connection.isInitiator = false;\r\n\r\n        connection.shareFile = mPeer.shareFile;\r\n        if (typeof FileProgressBarHandler !== 'undefined') {\r\n            FileProgressBarHandler.handle(connection);\r\n        }\r\n\r\n        if (typeof TranslationHandler !== 'undefined') {\r\n            TranslationHandler.handle(connection);\r\n        }\r\n\r\n        connection.token = getRandomString;\r\n\r\n        connection.onNewParticipant = function(participantId, userPreferences) {\r\n            connection.acceptParticipationRequest(participantId, userPreferences);\r\n        };\r\n\r\n        connection.acceptParticipationRequest = function(participantId, userPreferences) {\r\n            if (userPreferences.successCallback) {\r\n                userPreferences.successCallback();\r\n                delete userPreferences.successCallback;\r\n            }\r\n\r\n            mPeer.createNewPeer(participantId, userPreferences);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            connection.StreamsHandler = StreamsHandler;\r\n        }\r\n\r\n        connection.onleave = function(userid) {};\r\n\r\n        connection.invokeSelectFileDialog = function(callback) {\r\n            var selector = new FileSelector();\r\n            selector.accept = '*.*';\r\n            selector.selectSingleFile(callback);\r\n        };\r\n\r\n        connection.onmute = function(e) {\r\n            if (!e || !e.mediaElement) {\r\n                return;\r\n            }\r\n\r\n            if (e.muteType === 'both' || e.muteType === 'video') {\r\n                e.mediaElement.src = null;\r\n                var paused = e.mediaElement.pause();\r\n                if (typeof paused !== 'undefined') {\r\n                    paused.then(function() {\r\n                        e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                    });\r\n                } else {\r\n                    e.mediaElement.poster = e.snapshot || 'https://cdn.webrtc-experiment.com/images/muted.png';\r\n                }\r\n            } else if (e.muteType === 'audio') {\r\n                e.mediaElement.muted = true;\r\n            }\r\n        };\r\n\r\n        connection.onunmute = function(e) {\r\n            if (!e || !e.mediaElement || !e.stream) {\r\n                return;\r\n            }\r\n\r\n            if (e.unmuteType === 'both' || e.unmuteType === 'video') {\r\n                e.mediaElement.poster = null;\r\n                e.mediaElement.srcObject = e.stream;\r\n                e.mediaElement.play();\r\n            } else if (e.unmuteType === 'audio') {\r\n                e.mediaElement.muted = false;\r\n            }\r\n        };\r\n\r\n        connection.onExtraDataUpdated = function(event) {\r\n            event.status = 'online';\r\n            connection.onUserStatusChanged(event, true);\r\n        };\r\n\r\n        connection.getAllParticipants = function(sender) {\r\n            return connection.peers.getAllParticipants(sender);\r\n        };\r\n\r\n        if (typeof StreamsHandler !== 'undefined') {\r\n            StreamsHandler.onSyncNeeded = function(streamid, action, type) {\r\n                connection.peers.getAllParticipants().forEach(function(participant) {\r\n                    mPeer.onNegotiationNeeded({\r\n                        streamid: streamid,\r\n                        action: action,\r\n                        streamSyncNeeded: true,\r\n                        type: type || 'both'\r\n                    }, participant);\r\n                });\r\n            };\r\n        }\r\n\r\n        connection.connectSocket = function(callback) {\r\n            connectSocket(callback);\r\n        };\r\n\r\n        connection.closeSocket = function() {\r\n            try {\r\n                io.sockets = {};\r\n            } catch (e) {};\r\n\r\n            if (!connection.socket) return;\r\n\r\n            if (typeof connection.socket.disconnect === 'function') {\r\n                connection.socket.disconnect();\r\n            }\r\n\r\n            if (typeof connection.socket.resetProps === 'function') {\r\n                connection.socket.resetProps();\r\n            }\r\n\r\n            connection.socket = null;\r\n        };\r\n\r\n        connection.getSocket = function(callback) {\r\n            if (!callback && connection.enableLogs) {\r\n                console.warn('getSocket.callback paramter is required.');\r\n            }\r\n\r\n            callback = callback || function() {};\r\n\r\n            if (!connection.socket) {\r\n                connectSocket(function() {\r\n                    callback(connection.socket);\r\n                });\r\n            } else {\r\n                callback(connection.socket);\r\n            }\r\n\r\n            return connection.socket; // callback is preferred over return-statement\r\n        };\r\n\r\n        connection.getRemoteStreams = mPeer.getRemoteStreams;\r\n\r\n        var skipStreams = ['selectFirst', 'selectAll', 'forEach'];\r\n\r\n        connection.streamEvents = {\r\n            selectFirst: function(options) {\r\n                return connection.streamEvents.selectAll(options)[0];\r\n            },\r\n            selectAll: function(options) {\r\n                if (!options) {\r\n                    // default will always be all streams\r\n                    options = {\r\n                        local: true,\r\n                        remote: true,\r\n                        isScreen: true,\r\n                        isAudio: true,\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'local') {\r\n                    options = {\r\n                        local: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'remote') {\r\n                    options = {\r\n                        remote: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'screen') {\r\n                    options = {\r\n                        isScreen: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'audio') {\r\n                    options = {\r\n                        isAudio: true\r\n                    };\r\n                }\r\n\r\n                if (options == 'video') {\r\n                    options = {\r\n                        isVideo: true\r\n                    };\r\n                }\r\n\r\n                var streams = [];\r\n                Object.keys(connection.streamEvents).forEach(function(key) {\r\n                    var event = connection.streamEvents[key];\r\n\r\n                    if (skipStreams.indexOf(key) !== -1) return;\r\n                    var ignore = true;\r\n\r\n                    if (options.local && event.type === 'local') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.remote && event.type === 'remote') {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isScreen && event.stream.isScreen) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isVideo && event.stream.isVideo) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.isAudio && event.stream.isAudio) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (options.userid && event.userid === options.userid) {\r\n                        ignore = false;\r\n                    }\r\n\r\n                    if (ignore === false) {\r\n                        streams.push(event);\r\n                    }\r\n                });\r\n\r\n                return streams;\r\n            }\r\n        };\r\n\r\n        connection.socketURL = '/'; // generated via config.json\r\n        connection.socketMessageEvent = 'RTCMultiConnection-Message'; // generated via config.json\r\n        connection.socketCustomEvent = 'RTCMultiConnection-Custom-Message'; // generated via config.json\r\n        connection.DetectRTC = DetectRTC;\r\n\r\n        connection.setCustomSocketEvent = function(customEvent) {\r\n            if (customEvent) {\r\n                connection.socketCustomEvent = customEvent;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('set-custom-socket-event-listener', connection.socketCustomEvent);\r\n        };\r\n\r\n        connection.getNumberOfBroadcastViewers = function(broadcastId, callback) {\r\n            if (!connection.socket || !broadcastId || !callback) return;\r\n\r\n            connection.socket.emit('get-number-of-users-in-specific-broadcast', broadcastId, callback);\r\n        };\r\n\r\n        connection.onNumberOfBroadcastViewersUpdated = function(event) {\r\n            if (!connection.enableLogs || !connection.isInitiator) return;\r\n            console.info('Number of broadcast (', event.broadcastId, ') viewers', event.numberOfBroadcastViewers);\r\n        };\r\n\r\n        connection.onUserStatusChanged = function(event, dontWriteLogs) {\r\n            if (!!connection.enableLogs && !dontWriteLogs) {\r\n                console.info(event.userid, event.status);\r\n            }\r\n        };\r\n\r\n        connection.getUserMediaHandler = getUserMediaHandler;\r\n        connection.multiPeersHandler = mPeer;\r\n        connection.enableLogs = true;\r\n        connection.setCustomSocketHandler = function(customSocketHandler) {\r\n            if (typeof SocketConnection !== 'undefined') {\r\n                SocketConnection = customSocketHandler;\r\n            }\r\n        };\r\n\r\n        // default value should be 15k because [old]Firefox's receiving limit is 16k!\r\n        // however 64k works chrome-to-chrome\r\n        connection.chunkSize = 40 * 1000;\r\n\r\n        connection.maxParticipantsAllowed = 1000;\r\n\r\n        // eject or leave single user\r\n        connection.disconnectWith = mPeer.disconnectWith;\r\n\r\n        // check if room exist on server\r\n        // we will pass roomid to the server and wait for callback (i.e. server's response)\r\n        connection.checkPresence = function(roomid, callback) {\r\n            roomid = roomid || connection.sessionid;\r\n\r\n            if (SocketConnection.name === 'SSEConnection') {\r\n                SSEConnection.checkPresence(roomid, function(isRoomExist, _roomid, extra) {\r\n                    if (!connection.socket) {\r\n                        if (!isRoomExist) {\r\n                            connection.userid = _roomid;\r\n                        }\r\n\r\n                        connection.connectSocket(function() {\r\n                            callback(isRoomExist, _roomid, extra);\r\n                        });\r\n                        return;\r\n                    }\r\n                    callback(isRoomExist, _roomid);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.socket) {\r\n                connection.connectSocket(function() {\r\n                    connection.checkPresence(roomid, callback);\r\n                });\r\n                return;\r\n            }\r\n\r\n            connection.socket.emit('check-presence', roomid + '', function(isRoomExist, _roomid, extra) {\r\n                if (connection.enableLogs) {\r\n                    console.log('checkPresence.isRoomExist: ', isRoomExist, ' roomid: ', _roomid);\r\n                }\r\n                callback(isRoomExist, _roomid, extra);\r\n            });\r\n        };\r\n\r\n        connection.onReadyForOffer = function(remoteUserId, userPreferences) {\r\n            connection.multiPeersHandler.createNewPeer(remoteUserId, userPreferences);\r\n        };\r\n\r\n        connection.setUserPreferences = function(userPreferences) {\r\n            if (connection.dontAttachStream) {\r\n                userPreferences.dontAttachLocalStream = true;\r\n            }\r\n\r\n            if (connection.dontGetRemoteStream) {\r\n                userPreferences.dontGetRemoteStream = true;\r\n            }\r\n\r\n            return userPreferences;\r\n        };\r\n\r\n        connection.updateExtraData = function() {\r\n            connection.socket.emit('extra-data-updated', connection.extra);\r\n        };\r\n\r\n        connection.enableScalableBroadcast = false;\r\n        connection.maxRelayLimitPerUser = 3; // each broadcast should serve only 3 users\r\n\r\n        connection.dontCaptureUserMedia = false;\r\n        connection.dontAttachStream = false;\r\n        connection.dontGetRemoteStream = false;\r\n\r\n        connection.onReConnecting = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('ReConnecting with', event.userid, '...');\r\n            }\r\n        };\r\n\r\n        connection.beforeAddingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        connection.beforeRemovingStream = function(stream) {\r\n            return stream;\r\n        };\r\n\r\n        if (typeof isChromeExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isChromeExtensionAvailable;\r\n        }\r\n\r\n        if (typeof isFirefoxExtensionAvailable !== 'undefined') {\r\n            connection.checkIfChromeExtensionAvailable = isFirefoxExtensionAvailable;\r\n        }\r\n\r\n        if (typeof getChromeExtensionStatus !== 'undefined') {\r\n            connection.getChromeExtensionStatus = getChromeExtensionStatus;\r\n        }\r\n\r\n        connection.modifyScreenConstraints = function(screen_constraints) {\r\n            return screen_constraints;\r\n        };\r\n\r\n        connection.onPeerStateChanged = function(state) {\r\n            if (connection.enableLogs) {\r\n                if (state.iceConnectionState.search(/closed|failed/gi) !== -1) {\r\n                    console.error('Peer connection is closed between you & ', state.userid, state.extra, 'state:', state.iceConnectionState);\r\n                }\r\n            }\r\n        };\r\n\r\n        connection.isOnline = true;\r\n\r\n        listenEventHandler('online', function() {\r\n            connection.isOnline = true;\r\n        });\r\n\r\n        listenEventHandler('offline', function() {\r\n            connection.isOnline = false;\r\n        });\r\n\r\n        connection.isLowBandwidth = false;\r\n        if (navigator && navigator.connection && navigator.connection.type) {\r\n            connection.isLowBandwidth = navigator.connection.type.toString().toLowerCase().search(/wifi|cell/g) !== -1;\r\n            if (connection.isLowBandwidth) {\r\n                connection.bandwidth = {\r\n                    audio: false,\r\n                    video: false,\r\n                    screen: false\r\n                };\r\n\r\n                if (connection.mediaConstraints.audio && connection.mediaConstraints.audio.optional && connection.mediaConstraints.audio.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.audio.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.audio.optional = newArray;\r\n                }\r\n\r\n                if (connection.mediaConstraints.video && connection.mediaConstraints.video.optional && connection.mediaConstraints.video.optional.length) {\r\n                    var newArray = [];\r\n                    connection.mediaConstraints.video.optional.forEach(function(opt) {\r\n                        if (typeof opt.bandwidth === 'undefined') {\r\n                            newArray.push(opt);\r\n                        }\r\n                    });\r\n                    connection.mediaConstraints.video.optional = newArray;\r\n                }\r\n            }\r\n        }\r\n\r\n        connection.getExtraData = function(remoteUserId, callback) {\r\n            if (!remoteUserId) throw 'remoteUserId is required.';\r\n\r\n            if (typeof callback === 'function') {\r\n                connection.socket.emit('get-remote-user-extra-data', remoteUserId, function(extra, remoteUserId, error) {\r\n                    callback(extra, remoteUserId, error);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (!connection.peers[remoteUserId]) {\r\n                if (connection.peersBackup[remoteUserId]) {\r\n                    return connection.peersBackup[remoteUserId].extra;\r\n                }\r\n                return {};\r\n            }\r\n\r\n            return connection.peers[remoteUserId].extra;\r\n        };\r\n\r\n        if (!!forceOptions.autoOpenOrJoin) {\r\n            connection.openOrJoin(connection.sessionid);\r\n        }\r\n\r\n        connection.onUserIdAlreadyTaken = function(useridAlreadyTaken, yourNewUserId) {\r\n            // via #683\r\n            connection.close();\r\n            connection.closeSocket();\r\n\r\n            connection.isInitiator = false;\r\n            connection.userid = connection.token();\r\n\r\n            connection.join(connection.sessionid);\r\n\r\n            if (connection.enableLogs) {\r\n                console.warn('Userid already taken.', useridAlreadyTaken, 'Your new userid:', connection.userid);\r\n            }\r\n        };\r\n\r\n        connection.trickleIce = true;\r\n        connection.version = '3.6.9';\r\n\r\n        connection.onSettingLocalDescription = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.info('Set local description for remote user', event.userid);\r\n            }\r\n        };\r\n\r\n        connection.resetScreen = function() {\r\n            sourceId = null;\r\n            if (DetectRTC && DetectRTC.screen) {\r\n                delete DetectRTC.screen.sourceId;\r\n            }\r\n\r\n            currentUserMediaRequest = {\r\n                streams: [],\r\n                mutex: false,\r\n                queueRequests: []\r\n            };\r\n        };\r\n\r\n        // if disabled, \"event.mediaElement\" for \"onstream\" will be NULL\r\n        connection.autoCreateMediaElement = true;\r\n\r\n        // set password\r\n        connection.password = null;\r\n\r\n        // set password\r\n        connection.setPassword = function(password, callback) {\r\n            callback = callback || function() {};\r\n            if (connection.socket) {\r\n                connection.socket.emit('set-password', password, callback);\r\n            } else {\r\n                connection.password = password;\r\n                callback(true, connection.sessionid, null);\r\n            }\r\n        };\r\n\r\n        connection.onSocketDisconnect = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is closed');\r\n            }\r\n        };\r\n\r\n        connection.onSocketError = function(event) {\r\n            if (connection.enableLogs) {\r\n                console.warn('socket.io connection is failed');\r\n            }\r\n        };\r\n\r\n        // error messages\r\n        connection.errors = {\r\n            ROOM_NOT_AVAILABLE: 'Room not available',\r\n            INVALID_PASSWORD: 'Invalid password',\r\n            USERID_NOT_AVAILABLE: 'User ID does not exist',\r\n            ROOM_PERMISSION_DENIED: 'Room permission denied',\r\n            ROOM_FULL: 'Room full',\r\n            DID_NOT_JOIN_ANY_ROOM: 'Did not join any room yet',\r\n            INVALID_SOCKET: 'Invalid socket',\r\n            PUBLIC_IDENTIFIER_MISSING: 'publicRoomIdentifier is required',\r\n            INVALID_ADMIN_CREDENTIAL: 'Invalid username or password attempted'\r\n        };\r\n    })(this);\r\n\r\n};\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = exports = RTCMultiConnection;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RTCMultiConnection', [], function() {\r\n        return RTCMultiConnection;\r\n    });\r\n}\n"]},"metadata":{},"sourceType":"script"}